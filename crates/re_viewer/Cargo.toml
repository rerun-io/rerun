[package]
name = "re_viewer"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
publish = false
include = [
  "../../LICENSE-APACHE",
  "../../LICENSE-MIT",
  "**/*.rs",
  "Cargo.toml",
  "data/*",
]


[lib]
crate-type = ["cdylib", "rlib"]


[features]
default = []


[dependencies]
re_arrow_store = { path = "../re_arrow_store" }
re_data_store = { path = "../re_data_store", features = ["serde"] }
re_error = { path = "../re_error" }
re_format = { path = "../re_format" }
re_log = { path = "../re_log" }
re_log_types = { path = "../re_log_types", features = ["glam", "save", "load"] }
re_memory = { path = "../re_memory" }
re_query = { path = "../re_query" }
re_renderer = { path = "../re_renderer" }
re_smart_channel = { path = "../re_smart_channel" }
re_string_interner = { path = "../re_string_interner" }
re_tensor_ops = { path = "../re_tensor_ops" }
re_ui = { path = "../re_ui" }
re_ws_comms = { path = "../re_ws_comms", features = ["client"] }

ahash = "0.8"
anyhow.workspace = true
bytemuck = { version = "1.11", features = ["extern_crate_alloc"] }
cgmath = { version = "0.18", features = ["mint"] }
eframe = { version = "0.20", default-features = false, features = [
  "default_fonts",
  "persistence",
  "puffin",
  "wgpu",
] }
egui = { version = "0.20", features = ["extra_debug_asserts", "tracing"] }
egui_dock = { version = "0.3", features = ["serde"] }
egui_extras = { version = "0.20", features = ["tracing"] }
egui-notify = "0.5"
egui-wgpu = "0.20"
enumset = "1.0.12"
glam = { version = "0.20", features = [
  "mint",
] } # can't update glam until a new version of `macaw` is released
half = "1.8"
image = { version = "0.24", default-features = false, features = [
  "jpeg",
  "png",
] }
instant = { version = "0.1", features = ["wasm-bindgen"] }
itertools = "0.10"
lazy_static.workspace = true
macaw = { version = "0.17", features = ["with_serde"] }
mint = "0.5"
ndarray = "0.15"
nohash-hasher = "0.2"
ordered-float = { version = "3.2", features = ["serde"] }
poll-promise = "0.1"
rand = { version = "0.8", features = ["small_rng"] }
rfd = "0.10"
serde = { version = "1", features = ["derive"] }
smallvec = "1.10"
uuid = { version = "1.1", features = ["serde", "v4", "js"] }
vec1 = "1.8"
wgpu = "0.14"

# native dependencies:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
arboard = { version = "3.2", default-features = false, features = [
  "image-data",
] }
ctrlc = { version = "3.0", features = ["termination"] }
puffin_http = "0.11"
puffin.workspace = true

# web dependencies:
[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-wasm = "0.2"
wasm-bindgen-futures = "0.4"
