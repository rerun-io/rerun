[package]
name = "re_viewer"
authors.workspace = true
description = "The Rerun viewer"
edition.workspace = true
homepage.workspace = true
license.workspace = true
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true
include = [
  "../../LICENSE-APACHE",
  "../../LICENSE-MIT",
  "**/*.rs",
  "Cargo.toml",
  "data/*",
]

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]


[lib]
crate-type = ["cdylib", "rlib"]


[features]
default = ["analytics", "webgl"]

## Enable telemetry using our analytics SDK.
analytics = ["dep:re_analytics"]

## Render using webgl instead of webgpu on wasm builds.
webgl = ["re_renderer/webgl"]

[dependencies]
# Internal:
re_arrow_store.workspace = true
re_build_info.workspace = true
re_data_store = { workspace = true, features = ["serde"] }
re_data_ui.workspace = true
re_error.workspace = true
re_format.workspace = true
re_log_encoding = { workspace = true, features = ["decoder", "encoder"] }
re_log_types = { workspace = true, features = ["ecolor", "glam", "image"] }
re_log.workspace = true
re_memory.workspace = true
re_query.workspace = true
re_renderer = { workspace = true, default-features = false, features = [
  "arrow",
  "import-gltf",
  "import-obj",
  "serde",
] }
re_smart_channel.workspace = true
re_tensor_ops.workspace = true
re_ui = { workspace = true, features = ["eframe"] }
re_viewer_context.workspace = true
re_ws_comms = { workspace = true, features = ["client"] }

# Internal (optional):
re_analytics = { workspace = true, optional = true }


# External
ahash.workspace = true
anyhow.workspace = true
arrow2.workspace = true
arrow2_convert.workspace = true
bytemuck = { version = "1.11", features = ["extern_crate_alloc"] }
cfg-if.workspace = true
eframe = { workspace = true, default-features = false, features = [
  "default_fonts",
  "persistence",
  "puffin",
  "wgpu",
] }
egui.workspace = true
egui_extras.workspace = true
egui_tiles.workspace = true
egui-wgpu.workspace = true
enumset.workspace = true
glam = { workspace = true, features = [
  "mint",
] } # can't update glam until a new version of `macaw` is released
half.workspace = true
image = { workspace = true, default-features = false, features = [
  "jpeg",
  "png",
] }
itertools = { workspace = true }
lazy_static.workspace = true
macaw = { workspace = true, features = ["with_serde"] }
ndarray = "0.15"
nohash-hasher = "0.2"
poll-promise = "0.2"
rfd.workspace = true
rmp-serde = { version = "1.1" }
serde = { version = "1", features = ["derive"] }
slotmap.workspace = true
smallvec = { workspace = true, features = ["serde"] }
thiserror.workspace = true
time = { workspace = true, features = ["formatting"] }
vec1 = "1.8"
web-time.workspace = true
wgpu.workspace = true

# native dependencies:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
puffin_http = "0.12"
puffin.workspace = true

[target.'cfg(any(target_os = "macos"))'.dependencies]
cocoa = "0.24.1"
objc = "0.2.7"

[target.'cfg(any(target_os = "windows"))'.dependencies]
winapi = "0.3.9"

# web dependencies:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3.52", features = ["Window"] }

[build-dependencies]
re_build_build_info.workspace = true
