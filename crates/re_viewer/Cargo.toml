[package]
name = "re_viewer"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false


[lib]
crate-type = ["cdylib", "rlib"]


[features]
default = ["puffin", "glow"]

## Add support for the [`puffin`](https://github.com/EmbarkStudios/puffin) profiler.
puffin = [
  "dep:puffin",
  "dep:puffin_http",
  "eframe/puffin",
  "re_log_types/puffin",
]

#! #### Rendering backends
#! You must enable either `glow` or `wgpu`.
## Enable the [`glow`](https://crates.io/crates/glow) renderer.
glow = [
  "eframe/glow",
  "dep:egui_glow",
  "dep:glow",
  "dep:three-d",
  "dep:three-d-asset",
]

## Enable the [`wgpu`](https://crates.io/crates/wgpu) renderer.
wgpu = ["eframe/wgpu", "dep:egui-wgpu", "dep:re_renderer", "dep:wgpu"]


[dependencies]
re_data_store = { path = "../re_data_store", features = ["puffin", "serde"] }
re_error = { path = "../re_error" }
re_log = { path = "../re_log" }
re_log_types = { path = "../re_log_types", features = ["glam", "save", "load"] }
re_string_interner = { path = "../re_string_interner" }
re_tensor_ops = { path = "../re_tensor_ops" }
re_ws_comms = { path = "../re_ws_comms", features = ["client"] }
# TODO(cmc): remove the hardcoded `puffin` feature once re_renderer isn't optional anymore.
re_renderer = { path = "../re_renderer", optional = true, features = [
  "puffin",
] }

eframe = { version = "0.19", default-features = false, features = [
  "default_fonts",
  "persistence",
] }
egui = { version = "0.19", features = ["extra_debug_asserts", "tracing"] }
egui_extras = { version = "0.19", features = ["tracing"] }

ahash = "0.8"
anyhow = "1.0"
bytemuck = { version = "1.11", features = ["extern_crate_alloc"] }
cgmath = { version = "0.18", features = ["mint"] }
document-features = "0.2"
egui_dock = { git = "https://github.com/rerun-io/egui_dock", rev = "5f5a877a34d17ad31640b5a1a2eb771aff26a3a1", features = [
  "serde",
] } # 2022-10-07
egui-notify = "0.4"
fixed = { version = "1.17", features = ["serde"] }
glam = { version = "0.20", features = [
  "mint",
] } # can't update glam until a new version of `macaw` is released
image = { version = "0.24", default-features = false, features = [
  "jpeg",
  "png",
] }
instant = { version = "0.1", features = ["wasm-bindgen"] }
itertools = "0.10"
lazy_static = "1.4.0"
macaw = { version = "0.17", features = ["with_serde"] }
mint = "0.5"
ndarray = "0.15"
nohash-hasher = "0.2"
poll-promise = "0.1"
rand = { version = "0.8", features = ["small_rng"] }
rfd = "0.10"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
smallvec = "1.10"
typenum = "1.15"
uuid = { version = "1.1", features = ["serde", "v4", "js"] }
vec1 = "1.8"

# Optional dependencies:
egui_glow = { version = "0.19", optional = true }
glow = { version = "0.11", optional = true }
three-d = { version = "0.13.0", optional = true, default-features = false }
three-d-asset = { version = "0.3.0", optional = true, default-features = false, features = [
  "gltf",
  "image",
  "jpeg",
  "obj",
  "png",
] }

egui-wgpu = { version = "0.19", optional = true }
wgpu = { version = "0.14", optional = true }


# native dependencies:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
arboard = { version = "3.2", default-features = false, features = [
  "image-data",
] }
ctrlc = { version = "3.0", features = ["termination"] }
puffin = { version = "0.14", optional = true }
puffin_http = { version = "0.11", optional = true }

# web dependencies:
[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
tracing-wasm = "0.2"
wasm-bindgen-futures = "0.4"
