[package]
name = "re_query2"
authors.workspace = true
description = "Temporary crate meant to replace re_query"
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
# TODO(cmc): Replace re_query with this crate. Never publish this one.
publish = false
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true


[features]
default = []

## Enable (de)serialization using serde.
serde = ["dep:serde"]

## Enable codegen helper binaries (generates ClampedZip & RangeZip implementations).
codegen = ["unindent"]


[dependencies]
# Rerun dependencies:
re_data_store.workspace = true
re_format.workspace = true
re_format_arrow.workspace = true
re_log_types.workspace = true
re_types_core.workspace = true
re_log.workspace = true
re_tracing.workspace = true
re_tuid.workspace = true

# External dependencies:
ahash.workspace = true
anyhow.workspace = true
arrow2.workspace = true
backtrace.workspace = true
document-features.workspace = true
itertools = { workspace = true }
nohash-hasher.workspace = true
serde = { workspace = true, features = ["derive", "rc"], optional = true }
smallvec.workspace = true
static_assertions.workspace = true
thiserror.workspace = true

# Optional:
unindent = { workspace = true, optional = true }


[dev-dependencies]
re_types = { workspace = true, features = ["datagen"] }

criterion.workspace = true
itertools = { workspace = true }
mimalloc.workspace = true
rand = { workspace = true, features = ["std", "std_rng"] }
similar-asserts.workspace = true


[lib]
bench = false


[[bin]]
name = "clamped_zip"
required-features = ["codegen"]


[[bin]]
name = "range_zip"
required-features = ["codegen"]


[[bench]]
name = "latest_at"
harness = false
