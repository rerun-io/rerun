[package]
name = "re_ws_comms"
authors.workspace = true
description = "WebSocket communication library (encoding, decoding, client, server) between a Rerun server and viewer"
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = true


[features]
## Enable the client (viewer-side).
client = ["ewebsock"]

## Enable the server.
server = [
  "dep:futures-channel",
  "dep:futures-util",
  "dep:parking_lot",
  "dep:re_smart_channel",
  "dep:tokio-tungstenite",
  "dep:tokio",
  "tungstenite",
]

## Enable encryption using TLS support (`wss://`).
tls = [
  "ewebsock/tls",
  "tungstenite/rustls-tls-webpki-roots", # TODO(emilk): there is some problem with this. check alternative tungstenite tls features
]


[dependencies]
re_log.workspace = true
re_log_types = { workspace = true, features = ["serde"] }
re_tracing.workspace = true

anyhow.workspace = true
bincode = "1.3"
document-features = "0.2"
thiserror.workspace = true

# Client:
ewebsock = { version = "0.2", optional = true }

# Server:
re_smart_channel = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
futures-channel = { version = "0.3", optional = true }
futures-util = { version = "0.3", optional = true, default-features = false, features = [
  "sink",
  "std",
] }
parking_lot = { workspace = true, optional = true }
tokio-tungstenite = { version = "0.17.1", optional = true }
tokio = { workspace = true, optional = true, features = [
  "io-std",
  "macros",
  "net",
  "rt-multi-thread",
  "sync",
  "time",
] }
tungstenite = { version = "0.17", optional = true, default-features = false }
