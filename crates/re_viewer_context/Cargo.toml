[package]
authors.workspace = true
description = "Rerun viewer state that is shared with the viewer's code components."
edition.workspace = true
homepage.workspace = true
license.workspace = true
name = "re_viewer_context"
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true
include = ["../../LICENSE-APACHE", "../../LICENSE-MIT", "**/*.rs", "Cargo.toml"]

[package.metadata.docs.rs]
all-features = true

[dependencies]
re_arrow_store.workspace = true
re_data_source.workspace = true
re_data_store = { workspace = true, features = ["serde"] }
re_log_types.workspace = true
re_log.workspace = true
re_query.workspace = true
re_renderer.workspace = true
re_string_interner.workspace = true
re_tracing.workspace = true
re_types = { workspace = true, features = ["ecolor", "glam", "image"] }
re_ui.workspace = true

ahash.workspace = true
anyhow.workspace = true
bytemuck.workspace = true
egui-wgpu.workspace = true
egui.workspace = true
egui_tiles.workspace = true
glam.workspace = true
half.workspace = true
itertools.workspace = true
lazy_static.workspace = true
macaw.workspace = true
ndarray.workspace = true
nohash-hasher.workspace = true
once_cell.workspace = true
parking_lot = { workspace = true, features = ["serde"] }
serde.workspace = true
slotmap.workspace = true
smallvec.workspace = true
thiserror.workspace = true
uuid = { workspace = true, features = ["serde", "v4", "js"] }
wgpu.workspace = true

# Native only dependencies.
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
arboard = { workspace = true, default-features = false, features = [
  "image-data",
] }
