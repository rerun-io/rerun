[package]
name = "re_auth"
description = "Authentication helpers for Rerun"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
publish = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[lints]
workspace = true

[features]
cli = [
  "dep:base64",
  "dep:indicatif",
  "dep:serde",
  "dep:serde_json",
  "dep:tiny_http",
  "dep:url",
  "dep:webbrowser",

  "workos",
]

workos = [
  "dep:base64",
  "dep:const_format",
  "dep:directories",
  "dep:ehttp",
  "dep:serde",
  "dep:serde_json",
]

[dependencies]
re_log.workspace = true

jsonwebtoken.workspace = true
thiserror.workspace = true
tonic.workspace = true

base64 = { workspace = true, optional = true }
const_format = { workspace = true, optional = true }
directories = { workspace = true, optional = true }
indicatif = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
tiny_http = { workspace = true, optional = true }
url = { workspace = true, optional = true }
webbrowser = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
base64.workspace = true
rand.workspace = true
serde.workspace = true
ehttp = { workspace = true, optional = true, features = [
  "json",
  "native-async",
] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
ehttp = { workspace = true, optional = true, features = ["json"] }

[dev-dependencies]
rand = { workspace = true, features = ["std", "std_rng"] }
