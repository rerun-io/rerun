[package]
name = "re_log_types"
authors.workspace = true
description = "The different types that make up the rerun log format."
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = true


[features]
default = []

## Enables the `datagen` module, which exposes a number of tools for generating random data for
## tests and benchmarks.
arrow_datagen = ["dep:rand"]

## Enable conversions
ecolor = ["dep:ecolor"]

## Add support for some math operations using [`glam`](https://crates.io/crates/glam/).
glam = ["dep:glam", "dep:macaw"]

## Integration with the [`image`](https://crates.io/crates/image/) crate.
image = ["dep:ecolor", "dep:image"]

## Enable (de)serialization using serde.
serde = [
  "dep:rmp-serde",
  "dep:serde",
  "dep:serde_bytes",
  "half/serde",
  "re_string_interner/serde",
  "re_tuid/serde",
]


[dependencies]

# Rerun
re_format.workspace = true
re_log.workspace = true
re_string_interner.workspace = true
re_tuid = { workspace = true, features = ["arrow2_convert"] }

# External
ahash.workspace = true
array-init = "2.1.0"
arrow2 = { workspace = true, features = [
  "io_ipc",
  "io_print",
  "compute_concatenate",
] }
arrow2_convert.workspace = true
bytemuck = "1.11"
document-features = "0.2"
fixed = { version = "1.17", default-features = false, features = ["serde"] }
half = { workspace = true, features = ["bytemuck"] }
itertools = { workspace = true }
instant = { version = "0.1" }
lazy_static.workspace = true
ndarray.workspace = true
nohash-hasher = "0.2"
num-derive = "0.3"
num-traits = "0.2"
smallvec.workspace = true
thiserror.workspace = true
time = { workspace = true, features = ["formatting", "macros"] }
typenum = "1.15"
uuid = { version = "1.1", features = ["serde", "v4", "js"] }


# Optional dependencies:
ecolor = { workspace = true, optional = true }
glam = { workspace = true, optional = true }
image = { workspace = true, optional = true, default-features = false, features = [
  "jpeg",
] }
macaw = { workspace = true, optional = true }
rand = { version = "0.8", optional = true }
rmp-serde = { version = "1.1", optional = true }
serde = { version = "1", optional = true, features = ["derive", "rc"] }
serde_bytes = { version = "0.11", optional = true }

# Native dependencies:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
crossbeam.workspace = true
puffin.workspace = true


[dev-dependencies]
similar-asserts = "1.4.2"
