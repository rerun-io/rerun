[package]
name = "re_log_types"
authors.workspace = true
description = "The basic building blocks of the Rerun data types and tables."
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true

[package.metadata.cargo-machete]
ignored = [
  "num-traits", # Needed for `num-derive`'s macros to work.
  "half",       # Needed so that `fixed` is pinned at the right version.
]


[features]
default = []

## Enable (de)serialization using serde.
serde = [
  "dep:serde",
  "dep:serde_bytes",
  "re_string_interner/serde",
  "re_tuid/serde",
  "re_types_core/serde",
]

[dependencies]

# Rerun
re_format.workspace = true
re_format_arrow.workspace = true
re_log.workspace = true
re_string_interner.workspace = true
re_tracing.workspace = true
re_tuid.workspace = true
re_types_core.workspace = true

# External
ahash.workspace = true
anyhow.workspace = true
arrow2 = { workspace = true, features = [
  "io_ipc",
  "io_print",
  "compute_concatenate",
] }
backtrace.workspace = true
bytemuck.workspace = true
clean-path.workspace = true
document-features.workspace = true
fixed = { workspace = true, default-features = false, features = ["serde"] }
# `fixed` depends on `half`, so even though `half` is not directly used in this crate,
# we keep it as a direct dependency to ensure it stays pinned to the right version
half.workspace = true
itertools.workspace = true
natord.workspace = true
nohash-hasher.workspace = true
num-derive.workspace = true
num-traits.workspace = true
similar-asserts.workspace = true
smallvec.workspace = true
static_assertions.workspace = true
thiserror.workspace = true
time = { workspace = true, features = ["formatting", "macros", "local-offset"] }
typenum.workspace = true
uuid = { workspace = true, features = ["serde", "v4", "js"] }
web-time.workspace = true


# Optional dependencies:
serde = { workspace = true, optional = true, features = ["derive", "rc"] }
serde_bytes = { workspace = true, optional = true }

# Native dependencies:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
crossbeam.workspace = true


[dev-dependencies]
criterion.workspace = true
mimalloc.workspace = true
similar-asserts.workspace = true


[[bench]]
name = "vec_deque_ext"
harness = false
