[package]
name = "re_log_types"
authors.workspace = true
description = "The different types that make up the rerun log format."
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = true


[features]
default = []

## Enable (de)serialization using serde.
serde = [
  "dep:rmp-serde",
  "dep:serde",
  "dep:serde_bytes",
  "re_string_interner/serde",
  "re_tuid/serde",
]


[dependencies]

# Rerun
re_format.workspace = true
re_log.workspace = true
re_string_interner.workspace = true
re_tracing.workspace = true
re_tuid = { workspace = true, features = ["arrow2_convert"] }

# External
ahash.workspace = true
arrow2 = { workspace = true, features = [
  "io_ipc",
  "io_print",
  "compute_concatenate",
] }
arrow2_convert.workspace = true
document-features = "0.2"
fixed = { version = "1.17", default-features = false, features = ["serde"] }
itertools = { workspace = true }
web-time.workspace = true
nohash-hasher = "0.2"
num-derive = "0.3"
num-traits = "0.2"
smallvec.workspace = true
thiserror.workspace = true
time = { workspace = true, features = ["formatting", "macros"] }
typenum = "1.15"
uuid = { version = "1.1", features = ["serde", "v4", "js"] }


# Optional dependencies:
rmp-serde = { version = "1.1", optional = true }
serde = { version = "1", optional = true, features = ["derive", "rc"] }
serde_bytes = { version = "0.11", optional = true }

# Native dependencies:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
crossbeam.workspace = true


[dev-dependencies]
similar-asserts = "1.4.2"
