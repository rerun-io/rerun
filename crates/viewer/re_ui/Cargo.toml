[package]
authors.workspace = true
description = "Rerun GUI theme and helpers, built around egui"
edition.workspace = true
homepage.workspace = true
license = "(MIT OR Apache-2.0) AND OFL-1.1"
name = "re_ui"
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true
include = [
  "../../Cargo.lock",
  "../../LICENSE-APACHE",
  "../../LICENSE-MIT",
  "**/*.rs",
  "Cargo.toml",
  "data/*",
]

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true


[features]
default = []

## Enable anonymized telemetry using our analytics SDK.
analytics = ["dep:re_analytics"]

## Enable helpers for testing
testing = ["dep:egui_kittest"]

[dependencies]
re_analytics = { workspace = true, optional = true }
re_entity_db.workspace = true # syntax-highlighting for InstancePath. TODO(emilk): move InstancePath
re_format.workspace = true
re_log.workspace = true
re_log_types.workspace = true # syntax-highlighting for EntityPath
re_tracing.workspace = true

ahash.workspace = true
anyhow.workspace = true
eframe = { workspace = true, default-features = false, features = ["wgpu"] }
egui_commonmark = { workspace = true, features = ["pulldown_cmark"] }
egui_extras.workspace = true
egui_tiles.workspace = true
egui.workspace = true
getrandom.workspace = true
itertools.workspace = true
jiff.workspace = true
num-traits.workspace = true
parking_lot.workspace = true
ron.workspace = true
serde = { workspace = true, features = ["derive"] }
smallvec.workspace = true
strum_macros.workspace = true
strum.workspace = true
sublime_fuzzy.workspace = true
url.workspace = true


egui_kittest = { workspace = true, optional = true }

# Native
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
notify.workspace = true # Only used with the `hot_reload_design_tokens` feature

# Mac-specific
[target.'cfg(target_os = "macos")'.dependencies]
objc2-app-kit.workspace = true
raw-window-handle.workspace = true


[dev-dependencies]
egui_kittest.workspace = true
rand = { workspace = true, features = ["std"] }


[build-dependencies]
re_build_tools.workspace = true
