[package]
name = "re_query_cache"
authors.workspace = true
description = "Caching datastructures for re_query"
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true


[features]
default = ["to_archetype"]

## Implements `ToArchetype<A>` for all builtin archetypes on `CachedLatestAtResults`.
to_archetype = ["dep:re_types", "dep:re_types_blueprint"]

[dependencies]
# Rerun dependencies:
re_data_store.workspace = true
re_error.workspace = true
re_format.workspace = true
re_log.workspace = true
re_log_types.workspace = true
re_query2.workspace = true
re_tracing.workspace = true
re_types_core.workspace = true

# Rerun dependencies (optional):
re_types = { workspace = true, optional = true }
re_types_blueprint = { workspace = true, optional = true }

# External dependencies:
ahash.workspace = true
anyhow.workspace = true
backtrace.workspace = true
indent.workspace = true
indexmap.workspace = true
itertools.workspace = true
nohash-hasher.workspace = true
parking_lot.workspace = true
paste.workspace = true
seq-macro.workspace = true
web-time.workspace = true


[dev-dependencies]
re_types = { workspace = true, features = ["datagen"] }

criterion.workspace = true
mimalloc.workspace = true
rand = { workspace = true, features = ["std", "std_rng"] }
similar-asserts.workspace = true


[lib]
bench = false


[[example]]
name = "latest_at_archetype"
required-features = ["to_archetype"]


[[bench]]
name = "flat_vec_deque"
harness = false

[[bench]]
name = "latest_at"
harness = false
