[package]
name = "rerun_sdk"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = ["re_viewer"]

## Support for the viewer
re_viewer = ["dep:re_viewer", "dep:eframe"]

## Support serving a web viewer over HTTP.
##
## Enabling this adds quite a bit to the compile time and binary size,
## since it requires compiling and bundling the viewer as wasm.
web = ["dep:re_ws_comms", "dep:re_web_server", "dep:webbrowser"]


[dependencies]
re_error = { path = "../re_error" }
re_log = { path = "../re_log" }
re_log_types = { path = "../re_log_types" }
re_memory = { path = "../re_memory" }
re_sdk_comms = { path = "../re_sdk_comms", features = ["client"] }
re_smart_channel = { path = "../re_smart_channel" }

arrow2.workspace = true
crossbeam = "0.8"
document-features = "0.2"
nohash-hasher = "0.2"
once_cell = "1.12"

# Optional dependencies:
re_ws_comms = { path = "../re_ws_comms", optional = true, features = [
  "server",
] }
re_viewer = { path = "../re_viewer", default-features = false, optional = true }
re_web_server = { path = "../re_web_server", optional = true }

eframe = { version = "0.20", default-features = false, optional = true }
webbrowser = { version = "0.8", optional = true }

# Native dependencies:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }

[dev-dependencies]
arrow2_convert.workspace = true
rand = "0.8"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
clap = { version = "4.0", features = ["derive"] }
mimalloc = "0.1.29"
tracing-subscriber = "0.3"
