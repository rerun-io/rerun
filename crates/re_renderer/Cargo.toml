[package]
name = "re_renderer"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = ["import-obj", "import-gltf"]

import-obj = ["dep:tobj"]
import-gltf = ["dep:gltf"]

[dependencies]
re_error = { path = "../re_error" }
re_log = { path = "../re_log" }

ahash = "0.8"
anyhow.workspace = true
bitflags = "1.3"
bytemuck = { version = "1.12", features = ["derive"] }
clean-path = "0.2"
ecolor = { workspace = true, features = ["bytemuck"] }
glam = { version = "0.20", features = [
  "bytemuck",
] } # can't upgrade glam until macaw gets a new version using glam 0.21
half = { version = "2.1", features = ["bytemuck"] }
itertools = "0.10"
macaw = "0.17.2"
memoffset = "0.7"
ordered-float = "3.2"
parking_lot = "0.12"
slotmap = "1.0.6"
smallvec = "1.10"
static_assertions = "1.1"
thiserror.workspace = true
type-map = "0.5"
unindent = "0.1"

# optional
gltf = { version = "1.0", optional = true }
serde = { version = "1", features = ["derive"], optional = true }
tobj = { version = "3.2", optional = true }
# native
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
crossbeam = "0.8"
notify = "5.0"
puffin.workspace = true
wgpu = { version = "0.14", default-features = false, features = ["wgsl"] }
wgpu-core = "0.14"

# wasm
[target.'cfg(target_arch = "wasm32")'.dependencies]
wgpu = { version = "0.14", default-features = false, features = [
  "webgl",
  "wgsl",
] }


## Examples

[dev-dependencies]
image = { version = "0.24", default-features = false, features = ["png"] }
instant = { version = "0.1", features = ["wasm-bindgen"] }
log = "0.4"
pollster = "0.2"
rand = "0.8"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
winit = "0.27"
zip = { version = "0.6", default-features = false, features = ["deflate"] }

# native
[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
async-executor = "1.0"

# wasm
[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
console_error_panic_hook = "0.1.6"
# required to make rand work on wasm, see https://github.com/rust-random/rand#wasm-support
getrandom = { version = "0.2", features = ["js"] }
tracing-wasm = "0.2"
wasm-bindgen-futures = "0.4.33"
web-sys = { version = "0.3.60", features = [
  "Location",
  "Blob",
  "RequestInit",
  "RequestMode",
  "Request",
  "Response",
] }


## Build

[build-dependencies]
anyhow.workspace = true
clean-path = "0.2"
glob = "0.3"
pathdiff = "0.2"
walkdir = "2.0"
