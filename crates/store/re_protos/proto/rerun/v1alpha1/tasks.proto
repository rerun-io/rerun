syntax = "proto3";

package rerun.redap_tasks.v1alpha1;

import "rerun/v1alpha1/common.proto";

// `TasksService` is the service for submitting and querying persistent redap tasks.
service TasksService {
  // Submit new tasks
  rpc SubmitTasks(SubmitTasksRequest) returns (SubmitTasksResponse);
  // Query the status of submitted tasks
  rpc Query(QueryRequest) returns (QueryResponse);
}

message SubmitTasksRequest {
  repeated Task tasks = 1;
}

// `SubmitTaskResponse` contains, for each submitted task
// its submission outcome, encoded as a `RecordBatch`
message SubmitTasksResponse {
  rerun.common.v1alpha1.DataframePart data = 1;
}

// A task is a unit of work that can be submitted to the system
message Task {
  // Unique identifier for the task
  string task_id = 1;
  // Type of the task
  string task_type = 2;
  // Task-type dependant data necessary to de-serialize the task
  bytes task_data = 3;
}

// `QueryRequest` is the request message for querying tasks status
message QueryRequest {
  // Empty queries for all tasks if the server allows it.
  repeated string task_ids = 2;
}

// `QueryResponse` is the response message for querying tasks status
// encoded as a record batch
message QueryResponse {
  rerun.common.v1alpha1.DataframePart data = 1;
}
