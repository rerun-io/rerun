[package]
name = "re_chunk"
authors.workspace = true
description = "A chunk of Rerun data, encoded using Arrow. Used for logging, transport, storage and compute."
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true


[features]
default = []

## Enable (de)serialization using serde.
serde = [
  "dep:serde",
  "re_log_types/serde",
  "re_tuid/serde",
  "re_types_core/serde",
]


[dependencies]

# Rerun
re_arrow_util.workspace = true
re_byte_size.workspace = true
re_error.workspace = true
re_format.workspace = true
re_format_arrow.workspace = true
re_log.workspace = true
re_log_types.workspace = true
re_tracing.workspace = true
re_tuid.workspace = true
re_types_core.workspace = true

# External
ahash.workspace = true
anyhow.workspace = true
arrow.workspace = true
bytemuck.workspace = true
document-features.workspace = true
half.workspace = true
itertools.workspace = true
nohash-hasher.workspace = true
rand = { workspace = true, features = ["std_rng"] }
similar-asserts.workspace = true
tap.workspace = true
thiserror.workspace = true

# Optional dependencies:
serde = { workspace = true, optional = true, features = ["derive", "rc"] }

# Native dependencies:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
crossbeam.workspace = true


[dev-dependencies]
re_log = { workspace = true, features = ["setup"] }
criterion.workspace = true
mimalloc.workspace = true
similar-asserts.workspace = true
