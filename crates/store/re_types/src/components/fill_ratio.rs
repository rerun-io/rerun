// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/rust/api.rs
// Based on "crates/store/re_types/definitions/rerun/components/fill_ratio.fbs".

#![allow(unused_braces)]
#![allow(unused_imports)]
#![allow(unused_parens)]
#![allow(clippy::clone_on_copy)]
#![allow(clippy::cloned_instead_of_copied)]
#![allow(clippy::map_flatten)]
#![allow(clippy::needless_question_mark)]
#![allow(clippy::new_without_default)]
#![allow(clippy::redundant_closure)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::too_many_lines)]

use ::re_types_core::SerializationResult;
use ::re_types_core::try_serialize_field;
use ::re_types_core::{ComponentBatch as _, SerializedComponentBatch};
use ::re_types_core::{ComponentDescriptor, ComponentType};
use ::re_types_core::{DeserializationError, DeserializationResult};

#[doc(hidden)]
pub struct __FillRatioMarker;

/// **Component**: How much a primitive fills out the available space.
///
/// Used for instance to scale the points of the point cloud created from [`archetypes::DepthImage`][crate::archetypes::DepthImage] projection in 3D views.
/// Valid range is from 0 to max float although typically values above 1.0 are not useful.
///
/// Defaults to 1.0.
pub type FillRatio = crate::WrapperComponent<crate::datatypes::Float32, __FillRatioMarker>;

#[allow(non_snake_case)]
#[inline]
pub const fn FillRatio(v: crate::datatypes::Float32) -> FillRatio {
    crate::WrapperComponent::<crate::datatypes::Float32, __FillRatioMarker>(
        v,
        std::marker::PhantomData,
    )
}

impl ::re_types_core::Component for FillRatio {
    #[inline]
    fn name() -> ComponentType {
        "rerun.components.FillRatio".into()
    }
}

impl<T: Into<crate::datatypes::Float32>> From<T> for FillRatio {
    fn from(v: T) -> Self {
        FillRatio(v.into())
    }
}
