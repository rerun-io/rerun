// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/rust/api.rs
// Based on "crates/store/re_types/definitions/rerun/components/video_timestamp.fbs".

#![allow(unused_braces)]
#![allow(unused_imports)]
#![allow(unused_parens)]
#![allow(clippy::clone_on_copy)]
#![allow(clippy::cloned_instead_of_copied)]
#![allow(clippy::map_flatten)]
#![allow(clippy::needless_question_mark)]
#![allow(clippy::new_without_default)]
#![allow(clippy::redundant_closure)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::too_many_lines)]

use ::re_types_core::SerializationResult;
use ::re_types_core::try_serialize_field;
use ::re_types_core::{ComponentBatch as _, SerializedComponentBatch};
use ::re_types_core::{ComponentDescriptor, ComponentType};
use ::re_types_core::{DeserializationError, DeserializationResult};

#[doc(hidden)]
pub struct __VideoTimestampMarker;

/// **Component**: Timestamp inside a [`archetypes::AssetVideo`][crate::archetypes::AssetVideo].
pub type VideoTimestamp =
    crate::WrapperComponent<crate::datatypes::VideoTimestamp, __VideoTimestampMarker>;

#[allow(non_snake_case)]
#[inline]
pub const fn VideoTimestamp(v: crate::datatypes::VideoTimestamp) -> VideoTimestamp {
    crate::WrapperComponent::<crate::datatypes::VideoTimestamp, __VideoTimestampMarker>(
        v,
        std::marker::PhantomData,
    )
}

impl ::re_types_core::Component for VideoTimestamp {
    #[inline]
    fn name() -> ComponentType {
        "rerun.components.VideoTimestamp".into()
    }
}

impl<T: Into<crate::datatypes::VideoTimestamp>> From<T> for VideoTimestamp {
    fn from(v: T) -> Self {
        VideoTimestamp(v.into())
    }
}
