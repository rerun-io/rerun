// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/rust/api.rs
// Based on "crates/store/re_types/definitions/rerun/components/texcoord2d.fbs".

#![allow(unused_braces)]
#![allow(unused_imports)]
#![allow(unused_parens)]
#![allow(clippy::clone_on_copy)]
#![allow(clippy::cloned_instead_of_copied)]
#![allow(clippy::map_flatten)]
#![allow(clippy::needless_question_mark)]
#![allow(clippy::new_without_default)]
#![allow(clippy::redundant_closure)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::too_many_lines)]

use ::re_types_core::SerializationResult;
use ::re_types_core::try_serialize_field;
use ::re_types_core::{ComponentBatch as _, SerializedComponentBatch};
use ::re_types_core::{ComponentDescriptor, ComponentType};
use ::re_types_core::{DeserializationError, DeserializationResult};

#[doc(hidden)]
pub struct __Texcoord2DMarker;

/// **Component**: A 2D texture UV coordinate.
///
/// Texture coordinates specify a position on a 2D texture.
/// A range from 0-1 covers the entire texture in the respective dimension.
/// Unless configured otherwise, the texture repeats outside of this range.
/// Rerun uses top-left as the origin for UV coordinates.
///
///   0     U     1
/// 0 + --------- →
///   |           .
/// V |           .
///   |           .
/// 1 ↓ . . . . . .
///
/// This is the same convention as in Vulkan/Metal/DX12/WebGPU, but (!) unlike OpenGL,
/// which places the origin at the bottom-left.
pub type Texcoord2D = crate::WrapperComponent<crate::datatypes::Vec2D, __Texcoord2DMarker>;

#[allow(non_snake_case)]
#[inline]
pub const fn Texcoord2D(v: crate::datatypes::Vec2D) -> Texcoord2D {
    crate::WrapperComponent::<crate::datatypes::Vec2D, __Texcoord2DMarker>(
        v,
        std::marker::PhantomData,
    )
}

impl ::re_types_core::Component for Texcoord2D {
    #[inline]
    fn name() -> ComponentType {
        "rerun.components.Texcoord2D".into()
    }
}

impl<T: Into<crate::datatypes::Vec2D>> From<T> for Texcoord2D {
    fn from(v: T) -> Self {
        Texcoord2D(v.into())
    }
}
