// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/rust/api.rs
// Based on "crates/store/re_types/definitions/rerun/components/tensor_dimension_selection.fbs".

#![allow(unused_braces)]
#![allow(unused_imports)]
#![allow(unused_parens)]
#![allow(clippy::clone_on_copy)]
#![allow(clippy::cloned_instead_of_copied)]
#![allow(clippy::map_flatten)]
#![allow(clippy::needless_question_mark)]
#![allow(clippy::new_without_default)]
#![allow(clippy::redundant_closure)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::too_many_lines)]

use ::re_types_core::SerializationResult;
use ::re_types_core::try_serialize_field;
use ::re_types_core::{ComponentBatch as _, SerializedComponentBatch};
use ::re_types_core::{ComponentDescriptor, ComponentType};
use ::re_types_core::{DeserializationError, DeserializationResult};

#[doc(hidden)]
pub struct __TensorDimensionIndexSelectionMarker;

/// **Component**: Specifies a concrete index on a tensor dimension.
pub type TensorDimensionIndexSelection = crate::WrapperComponent<
    crate::datatypes::TensorDimensionIndexSelection,
    __TensorDimensionIndexSelectionMarker,
>;

#[allow(non_snake_case)]
#[inline]
pub const fn TensorDimensionIndexSelection(
    v: crate::datatypes::TensorDimensionIndexSelection,
) -> TensorDimensionIndexSelection {
    crate::WrapperComponent::<
        crate::datatypes::TensorDimensionIndexSelection,
        __TensorDimensionIndexSelectionMarker,
    >(v, std::marker::PhantomData)
}

impl ::re_types_core::Component for TensorDimensionIndexSelection {
    #[inline]
    fn name() -> ComponentType {
        "rerun.components.TensorDimensionIndexSelection".into()
    }
}

impl<T: Into<crate::datatypes::TensorDimensionIndexSelection>> From<T>
    for TensorDimensionIndexSelection
{
    fn from(v: T) -> Self {
        TensorDimensionIndexSelection(v.into())
    }
}
