namespace rerun.archetypes;

// ---

/// A list of nodes in a graph with optional labels, colors, etc.
///
/// \example archetypes/graph_undirected !api title="Simple undirected graph" image="https://static.rerun.io/graph_undirected/15f46bec77452a8c6220558e4403b99cac188e2e/1200w.png"
/// \example archetypes/graph_directed title="Simple directed graph" image="https://static.rerun.io/graph_directed/ca29a37b65e1e0b6482251dce401982a0bc568fa/1200w.png"
table GraphNodes (
  "attr.docs.category": "Graph",
  "attr.docs.view_types": "GraphView",
  "attr.rust.derive": "PartialEq"
) {
  // --- Required ---

  /// A list of node IDs.
  node_ids: [rerun.components.GraphNode] ("attr.rerun.component_required", order: 1000);

  // --- Optional ---

  /// Optional center positions of the nodes.
  positions: [rerun.components.Position2D] ("attr.rerun.component_optional", nullable, order: 3000);

  /// Optional colors for the boxes.
  colors: [rerun.components.Color] ("attr.rerun.component_optional", nullable, order: 3100);

  /// Optional text labels for the node.
  labels: [rerun.components.Text] ("attr.rerun.component_optional", nullable, order: 3200);

  /// Optional choice of whether the text labels should be shown by default.
  show_labels: rerun.components.ShowLabels ("attr.rerun.component_optional", nullable, order: 3250);

  /// Optional radii for nodes.
  radii: [rerun.components.Radius] ("attr.rerun.component_optional", nullable, order: 3300);
}
