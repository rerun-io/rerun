namespace rerun.archetypes;

/// Video stream consisting of raw video chunks.
///
/// For logging video containers like mp4, refer to [archetypes.AssetVideo] and [archetypes.VideoFrameReference].
/// To learn more about video support in Rerun, check the [video reference](https://rerun.io/docs/reference/video).
///
/// All components except `sample` are typically logged statically once per entity.
/// `sample` is then logged repeatedly for each frame on the timeline.
///
/// \example archetypes/video_stream_synthetic missing="cpp,rs" title="Live streaming of on-the-fly encoded video" image="https://static.rerun.io/video_stream_synthetic/4dd34da01980afa5604994fa4cce34d7573b0763/1200w.png"
table VideoStream (
  "attr.docs.unreleased",
  "attr.rerun.state": "unstable",
  "attr.docs.category": "Video",
  "attr.docs.view_types": "Spatial2DView, Spatial3DView: if logged under a projection"
) {
    // --- Required ---

    /// The codec used to encode the video chunks.
    ///
    /// This property is expected to be constant over time and is ideally logged statically once per stream.
    codec: rerun.components.VideoCodec ("attr.rerun.component_required", order: 1000);

    // --- Recommended ---

    /// Video sample data (also known as "video chunk").
    ///
    /// The current timestamp is used as presentation timestamp (PTS) for all data in this sample.
    /// There is currently no way to log differing decoding timestamps, meaning
    /// that there is no support for B-frames.
    /// See <https://github.com/rerun-io/rerun/issues/10090> for more details.
    // TODO(#10090): See above.
    ///
    /// Unlike any other data in Rerun, video samples are not allowed to be logged out of order,
    /// as this may break live video playback.
    /// I.e. any appended sample should have a timestamp greater than all previously logged samples.
    ///
    /// The samples are expected to be encoded using the `codec` field.
    /// Each video sample must contain enough data for exactly one video frame
    /// (this restriction may be relaxed in the future for some codecs).
    ///
    /// Unless your stream consists entirely of key-frames (in which case you should consider [archetypes.EncodedImage])
    /// never log this component as static data as this means that you loose all information of
    /// previous samples which may be required to decode an image.
    ///
    /// See [components.VideoCodec] for codec specific requirements.
    sample: rerun.components.VideoSample ("attr.rerun.component_recommended", nullable, order: 2000);

    // --- Optional ---

    // TODO(#3982): add orientation.

    /// An optional floating point value that specifies the 2D drawing order.
    ///
    /// Objects with higher values are drawn on top of those with lower values.
    /// Defaults to `-15.0`.
    draw_order: rerun.components.DrawOrder ("attr.rerun.component_optional", nullable, order: 3000);
}
