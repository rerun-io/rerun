namespace rerun.archetypes;

/// Define the style properties for one or more line series in a chart.
///
/// This archetype only provides styling information.
/// Changes over time are supported for most but not all its fields (see respective fields for details),
/// it's generally recommended to log this type as static.
///
/// The underlying data needs to be logged to the same entity-path using [archetypes.Scalars].
/// Dimensionality of the scalar arrays logged at each time point is assumed to be the same over time.
///
/// \example archetypes/series_lines_style title="Line series" image="https://static.rerun.io/series_line_style/d2616d98b1e46bdb85849b8669154fdf058e3453/1200w.png"
table SeriesLines (
  "attr.docs.category": "Plotting",
  "attr.docs.unreleased",
  "attr.docs.view_types": "TimeSeriesView",
  "attr.rerun.state": "stable"
) {
  // --- Required ---

  // --- Optional ---

  // TODO(#8368, #9334): Once it's trivial to override how scalars for a plot are sourced,
  // we should make it explicit that the `SeriesLines`/`SeriesPoints` visualizers require
  // scalars as an input.
  // Doing so right now would break the model of how time series logging works too much:
  // This is a case where we want to encourage data <-> styling separation more than elsewhere,
  // so it's important to make keeping it separate easy.
  //scalars: [rerun.components.Scalar];

  /// Color for the corresponding series.
  ///
  /// May change over time, but can cause discontinuities in the line.
  colors: [rerun.components.Color] ("attr.rerun.component_optional", nullable, order: 1000);

  /// Stroke width for the corresponding series.
  ///
  /// May change over time, but can cause discontinuities in the line.
  widths: [rerun.components.StrokeWidth] ("attr.rerun.component_optional", nullable, order: 2000);

  /// Display name of the series.
  ///
  /// Used in the legend. Expected to be unchanging over time.
  names: [rerun.components.Name] ("attr.rerun.component_optional", nullable, order: 3000);

  /// Which lines are visible.
  ///
  /// If not set, all line series on this entity are visible.
  /// Unlike with the regular visibility property of the entire entity, any series that is hidden
  /// via this property will still be visible in the legend.
  ///
  /// May change over time, but can cause discontinuities in the line.
  visible_series: [rerun.components.SeriesVisible] ("attr.rerun.component_optional", nullable, order: 3100);

  /// Configures the zoom-dependent scalar aggregation.
  ///
  /// This is done only if steps on the X axis go below a single pixel,
  /// i.e. a single pixel covers more than one tick worth of data. It can greatly improve performance
  /// (and readability) in such situations as it prevents overdraw.
  ///
  /// Expected to be unchanging over time.
  aggregation_policy: rerun.components.AggregationPolicy ("attr.rerun.component_optional", nullable, order: 4000);
}
