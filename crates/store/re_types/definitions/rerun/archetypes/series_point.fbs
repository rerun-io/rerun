namespace rerun.archetypes;

/// Define the style properties for a point series in a chart.
///
/// This archetype only provides styling information and should be logged as static
/// when possible. The underlying data needs to be logged to the same entity-path using
/// [archetypes.Scalars].
///
/// \example archetypes/series_points_style title="Point series" image="https://static.rerun.io/series_point_style/82207a705da6c086b28ce161db1db9e8b12258b7/1200w.png"
table SeriesPoint (
  "attr.docs.category": "Plotting",
  "attr.docs.view_types": "TimeSeriesView",
  "attr.rerun.deprecated_notice": "Use `SeriesPoints` instead.",
  "attr.rerun.deprecated_since": "0.23.0",
  "attr.rerun.state": "deprecated"
) {
  // --- Required ---

  // --- Optional ---

  /// Color for the corresponding series.
  // TODO(jleibs): This should be batch if we make a batch Scalars loggable.
  color: rerun.components.Color ("attr.rerun.component_optional", nullable, order: 1000);

  /// What shape to use to represent the point
  marker: rerun.components.MarkerShape ("attr.rerun.component_optional", nullable, order: 2000);

  /// Display name of the series.
  ///
  /// Used in the legend.
  name: rerun.components.Name ("attr.rerun.component_optional", nullable, order: 3000);

  /// Which point series are visible.
  ///
  /// If not set, all point series on this entity are visible.
  /// Unlike with the regular visibility property of the entire entity, any series that is hidden
  /// via this property will still be visible in the legend.
  visible_series: [rerun.components.SeriesVisible] ("attr.rerun.component_optional", nullable, order: 3100);

  /// Size of the marker.
  marker_size: rerun.components.MarkerSize ("attr.rerun.component_optional", nullable, order: 4000);
}
