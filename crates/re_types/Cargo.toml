[package]
name = "re_types"
authors.workspace = true
description = "The built-in Rerun data types, component types, and archetypes."
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
publish = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true
version.workspace = true


[package.metadata.docs.rs]
all-features = false
no-default-features = true
features = ["all"]


[features]
default = []

## All features except `testing`.
all = ["ecolor", "egui_plot", "glam", "image", "mint", "serde"]

## Enables the `datagen` module, which exposes a number of tools for generating random data for
## tests and benchmarks.
datagen = ["dep:rand"]

## Enable color conversions.
ecolor = ["dep:ecolor"]

## Enable conversions to plot primitives
egui_plot = ["dep:egui_plot"]

## Add support for some math operations using [`glam`](https://crates.io/crates/glam/).
glam = ["dep:glam"]

## Integration with the [`image`](https://crates.io/crates/image/) crate, plus JPEG support.
image = ["dep:ecolor", "dep:image", "dep:zune-core", "dep:zune-jpeg"]

## Enable (de)serialization using serde.
serde = ["dep:serde"]

## Include testing archetypes/components/datatypes into the crate.
## Only useful for testing purposes.
testing = []


[dependencies]
# Rerun
re_log.workspace = true
re_tracing.workspace = true
re_types_core.workspace = true

# External
anyhow.workspace = true
array-init.workspace = true
arrow2 = { workspace = true, features = [
  "io_ipc",
  "io_print",
  "compute_concatenate",
] }
bytemuck = { workspace = true, features = ["derive", "extern_crate_alloc"] }
document-features.workspace = true
half = { workspace = true, features = ["bytemuck"] }
infer.workspace = true
itertools.workspace = true
linked-hash-map.workspace = true
mime_guess2.workspace = true
ndarray.workspace = true
nohash-hasher.workspace = true
once_cell.workspace = true
ply-rs.workspace = true
smallvec.workspace = true
thiserror.workspace = true
uuid = { workspace = true, features = ["serde", "v4", "js"] }

# External (optional)
ecolor = { workspace = true, optional = true }
egui_plot = { workspace = true, optional = true }
glam = { workspace = true, optional = true }
image = { workspace = true, optional = true, default-features = false }
mint = { workspace = true, optional = true }
rand = { workspace = true, optional = true, features = ["std", "std_rng"] }
serde = { workspace = true, optional = true, features = ["derive", "rc"] }
zune-core = { workspace = true, optional = true }
zune-jpeg = { workspace = true, optional = true }


[dev-dependencies]

# External
glam.workspace = true
itertools.workspace = true
mint.workspace = true
similar-asserts.workspace = true


[build-dependencies]

# Rerun
re_build_tools.workspace = true
re_types_builder.workspace = true

# External
rayon.workspace = true

# `machete` is not a fan of `build-dependencies`.


[package.metadata.cargo-machete]
ignored = ["rayon", "re_build_tools", "re_types_builder"]


[[test]]
name = "fuzzy"
path = "tests/fuzzy.rs"
required-features = ["testing"]
