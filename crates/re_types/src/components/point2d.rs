// NOTE: This file was autogenerated by re_types_builder; DO NOT EDIT.

#[doc = "A point in 2D space."]
#[derive(Debug, Default, Clone, Copy, PartialEq, PartialOrd)]
pub struct Point2D {
    pub x: f32,
    pub y: f32,
}

impl crate::Component for Point2D {
    fn name() -> crate::ComponentName {
        crate::ComponentName::Borrowed("rerun.point2d")
    }

    #[allow(clippy::wildcard_imports)]
    fn to_arrow_datatype() -> arrow2::datatypes::DataType {
        use ::arrow2::datatypes::*;
        DataType::Extension(
            "rerun.components.Point2D".to_owned(),
            Box::new(DataType::Struct(vec![
                Field {
                    name: "x".to_owned(),
                    data_type: DataType::Float32,
                    is_nullable: false,
                    metadata: [].into(),
                },
                Field {
                    name: "y".to_owned(),
                    data_type: DataType::Float32,
                    is_nullable: false,
                    metadata: [].into(),
                },
            ])),
            None,
        )
    }
}
