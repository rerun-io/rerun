include "arrow/attributes.fbs";
include "python/attributes.fbs";
include "rust/attributes.fbs";

include "rerun/datatypes.fbs";
include "rerun/attributes.fbs";

namespace rerun.blueprint.archetypes;

/// Configures the tensor view's color mapping.1
table TensorColormapping (
    "attr.rerun.scope": "blueprint",
    "attr.rust.derive": "Default",
    "attr.rust.generate_field_info",
    "attr.python.aliases": "blueprint_components.Corner2D"
) {
    // --- Optional ---

    /// How scalar values map to colors.
    colormap: rerun.components.Colormap ("attr.rerun.component_optional", nullable, order: 1000);

    /// Gamma curve applied to normalized scalar before mapping to color.
    ///
    /// Raiuses the normalized values to the power of this value before mapping to color.
    /// Acts like an inverse brightness. Defaults to 1.0.
    gamma: rerun.components.GammaCorrection ("attr.rerun.component_optional", nullable, order: 1100);

    // TODO(andreas): explicit scalar ranges should go in here as well!
    // Overall we should communicate scalar mapping to work like this here
    // https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.PowerNorm.html#matplotlib.colors.PowerNorm
    // (value - vmin) ** gamma / (vmax - vmin) ** gamma
}
