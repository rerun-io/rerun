include "fbs/attributes.fbs";
include "rust/attributes.fbs";

include "rerun/datatypes.fbs";

namespace rerun.blueprint.archetypes;

// ---

/// The top-level description of the Viewport.
table SpaceViewBlueprint (
    "attr.rerun.scope": "blueprint",
    "attr.rust.derive": "Default"
) {
    // --- Required ---

    /// The class of the view.
    class_identifier: rerun.blueprint.components.SpaceViewClass ("attr.rerun.component_required", order: 100);

    // --- Optional ---

    /// The name of the view.
    display_name: rerun.blueprint.components.Name ("attr.rerun.component_optional", nullable, order: 200);

    /// The "anchor point" of this space view.
    ///
    /// The transform at this path forms the reference point for all scene->world transforms in this space view.
    /// I.e. the position of this entity path in space forms the origin of the coordinate system in this space view.
    /// Furthermore, this is the primary indicator for heuristics on what entities we show in this space view.
    space_origin: rerun.blueprint.components.SpaceViewOrigin  ("attr.rerun.component_optional", nullable, order: 300);

    /// True if the user is has added entities themselves. False otherwise.
    entities_determined_by_user: rerun.blueprint.components.EntitiesDeterminedByUser ("attr.rerun.component_optional", nullable, order: 400);

    /// `BlueprintId`s of the `DataQuery`s that make up this `SpaceView`.
    ///
    /// It determines which entities are part of the spaceview.
    contents: rerun.blueprint.components.IncludedQueries ("attr.rerun.component_optional", nullable, order: 500);

    /// Whether this space view is visible.
    ///
    /// Defaults to true if not specified.
    visible: rerun.blueprint.components.Visible ("attr.rerun.component_optional", nullable, order: 600);
}
