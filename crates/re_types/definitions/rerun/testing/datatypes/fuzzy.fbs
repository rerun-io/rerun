include "arrow/attributes.fbs";
include "fbs/attributes.fbs";
include "rust/attributes.fbs";

include "rerun/testing/components/fuzzy_deps.fbs";

namespace rerun.testing.datatypes;

// ---

table FlattenedScalar ("attr.rust.derive": "Default, PartialEq", order: 001) {
  value: float (order: 100);
}

table DeeplyFlattenedScalar (transparent, order: 001) {
  value: FlattenedScalar (order: 100, transparent);
}

table VeryDeeplyFlattenedScalar (transparent, order: 001) {
  value: DeeplyFlattenedScalar (order: 100, transparent);
}

table SurprisinglyShallowScalar (transparent, order: 001) {
  value: FlattenedScalar (order: 100);
}

struct ArrayOfFloats (transparent, order: 001) {
  values: [float: 3] (order: 100);
}

table AffixFuzzer1 (
  "attr.rust.derive": "Default, PartialEq"
) {
  single_float_optional: float (nullable, order: 101);
  single_string_required: string (order: 102);
  single_string_optional: string (nullable, order: 103);
  many_floats_optional: [float] (nullable, order: 104);
  many_strings_required: [string] (order: 105);
  many_strings_optional: [string] (nullable, order: 106);
  flattened_scalar: VeryDeeplyFlattenedScalar (order: 107, transparent);
  almost_flattened_scalar: SurprisinglyShallowScalar (order: 108, transparent);
  from_parent: bool = false (nullable, order: 109);
}

table __AffixFuzzer1Vec (transparent, order: 0) {
  inner: [AffixFuzzer1] (order: 0);
}

table AffixFuzzer2 (
  "attr.arrow.transparent",
  "attr.rust.derive": "Default, PartialEq",
  "attr.rust.tuple_struct"
) {
  single_float_optional: float (nullable, order: 101);
}

union AffixFuzzer3 (
  "attr.rust.derive": "PartialEq"
) {
  degrees: FlattenedScalar (transparent),
  radians: FlattenedScalar (transparent, nullable),
  craziness: __AffixFuzzer1Vec (transparent),
  fixed_size_shenanigans: ArrayOfFloats (transparent),
}

table __AffixFuzzer3 (transparent, order: 0) {
  inner: AffixFuzzer3 (order: 0);
}

table __AffixFuzzer3Vec (transparent, order: 0) {
  inner: [AffixFuzzer3] (order: 0);
}

union AffixFuzzer4 (
  "attr.rust.derive": "PartialEq"
) {
  single_required: __AffixFuzzer3 (transparent),
  many_required: __AffixFuzzer3Vec (transparent),
  many_optional: __AffixFuzzer3Vec (transparent, nullable),
}

table AffixFuzzer5 (
  "attr.rust.derive": "Default, PartialEq"
) {
  single_optional_union: AffixFuzzer4 (order: 100, nullable);
}

table AffixFuzzer20 (
  "attr.rust.derive": "Default, Eq, PartialEq"
) {
  p: rerun.testing.datatypes.PrimitiveComponent  (order: 100);
  s: rerun.testing.datatypes.StringComponent  (order: 200);
}

table AffixFuzzer21 (
  "attr.rust.derive": "Default, PartialEq"
) {
  single_half: ushort (order: 100, "attr.rerun.override_type": "float16");
  many_halves: [ushort] (order: 200, "attr.rerun.override_type": "float16");
}

struct AffixFuzzer22 (
  "attr.rust.derive": "Default, PartialEq, Eq"
) {
  fixed_sized_native: [ubyte: 4] (order: 100);
}
