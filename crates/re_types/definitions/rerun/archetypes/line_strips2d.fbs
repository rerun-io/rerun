include "fbs/attributes.fbs";

include "rerun/datatypes.fbs";
include "rerun/components.fbs";

namespace rerun.archetypes;

// ---

/// A batch of line strips with positions and optional colors, radii, labels, etc.
///
/// \example line_strip2d_simple image="https://static.rerun.io/line_strip2d_simple/c4e6ce937544e66b497450fd64ac3ac2f244f0e1/1200w.png"
/// \example line_segments2d_simple image="https://static.rerun.io/line_segment2d_simple/53df596662dd9ffaaea5d09d091ef95220346c83/1200w.png"
/// \example line_strip2d_batch image="https://static.rerun.io/line_strip2d_batch/d8aae7ca3d6c3b0e3b636de60b8067fa2f0b6db9/1200w.png"
table LineStrips2D (
  "attr.rust.derive": "PartialEq"
) {
  // --- Required ---

  /// All the actual 2D line strips that make up the batch.
  strips: [rerun.components.LineStrip2D] ("attr.rerun.component_required", order: 1000);

  // --- Recommended ---

  /// Optional radii for the line strips.
  radii: [rerun.components.Radius] ("attr.rerun.component_recommended", nullable, order: 2000);

  /// Optional colors for the line strips.
  colors: [rerun.components.Color] ("attr.rerun.component_recommended", nullable, order: 2100);

  // --- Optional ---

  /// Optional text labels for the line strips.
  labels: [rerun.components.Text] ("attr.rerun.component_optional", nullable, order: 3000);

  /// An optional floating point value that specifies the 2D drawing order of each line strip.
  ///
  /// Objects with higher values are drawn on top of those with lower values.
  draw_order: rerun.components.DrawOrder ("attr.rerun.component_optional", nullable, order: 3100);

  /// Optional `ClassId`s for the lines.
  ///
  /// The class ID provides colors and labels if not specified explicitly.
  class_ids: [rerun.components.ClassId] ("attr.rerun.component_optional", nullable, order: 3200);

  /// Unique identifiers for each individual line strip in the batch.
  instance_keys: [rerun.components.InstanceKey] ("attr.rerun.component_optional", nullable, order: 3400);
}
