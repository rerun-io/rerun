include "fbs/attributes.fbs";

include "rerun/datatypes.fbs";
include "rerun/components.fbs";

namespace rerun.archetypes;


/// Camera perspective projection (a.k.a. intrinsics).
///
/// \example pinhole_simple
table Pinhole (
  "attr.rust.derive": "PartialEq",
  order: 100
) {
  // --- Required ---

  /// Camera projection, from image coordinates to view coordinates.
  image_from_camera: rerun.components.PinholeProjection ("attr.rerun.component_required", required, order: 1000);

  // --- Recommended ---

  /// Pixel resolution (usually integers) of child image space. Width and height.
  ///
  /// Example:
  /// ```text
  /// [1920.0, 1440.0]
  /// ```
  ///
  /// `image_from_camera` project onto the space spanned by `(0,0)` and `resolution - 1`.
  resolution: rerun.components.Resolution ("attr.rerun.component_recommended", nullable, order: 2000);

  // --- Optional ---

  /// Sets the view coordinates for the camera.
  ///
  /// All common values are available as constants on the `components.ViewCoordinates` class.
  ///
  /// The default is `ViewCoordinates::RDF`, i.e. X=Right, Y=Down, Z=Forward, and this is also the recommended setting.
  /// This means that the camera frustum will point along the positive Z axis of the parent space,
  /// and the cameras "up" direction will be along the negative Y axis of the parent space.
  ///
  /// The camera frustum will point whichever axis is set to `F` (or the opposite of `B`).
  /// When logging a depth image under this entity, this is the direction the point cloud will be projected.
  /// With `RDF`, the default forward is +Z.
  ///
  /// The frustum's "up" direction will be whichever axis is set to `U` (or the opposite of `D`).
  /// This will match the negative Y direction of pixel space (all images are assumed to have xyz=RDF).
  /// With `RDF`, the default is up is -Y.
  ///
  /// The frustum's "right" direction will be whichever axis is set to `R` (or the opposite of `L`).
  /// This will match the positive X direction of pixel space (all images are assumed to have xyz=RDF).
  /// With `RDF`, the default right is +x.
  ///
  /// Other common formats are `RUB` (X=Right, Y=Up, Z=Back) and `FLU` (X=Forward, Y=Left, Z=Up).
  ///
  /// NOTE: setting this to something else than `RDF` (the default) will change the orientation of the camera frustum,
  /// and make the pinhole matrix not match up with the coordinate system of the pinhole entity.
  ///
  /// The pinhole matrix (the `image_from_camera` argument) always project along the third (Z) axis,
  /// but will be re-oriented to project along the forward axis of the `camera_xyz` argument.
  // TODO(#2641): This should specify a default-value of `RDF`
  camera_xyz: rerun.components.ViewCoordinates ("attr.rerun.component_optional", nullable, order: 3000);
}
