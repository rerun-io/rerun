
include "arrow/attributes.fbs";
include "python/attributes.fbs";
include "rust/attributes.fbs";

include "rerun/attributes.fbs";
include "rerun/unit_type.fbs";

include "time_int.fbs";

namespace rerun.datatypes;

/// Left or right boundary of a time range.
union TimeRangeBoundary (
  "attr.rust.derive": "Copy, PartialEq, Eq",
  "attr.rust.override_crate": "re_types_core"
) {
  /// Boundary is a value relative to the time cursor.
  CursorRelative: TimeInt,

  /// Boundary is an absolute value.
  Absolute: TimeInt,

  /// The boundary extends to infinity.
  Infinite: rerun.builtins.UnitType,
}

/// Visible time range bounds for a specific timeline.
// Has to be a table because flatbuffer doesn't support strings in structs.
table TimeRange (
  "attr.rust.derive": "PartialEq, Eq",
  "attr.rust.override_crate": "re_types_core"
) {
  /// Low time boundary for sequence timeline.
  // Can't call it `from` because it's a reserved keyword in Python.
  start: rerun.datatypes.TimeRangeBoundary (order: 100);

  /// High time boundary for sequence timeline.
  end: rerun.datatypes.TimeRangeBoundary (order: 200);
}

/// Visible time range bounds for a specific timeline.
// Has to be a table because flatbuffer doesn't support strings in structs.
table VisibleTimeRange (
  "attr.rust.derive": "PartialEq, Eq",
  "attr.rust.override_crate": "re_types_core"
) {
  /// Name of the timeline this applies to.
  timeline: rerun.datatypes.Utf8 (order: 100);

  /// Time range to use for this timeline.
  range: rerun.datatypes.TimeRange (order: 200);
}
