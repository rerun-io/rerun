include "arrow/attributes.fbs";
include "fbs/attributes.fbs";

include "./vec3d.fbs";

namespace rerun.datatypes;

// ---

/// Representation of an affine transform via a 3x3 affine matrix paired with a translation.
///
/// First applies the matrix, then the translation.
table TranslationAndMat3x3 (
  "attr.rust.derive": "Copy, PartialEq"
) {
  /// 3D translation, applied after the matrix.
  //
  // NOTE: Nullable rather than defaulting to an identity-like value because we want to be able
  // to differentiate between no value vs. default value in the backend.
  translation: rerun.datatypes.Vec3D (nullable, order: 100);

  /// 3x3 matrix for scale, rotation & shear.
  //
  // NOTE: Nullable rather than defaulting to an identity-like value because we want to be able
  // to differentiate between no value vs. default value in the backend.
  matrix: Mat3x3 (nullable, order: 200);

  // TODO(#2641): make this field non-nullable when default values are supported
  /// If true, the transform maps from the parent space to the space where the transform was logged.
  /// Otherwise, the transform maps from the space to its parent.
  from_parent: bool = false (order: 300);
}
