namespace rust.attributes;

/// Apply to a struct or table object to generate a tuple struct.
///
/// The type definition of the target object must have exactly a single field.
attribute "attr.rust.tuple_struct";

/// Apply to any object to generate a #derive clause.
///
/// This always automatically includes `Debug` & `Clone`, see `attr.rust.derive_only` if you
/// don't want those for any reason.
///
/// The value of the attribute will be trimmed out but otherwise left as-is.
/// E.g. "attr.rust.derive": "Copy"`.
attribute "attr.rust.derive";

/// Apply to any object to generate a #derive clause.
///
/// The value of the attribute will be trimmed out but otherwise left as-is.
/// E.g. "attr.rust.derive": "Copy"`.
attribute "attr.rust.derive_only";

/// Apply to any object to generate an arbitrary clause.
///
/// The value of the attribute will be trimmed out but otherwise left as-is.
/// E.g. "attr.rust.custom_clause": "cfg_attr(feature = "serde", derive(::serde::Serialize))"`.
attribute "attr.rust.custom_clause";

/// Apply to any object to generate a #repr clause with the specified value.
attribute "attr.rust.repr";

/// Default field for a union.
attribute "attr.rust.union_default";

/// Sets the visibility of `new` to `pub(crate)` so it is only available to extension methods.
attribute "attr.rust.new_pub_crate";
