# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/components/tensor_data.fbs".

# You can extend this class by creating a "TensorDataExt" class in "tensor_data_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import (
    BaseDelegatingExtensionArray,
    BaseDelegatingExtensionType,
)

__all__ = ["TensorData", "TensorDataArray", "TensorDataType"]


class TensorData(datatypes.TensorData):
    # You can define your own __init__ function as a member of TensorDataExt in tensor_data_ext.py

    # Note: there are no fields here because TensorData delegates to datatypes.TensorData
    pass


class TensorDataType(BaseDelegatingExtensionType):
    _TYPE_NAME = "rerun.components.TensorData"
    _DELEGATED_EXTENSION_TYPE = datatypes.TensorDataType


class TensorDataArray(BaseDelegatingExtensionArray[datatypes.TensorDataArrayLike]):
    _EXTENSION_NAME = "rerun.components.TensorData"
    _EXTENSION_TYPE = TensorDataType
    _DELEGATED_ARRAY_TYPE = datatypes.TensorDataArray


TensorDataType._ARRAY_TYPE = TensorDataArray

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(TensorDataType())
