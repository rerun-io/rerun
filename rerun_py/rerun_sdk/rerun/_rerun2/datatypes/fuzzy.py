# NOTE: This file was autogenerated by re_types_builder; DO NOT EDIT.

from __future__ import annotations

from typing import TYPE_CHECKING, Any, Literal, Sequence, Union

import numpy as np
import numpy.typing as npt
import pyarrow as pa
from attrs import define, field

from .. import datatypes
from .._baseclasses import (
    BaseExtensionArray,
    BaseExtensionType,
)
from .._converters import (
    bool_or_none,
    float_or_none,
    str_or_none,
    to_np_float32,
)

__all__ = [
    "AffixFuzzer1",
    "AffixFuzzer1Array",
    "AffixFuzzer1ArrayLike",
    "AffixFuzzer1Like",
    "AffixFuzzer1Type",
    "AffixFuzzer2",
    "AffixFuzzer2Array",
    "AffixFuzzer2ArrayLike",
    "AffixFuzzer2Like",
    "AffixFuzzer2Type",
    "AffixFuzzer3",
    "AffixFuzzer3Array",
    "AffixFuzzer3ArrayLike",
    "AffixFuzzer3Like",
    "AffixFuzzer3Type",
    "AffixFuzzer4",
    "AffixFuzzer4Array",
    "AffixFuzzer4ArrayLike",
    "AffixFuzzer4Like",
    "AffixFuzzer4Type",
    "AffixFuzzer5",
    "AffixFuzzer5Array",
    "AffixFuzzer5ArrayLike",
    "AffixFuzzer5Like",
    "AffixFuzzer5Type",
    "FlattenedScalar",
    "FlattenedScalarArray",
    "FlattenedScalarArrayLike",
    "FlattenedScalarLike",
    "FlattenedScalarType",
]


@define
class FlattenedScalar:
    value: float = field(converter=float)

    def __array__(self, dtype: npt.DTypeLike = None) -> npt.NDArray[Any]:
        return np.asarray(self.value, dtype=dtype)

    def __float__(self) -> float:
        return float(self.value)


FlattenedScalarLike = FlattenedScalar
FlattenedScalarArrayLike = Union[
    FlattenedScalar,
    Sequence[FlattenedScalarLike],
]


# --- Arrow support ---


class FlattenedScalarType(BaseExtensionType):
    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self, pa.struct([pa.field("value", pa.float32(), False, {})]), "rerun.testing.datatypes.FlattenedScalar"
        )


class FlattenedScalarArray(BaseExtensionArray[FlattenedScalarArrayLike]):
    _EXTENSION_NAME = "rerun.testing.datatypes.FlattenedScalar"
    _EXTENSION_TYPE = FlattenedScalarType

    @staticmethod
    def _native_to_pa_array(data: FlattenedScalarArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError


FlattenedScalarType._ARRAY_TYPE = FlattenedScalarArray

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(FlattenedScalarType())


def _affixfuzzer1_almost_flattened_scalar_converter(x: datatypes.FlattenedScalarLike) -> datatypes.FlattenedScalar:
    if isinstance(x, datatypes.FlattenedScalar):
        return x
    else:
        return datatypes.FlattenedScalar(x)


@define
class AffixFuzzer1:
    single_string_required: str = field(converter=str)
    many_strings_required: list[str] = field()
    flattened_scalar: float = field(converter=float)
    almost_flattened_scalar: datatypes.FlattenedScalar = field(
        converter=_affixfuzzer1_almost_flattened_scalar_converter
    )
    single_float_optional: float | None = field(default=None, converter=float_or_none)
    single_string_optional: str | None = field(default=None, converter=str_or_none)
    many_floats_optional: npt.NDArray[np.float32] | None = field(default=None, converter=to_np_float32)
    many_strings_optional: list[str] | None = field(default=None)
    from_parent: bool | None = field(default=None, converter=bool_or_none)


AffixFuzzer1Like = AffixFuzzer1
AffixFuzzer1ArrayLike = Union[
    AffixFuzzer1,
    Sequence[AffixFuzzer1Like],
]


# --- Arrow support ---


class AffixFuzzer1Type(BaseExtensionType):
    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self,
            pa.struct(
                [
                    pa.field("single_float_optional", pa.float32(), True, {}),
                    pa.field("single_string_required", pa.utf8(), False, {}),
                    pa.field("single_string_optional", pa.utf8(), True, {}),
                    pa.field("many_floats_optional", pa.list_(pa.field("item", pa.float32(), True, {})), True, {}),
                    pa.field("many_strings_required", pa.list_(pa.field("item", pa.utf8(), False, {})), False, {}),
                    pa.field("many_strings_optional", pa.list_(pa.field("item", pa.utf8(), True, {})), True, {}),
                    pa.field("flattened_scalar", pa.float32(), False, {}),
                    pa.field(
                        "almost_flattened_scalar", pa.struct([pa.field("value", pa.float32(), False, {})]), False, {}
                    ),
                    pa.field("from_parent", pa.bool_(), True, {}),
                ]
            ),
            "rerun.testing.datatypes.AffixFuzzer1",
        )


class AffixFuzzer1Array(BaseExtensionArray[AffixFuzzer1ArrayLike]):
    _EXTENSION_NAME = "rerun.testing.datatypes.AffixFuzzer1"
    _EXTENSION_TYPE = AffixFuzzer1Type

    @staticmethod
    def _native_to_pa_array(data: AffixFuzzer1ArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError


AffixFuzzer1Type._ARRAY_TYPE = AffixFuzzer1Array

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(AffixFuzzer1Type())


@define
class AffixFuzzer2:
    single_float_optional: float | None = field(default=None, converter=float_or_none)

    def __array__(self, dtype: npt.DTypeLike = None) -> npt.NDArray[Any]:
        return np.asarray(self.single_float_optional, dtype=dtype)


AffixFuzzer2Like = AffixFuzzer2
AffixFuzzer2ArrayLike = Union[
    AffixFuzzer2,
    Sequence[AffixFuzzer2Like],
]


# --- Arrow support ---


class AffixFuzzer2Type(BaseExtensionType):
    def __init__(self) -> None:
        pa.ExtensionType.__init__(self, pa.float32(), "rerun.testing.datatypes.AffixFuzzer2")


class AffixFuzzer2Array(BaseExtensionArray[AffixFuzzer2ArrayLike]):
    _EXTENSION_NAME = "rerun.testing.datatypes.AffixFuzzer2"
    _EXTENSION_TYPE = AffixFuzzer2Type

    @staticmethod
    def _native_to_pa_array(data: AffixFuzzer2ArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError


AffixFuzzer2Type._ARRAY_TYPE = AffixFuzzer2Array

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(AffixFuzzer2Type())


@define
class AffixFuzzer3:
    inner: float | list[datatypes.AffixFuzzer1] | npt.NDArray[np.float32] = field()
    """
    degrees (float):

    radians (float):

    craziness (list[datatypes.AffixFuzzer1]):

    fixed_size_shenanigans (npt.NDArray[np.float32]):
    """

    kind: Literal["degrees", "radians", "craziness", "fixed_size_shenanigans"] = field(default="degrees")


if TYPE_CHECKING:
    AffixFuzzer3Like = Union[
        AffixFuzzer3,
        float,
        list[datatypes.AffixFuzzer1],
        npt.NDArray[np.float32],
    ]
    AffixFuzzer3ArrayLike = Union[
        AffixFuzzer3,
        float,
        list[datatypes.AffixFuzzer1],
        npt.NDArray[np.float32],
        Sequence[AffixFuzzer3Like],
    ]
else:
    AffixFuzzer3Like = Any
    AffixFuzzer3ArrayLike = Any

# --- Arrow support ---


class AffixFuzzer3Type(BaseExtensionType):
    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self,
            pa.dense_union(
                [
                    pa.field("_null_markers", pa.null(), True, {}),
                    pa.field("degrees", pa.float32(), False, {}),
                    pa.field("radians", pa.float32(), False, {}),
                    pa.field(
                        "craziness",
                        pa.list_(
                            pa.field(
                                "item",
                                pa.struct(
                                    [
                                        pa.field("single_float_optional", pa.float32(), True, {}),
                                        pa.field("single_string_required", pa.utf8(), False, {}),
                                        pa.field("single_string_optional", pa.utf8(), True, {}),
                                        pa.field(
                                            "many_floats_optional",
                                            pa.list_(pa.field("item", pa.float32(), True, {})),
                                            True,
                                            {},
                                        ),
                                        pa.field(
                                            "many_strings_required",
                                            pa.list_(pa.field("item", pa.utf8(), False, {})),
                                            False,
                                            {},
                                        ),
                                        pa.field(
                                            "many_strings_optional",
                                            pa.list_(pa.field("item", pa.utf8(), True, {})),
                                            True,
                                            {},
                                        ),
                                        pa.field("flattened_scalar", pa.float32(), False, {}),
                                        pa.field(
                                            "almost_flattened_scalar",
                                            pa.struct([pa.field("value", pa.float32(), False, {})]),
                                            False,
                                            {},
                                        ),
                                        pa.field("from_parent", pa.bool_(), True, {}),
                                    ]
                                ),
                                False,
                                {},
                            )
                        ),
                        False,
                        {},
                    ),
                    pa.field(
                        "fixed_size_shenanigans", pa.list_(pa.field("item", pa.float32(), False, {}), 3), False, {}
                    ),
                ]
            ),
            "rerun.testing.datatypes.AffixFuzzer3",
        )


class AffixFuzzer3Array(BaseExtensionArray[AffixFuzzer3ArrayLike]):
    _EXTENSION_NAME = "rerun.testing.datatypes.AffixFuzzer3"
    _EXTENSION_TYPE = AffixFuzzer3Type

    @staticmethod
    def _native_to_pa_array(data: AffixFuzzer3ArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError


AffixFuzzer3Type._ARRAY_TYPE = AffixFuzzer3Array

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(AffixFuzzer3Type())


@define
class AffixFuzzer4:
    inner: datatypes.AffixFuzzer3 | list[datatypes.AffixFuzzer3] = field()
    """
    single_required (datatypes.AffixFuzzer3):

    many_required (list[datatypes.AffixFuzzer3]):

    many_optional (list[datatypes.AffixFuzzer3]):
    """

    kind: Literal["single_required", "many_required", "many_optional"] = field(default="single_required")


if TYPE_CHECKING:
    AffixFuzzer4Like = Union[
        AffixFuzzer4,
        datatypes.AffixFuzzer3,
        list[datatypes.AffixFuzzer3],
    ]
    AffixFuzzer4ArrayLike = Union[
        AffixFuzzer4,
        datatypes.AffixFuzzer3,
        list[datatypes.AffixFuzzer3],
        Sequence[AffixFuzzer4Like],
    ]
else:
    AffixFuzzer4Like = Any
    AffixFuzzer4ArrayLike = Any

# --- Arrow support ---


class AffixFuzzer4Type(BaseExtensionType):
    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self,
            pa.dense_union(
                [
                    pa.field("_null_markers", pa.null(), True, {}),
                    pa.field(
                        "single_required",
                        pa.dense_union(
                            [
                                pa.field("_null_markers", pa.null(), True, {}),
                                pa.field("degrees", pa.float32(), False, {}),
                                pa.field("radians", pa.float32(), False, {}),
                                pa.field(
                                    "craziness",
                                    pa.list_(
                                        pa.field(
                                            "item",
                                            pa.struct(
                                                [
                                                    pa.field("single_float_optional", pa.float32(), True, {}),
                                                    pa.field("single_string_required", pa.utf8(), False, {}),
                                                    pa.field("single_string_optional", pa.utf8(), True, {}),
                                                    pa.field(
                                                        "many_floats_optional",
                                                        pa.list_(pa.field("item", pa.float32(), True, {})),
                                                        True,
                                                        {},
                                                    ),
                                                    pa.field(
                                                        "many_strings_required",
                                                        pa.list_(pa.field("item", pa.utf8(), False, {})),
                                                        False,
                                                        {},
                                                    ),
                                                    pa.field(
                                                        "many_strings_optional",
                                                        pa.list_(pa.field("item", pa.utf8(), True, {})),
                                                        True,
                                                        {},
                                                    ),
                                                    pa.field("flattened_scalar", pa.float32(), False, {}),
                                                    pa.field(
                                                        "almost_flattened_scalar",
                                                        pa.struct([pa.field("value", pa.float32(), False, {})]),
                                                        False,
                                                        {},
                                                    ),
                                                    pa.field("from_parent", pa.bool_(), True, {}),
                                                ]
                                            ),
                                            False,
                                            {},
                                        )
                                    ),
                                    False,
                                    {},
                                ),
                                pa.field(
                                    "fixed_size_shenanigans",
                                    pa.list_(pa.field("item", pa.float32(), False, {}), 3),
                                    False,
                                    {},
                                ),
                            ]
                        ),
                        False,
                        {},
                    ),
                    pa.field(
                        "many_required",
                        pa.list_(
                            pa.field(
                                "item",
                                pa.dense_union(
                                    [
                                        pa.field("_null_markers", pa.null(), True, {}),
                                        pa.field("degrees", pa.float32(), False, {}),
                                        pa.field("radians", pa.float32(), False, {}),
                                        pa.field(
                                            "craziness",
                                            pa.list_(
                                                pa.field(
                                                    "item",
                                                    pa.struct(
                                                        [
                                                            pa.field("single_float_optional", pa.float32(), True, {}),
                                                            pa.field("single_string_required", pa.utf8(), False, {}),
                                                            pa.field("single_string_optional", pa.utf8(), True, {}),
                                                            pa.field(
                                                                "many_floats_optional",
                                                                pa.list_(pa.field("item", pa.float32(), True, {})),
                                                                True,
                                                                {},
                                                            ),
                                                            pa.field(
                                                                "many_strings_required",
                                                                pa.list_(pa.field("item", pa.utf8(), False, {})),
                                                                False,
                                                                {},
                                                            ),
                                                            pa.field(
                                                                "many_strings_optional",
                                                                pa.list_(pa.field("item", pa.utf8(), True, {})),
                                                                True,
                                                                {},
                                                            ),
                                                            pa.field("flattened_scalar", pa.float32(), False, {}),
                                                            pa.field(
                                                                "almost_flattened_scalar",
                                                                pa.struct([pa.field("value", pa.float32(), False, {})]),
                                                                False,
                                                                {},
                                                            ),
                                                            pa.field("from_parent", pa.bool_(), True, {}),
                                                        ]
                                                    ),
                                                    False,
                                                    {},
                                                )
                                            ),
                                            False,
                                            {},
                                        ),
                                        pa.field(
                                            "fixed_size_shenanigans",
                                            pa.list_(pa.field("item", pa.float32(), False, {}), 3),
                                            False,
                                            {},
                                        ),
                                    ]
                                ),
                                False,
                                {},
                            )
                        ),
                        False,
                        {},
                    ),
                    pa.field(
                        "many_optional",
                        pa.list_(
                            pa.field(
                                "item",
                                pa.dense_union(
                                    [
                                        pa.field("_null_markers", pa.null(), True, {}),
                                        pa.field("degrees", pa.float32(), False, {}),
                                        pa.field("radians", pa.float32(), False, {}),
                                        pa.field(
                                            "craziness",
                                            pa.list_(
                                                pa.field(
                                                    "item",
                                                    pa.struct(
                                                        [
                                                            pa.field("single_float_optional", pa.float32(), True, {}),
                                                            pa.field("single_string_required", pa.utf8(), False, {}),
                                                            pa.field("single_string_optional", pa.utf8(), True, {}),
                                                            pa.field(
                                                                "many_floats_optional",
                                                                pa.list_(pa.field("item", pa.float32(), True, {})),
                                                                True,
                                                                {},
                                                            ),
                                                            pa.field(
                                                                "many_strings_required",
                                                                pa.list_(pa.field("item", pa.utf8(), False, {})),
                                                                False,
                                                                {},
                                                            ),
                                                            pa.field(
                                                                "many_strings_optional",
                                                                pa.list_(pa.field("item", pa.utf8(), True, {})),
                                                                True,
                                                                {},
                                                            ),
                                                            pa.field("flattened_scalar", pa.float32(), False, {}),
                                                            pa.field(
                                                                "almost_flattened_scalar",
                                                                pa.struct([pa.field("value", pa.float32(), False, {})]),
                                                                False,
                                                                {},
                                                            ),
                                                            pa.field("from_parent", pa.bool_(), True, {}),
                                                        ]
                                                    ),
                                                    False,
                                                    {},
                                                )
                                            ),
                                            False,
                                            {},
                                        ),
                                        pa.field(
                                            "fixed_size_shenanigans",
                                            pa.list_(pa.field("item", pa.float32(), False, {}), 3),
                                            False,
                                            {},
                                        ),
                                    ]
                                ),
                                True,
                                {},
                            )
                        ),
                        False,
                        {},
                    ),
                ]
            ),
            "rerun.testing.datatypes.AffixFuzzer4",
        )


class AffixFuzzer4Array(BaseExtensionArray[AffixFuzzer4ArrayLike]):
    _EXTENSION_NAME = "rerun.testing.datatypes.AffixFuzzer4"
    _EXTENSION_TYPE = AffixFuzzer4Type

    @staticmethod
    def _native_to_pa_array(data: AffixFuzzer4ArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError


AffixFuzzer4Type._ARRAY_TYPE = AffixFuzzer4Array

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(AffixFuzzer4Type())


def _affixfuzzer5_single_optional_union_converter(
    x: datatypes.AffixFuzzer4Like | None,
) -> datatypes.AffixFuzzer4 | None:
    if x is None:
        return None
    elif isinstance(x, datatypes.AffixFuzzer4):
        return x
    else:
        return datatypes.AffixFuzzer4(x)


@define
class AffixFuzzer5:
    single_optional_union: datatypes.AffixFuzzer4 | None = field(
        default=None, converter=_affixfuzzer5_single_optional_union_converter
    )


AffixFuzzer5Like = AffixFuzzer5
AffixFuzzer5ArrayLike = Union[
    AffixFuzzer5,
    Sequence[AffixFuzzer5Like],
]


# --- Arrow support ---


class AffixFuzzer5Type(BaseExtensionType):
    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self,
            pa.struct(
                [
                    pa.field(
                        "single_optional_union",
                        pa.dense_union(
                            [
                                pa.field("_null_markers", pa.null(), True, {}),
                                pa.field(
                                    "single_required",
                                    pa.dense_union(
                                        [
                                            pa.field("_null_markers", pa.null(), True, {}),
                                            pa.field("degrees", pa.float32(), False, {}),
                                            pa.field("radians", pa.float32(), False, {}),
                                            pa.field(
                                                "craziness",
                                                pa.list_(
                                                    pa.field(
                                                        "item",
                                                        pa.struct(
                                                            [
                                                                pa.field(
                                                                    "single_float_optional", pa.float32(), True, {}
                                                                ),
                                                                pa.field(
                                                                    "single_string_required", pa.utf8(), False, {}
                                                                ),
                                                                pa.field("single_string_optional", pa.utf8(), True, {}),
                                                                pa.field(
                                                                    "many_floats_optional",
                                                                    pa.list_(pa.field("item", pa.float32(), True, {})),
                                                                    True,
                                                                    {},
                                                                ),
                                                                pa.field(
                                                                    "many_strings_required",
                                                                    pa.list_(pa.field("item", pa.utf8(), False, {})),
                                                                    False,
                                                                    {},
                                                                ),
                                                                pa.field(
                                                                    "many_strings_optional",
                                                                    pa.list_(pa.field("item", pa.utf8(), True, {})),
                                                                    True,
                                                                    {},
                                                                ),
                                                                pa.field("flattened_scalar", pa.float32(), False, {}),
                                                                pa.field(
                                                                    "almost_flattened_scalar",
                                                                    pa.struct(
                                                                        [pa.field("value", pa.float32(), False, {})]
                                                                    ),
                                                                    False,
                                                                    {},
                                                                ),
                                                                pa.field("from_parent", pa.bool_(), True, {}),
                                                            ]
                                                        ),
                                                        False,
                                                        {},
                                                    )
                                                ),
                                                False,
                                                {},
                                            ),
                                            pa.field(
                                                "fixed_size_shenanigans",
                                                pa.list_(pa.field("item", pa.float32(), False, {}), 3),
                                                False,
                                                {},
                                            ),
                                        ]
                                    ),
                                    False,
                                    {},
                                ),
                                pa.field(
                                    "many_required",
                                    pa.list_(
                                        pa.field(
                                            "item",
                                            pa.dense_union(
                                                [
                                                    pa.field("_null_markers", pa.null(), True, {}),
                                                    pa.field("degrees", pa.float32(), False, {}),
                                                    pa.field("radians", pa.float32(), False, {}),
                                                    pa.field(
                                                        "craziness",
                                                        pa.list_(
                                                            pa.field(
                                                                "item",
                                                                pa.struct(
                                                                    [
                                                                        pa.field(
                                                                            "single_float_optional",
                                                                            pa.float32(),
                                                                            True,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "single_string_required",
                                                                            pa.utf8(),
                                                                            False,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "single_string_optional",
                                                                            pa.utf8(),
                                                                            True,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "many_floats_optional",
                                                                            pa.list_(
                                                                                pa.field("item", pa.float32(), True, {})
                                                                            ),
                                                                            True,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "many_strings_required",
                                                                            pa.list_(
                                                                                pa.field("item", pa.utf8(), False, {})
                                                                            ),
                                                                            False,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "many_strings_optional",
                                                                            pa.list_(
                                                                                pa.field("item", pa.utf8(), True, {})
                                                                            ),
                                                                            True,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "flattened_scalar", pa.float32(), False, {}
                                                                        ),
                                                                        pa.field(
                                                                            "almost_flattened_scalar",
                                                                            pa.struct(
                                                                                [
                                                                                    pa.field(
                                                                                        "value", pa.float32(), False, {}
                                                                                    )
                                                                                ]
                                                                            ),
                                                                            False,
                                                                            {},
                                                                        ),
                                                                        pa.field("from_parent", pa.bool_(), True, {}),
                                                                    ]
                                                                ),
                                                                False,
                                                                {},
                                                            )
                                                        ),
                                                        False,
                                                        {},
                                                    ),
                                                    pa.field(
                                                        "fixed_size_shenanigans",
                                                        pa.list_(pa.field("item", pa.float32(), False, {}), 3),
                                                        False,
                                                        {},
                                                    ),
                                                ]
                                            ),
                                            False,
                                            {},
                                        )
                                    ),
                                    False,
                                    {},
                                ),
                                pa.field(
                                    "many_optional",
                                    pa.list_(
                                        pa.field(
                                            "item",
                                            pa.dense_union(
                                                [
                                                    pa.field("_null_markers", pa.null(), True, {}),
                                                    pa.field("degrees", pa.float32(), False, {}),
                                                    pa.field("radians", pa.float32(), False, {}),
                                                    pa.field(
                                                        "craziness",
                                                        pa.list_(
                                                            pa.field(
                                                                "item",
                                                                pa.struct(
                                                                    [
                                                                        pa.field(
                                                                            "single_float_optional",
                                                                            pa.float32(),
                                                                            True,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "single_string_required",
                                                                            pa.utf8(),
                                                                            False,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "single_string_optional",
                                                                            pa.utf8(),
                                                                            True,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "many_floats_optional",
                                                                            pa.list_(
                                                                                pa.field("item", pa.float32(), True, {})
                                                                            ),
                                                                            True,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "many_strings_required",
                                                                            pa.list_(
                                                                                pa.field("item", pa.utf8(), False, {})
                                                                            ),
                                                                            False,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "many_strings_optional",
                                                                            pa.list_(
                                                                                pa.field("item", pa.utf8(), True, {})
                                                                            ),
                                                                            True,
                                                                            {},
                                                                        ),
                                                                        pa.field(
                                                                            "flattened_scalar", pa.float32(), False, {}
                                                                        ),
                                                                        pa.field(
                                                                            "almost_flattened_scalar",
                                                                            pa.struct(
                                                                                [
                                                                                    pa.field(
                                                                                        "value", pa.float32(), False, {}
                                                                                    )
                                                                                ]
                                                                            ),
                                                                            False,
                                                                            {},
                                                                        ),
                                                                        pa.field("from_parent", pa.bool_(), True, {}),
                                                                    ]
                                                                ),
                                                                False,
                                                                {},
                                                            )
                                                        ),
                                                        False,
                                                        {},
                                                    ),
                                                    pa.field(
                                                        "fixed_size_shenanigans",
                                                        pa.list_(pa.field("item", pa.float32(), False, {}), 3),
                                                        False,
                                                        {},
                                                    ),
                                                ]
                                            ),
                                            True,
                                            {},
                                        )
                                    ),
                                    False,
                                    {},
                                ),
                            ]
                        ),
                        True,
                        {},
                    )
                ]
            ),
            "rerun.testing.datatypes.AffixFuzzer5",
        )


class AffixFuzzer5Array(BaseExtensionArray[AffixFuzzer5ArrayLike]):
    _EXTENSION_NAME = "rerun.testing.datatypes.AffixFuzzer5"
    _EXTENSION_TYPE = AffixFuzzer5Type

    @staticmethod
    def _native_to_pa_array(data: AffixFuzzer5ArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError


AffixFuzzer5Type._ARRAY_TYPE = AffixFuzzer5Array

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(AffixFuzzer5Type())
