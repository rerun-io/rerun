# NOTE: This file was autogenerated by re_types_builder; DO NOT EDIT.

from __future__ import annotations

from attrs import define, field

from .. import components
from .._baseclasses import (
    Archetype,
)

__all__ = ["Image"]


@define(str=False, repr=False)
class Image(Archetype):
    """
    A monochrome or color image.

    The shape of the `TensorData` must be mappable to:
    - A `HxW` tensor, treated as a grayscale image.
    - A `HxWx3` tensor, treated as an RGB image.
    - A `HxWx4` tensor, treated as an RGBA image.

    The viewer has limited support for ignoring extra empty dimensions.
    """

    data: components.TensorDataArray = field(
        metadata={"component": "primary"},
        converter=components.TensorDataArray.from_similar,  # type: ignore[misc]
    )
    """
    The image data. Should always be a rank-2 or rank-3 tensor.
    """

    __str__ = Archetype.__str__
    __repr__ = Archetype.__repr__
