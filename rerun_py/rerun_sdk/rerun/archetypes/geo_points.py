# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/archetypes/geo_points.fbs".

# You can extend this class by creating a "GeoPointsExt" class in "geo_points_ext.py".

from __future__ import annotations

from typing import Any

from attrs import define, field

from .. import components, datatypes
from .._baseclasses import (
    Archetype,
)
from ..error_utils import catch_and_log_exceptions

__all__ = ["GeoPoints"]


@define(str=False, repr=False, init=False)
class GeoPoints(Archetype):
    """
    **Archetype**: Geospatial points with positions expressed in EPSG:4326 altitude and longitude, and optional colors and radii.

    **Note**: Geospatial entities are experimental.
    """

    def __init__(
        self: Any,
        positions: datatypes.DVec2DArrayLike,
        *,
        radii: datatypes.Float32ArrayLike | None = None,
        colors: datatypes.Rgba32ArrayLike | None = None,
    ):
        """
        Create a new instance of the GeoPoints archetype.

        Parameters
        ----------
        positions:
            The EPSG:4326 coordinates for the points.
        radii:
            Optional radii for the points, effectively turning them into circles.
        colors:
            Optional colors for the points.

            The colors are interpreted as RGB or RGBA in sRGB gamma-space,
            As either 0-1 floats or 0-255 integers, with separate alpha.

        """

        # You can define your own __init__ function as a member of GeoPointsExt in geo_points_ext.py
        with catch_and_log_exceptions(context=self.__class__.__name__):
            self.__attrs_init__(positions=positions, radii=radii, colors=colors)
            return
        self.__attrs_clear__()

    def __attrs_clear__(self) -> None:
        """Convenience method for calling `__attrs_init__` with all `None`s."""
        self.__attrs_init__(
            positions=None,  # type: ignore[arg-type]
            radii=None,  # type: ignore[arg-type]
            colors=None,  # type: ignore[arg-type]
        )

    @classmethod
    def _clear(cls) -> GeoPoints:
        """Produce an empty GeoPoints, bypassing `__init__`."""
        inst = cls.__new__(cls)
        inst.__attrs_clear__()
        return inst

    positions: components.LatLonBatch = field(
        metadata={"component": "required"},
        converter=components.LatLonBatch._required,  # type: ignore[misc]
    )
    # The EPSG:4326 coordinates for the points.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    radii: components.RadiusBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.RadiusBatch._optional,  # type: ignore[misc]
    )
    # Optional radii for the points, effectively turning them into circles.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    colors: components.ColorBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.ColorBatch._optional,  # type: ignore[misc]
    )
    # Optional colors for the points.
    #
    # The colors are interpreted as RGB or RGBA in sRGB gamma-space,
    # As either 0-1 floats or 0-255 integers, with separate alpha.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    __str__ = Archetype.__str__
    __repr__ = Archetype.__repr__  # type: ignore[assignment]
