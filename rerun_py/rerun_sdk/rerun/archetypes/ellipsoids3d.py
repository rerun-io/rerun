# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/archetypes/ellipsoids3d.fbs".

# You can extend this class by creating a "Ellipsoids3DExt" class in "ellipsoids3d_ext.py".

from __future__ import annotations

from attrs import define, field

from .. import components
from .._baseclasses import (
    Archetype,
)
from .ellipsoids3d_ext import Ellipsoids3DExt

__all__ = ["Ellipsoids3D"]


@define(str=False, repr=False, init=False)
class Ellipsoids3D(Ellipsoids3DExt, Archetype):
    """
    **Archetype**: 3D ellipsoids or spheres.

    This archetype is for ellipsoids or spheres whose size is a key part of the data
    (e.g. a bounding sphere).
    For points whose radii are for the sake of visualization, use [`archetypes.Points3D`][rerun.archetypes.Points3D] instead.

    Note that orienting and placing the ellipsoids/spheres is handled via `[archetypes.InstancePoses3D]`.
    Some of its component are repeated here for convenience.
    If there's more instance poses than half sizes, the last half size will be repeated for the remaining poses.
    """

    # __init__ can be found in ellipsoids3d_ext.py

    def __attrs_clear__(self) -> None:
        """Convenience method for calling `__attrs_init__` with all `None`s."""
        self.__attrs_init__(
            half_sizes=None,  # type: ignore[arg-type]
            centers=None,  # type: ignore[arg-type]
            rotation_axis_angles=None,  # type: ignore[arg-type]
            quaternions=None,  # type: ignore[arg-type]
            colors=None,  # type: ignore[arg-type]
            line_radii=None,  # type: ignore[arg-type]
            fill_mode=None,  # type: ignore[arg-type]
            labels=None,  # type: ignore[arg-type]
            show_labels=None,  # type: ignore[arg-type]
            class_ids=None,  # type: ignore[arg-type]
        )

    @classmethod
    def _clear(cls) -> Ellipsoids3D:
        """Produce an empty Ellipsoids3D, bypassing `__init__`."""
        inst = cls.__new__(cls)
        inst.__attrs_clear__()
        return inst

    half_sizes: components.HalfSize3DBatch = field(
        metadata={"component": "required"},
        converter=components.HalfSize3DBatch._required,  # type: ignore[misc]
    )
    # For each ellipsoid, half of its size on its three axes.
    #
    # If all components are equal, then it is a sphere with that radius.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    centers: components.PoseTranslation3DBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.PoseTranslation3DBatch._optional,  # type: ignore[misc]
    )
    # Optional center positions of the ellipsoids.
    #
    # If not specified, the centers will be at (0, 0, 0).
    # Note that this uses a [`components.PoseTranslation3D`][rerun.components.PoseTranslation3D] which is also used by [`archetypes.InstancePoses3D`][rerun.archetypes.InstancePoses3D].
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    rotation_axis_angles: components.PoseRotationAxisAngleBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.PoseRotationAxisAngleBatch._optional,  # type: ignore[misc]
    )
    # Rotations via axis + angle.
    #
    # If no rotation is specified, the axes of the ellipsoid align with the axes of the local coordinate system.
    # Note that this uses a [`components.PoseRotationAxisAngle`][rerun.components.PoseRotationAxisAngle] which is also used by [`archetypes.InstancePoses3D`][rerun.archetypes.InstancePoses3D].
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    quaternions: components.PoseRotationQuatBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.PoseRotationQuatBatch._optional,  # type: ignore[misc]
    )
    # Rotations via quaternion.
    #
    # If no rotation is specified, the axes of the ellipsoid align with the axes of the local coordinate system.
    # Note that this uses a [`components.PoseRotationQuat`][rerun.components.PoseRotationQuat] which is also used by [`archetypes.InstancePoses3D`][rerun.archetypes.InstancePoses3D].
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    colors: components.ColorBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.ColorBatch._optional,  # type: ignore[misc]
    )
    # Optional colors for the ellipsoids.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    line_radii: components.RadiusBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.RadiusBatch._optional,  # type: ignore[misc]
    )
    # Optional radii for the lines used when the ellipsoid is rendered as a wireframe.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    fill_mode: components.FillModeBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.FillModeBatch._optional,  # type: ignore[misc]
    )
    # Optionally choose whether the ellipsoids are drawn with lines or solid.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    labels: components.TextBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.TextBatch._optional,  # type: ignore[misc]
    )
    # Optional text labels for the ellipsoids.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    show_labels: components.ShowLabelsBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.ShowLabelsBatch._optional,  # type: ignore[misc]
    )
    # Optional choice of whether the text labels should be shown by default.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    class_ids: components.ClassIdBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.ClassIdBatch._optional,  # type: ignore[misc]
    )
    # Optional class ID for the ellipsoids.
    #
    # The class ID provides colors and labels if not specified explicitly.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    __str__ = Archetype.__str__
    __repr__ = Archetype.__repr__  # type: ignore[assignment]
