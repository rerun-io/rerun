# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/components/depth_meter.fbs".

# You can extend this class by creating a "DepthMeterExt" class in "depth_meter_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import (
    ComponentBatchMixin,
    ComponentMixin,
)

__all__ = ["DepthMeter", "DepthMeterBatch", "DepthMeterType"]


class DepthMeter(datatypes.Float32, ComponentMixin):
    """
    **Component**: The world->depth map scaling factor.

    This measures how many depth map units are in a world unit.
    For instance, if a depth map uses millimeters and the world uses meters,
    this value would be `1000`.

    Note that the only effect on 2D views is the physical depth values shown when hovering the image.
    In 3D views on the other hand, this affects where the points of the point cloud are placed.
    """

    _BATCH_TYPE = None
    # You can define your own __init__ function as a member of DepthMeterExt in depth_meter_ext.py

    # Note: there are no fields here because DepthMeter delegates to datatypes.Float32
    pass


class DepthMeterType(datatypes.Float32Type):
    _TYPE_NAME: str = "rerun.components.DepthMeter"


class DepthMeterBatch(datatypes.Float32Batch, ComponentBatchMixin):
    _ARROW_TYPE = DepthMeterType()


# This is patched in late to avoid circular dependencies.
DepthMeter._BATCH_TYPE = DepthMeterBatch  # type: ignore[assignment]
