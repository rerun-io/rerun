# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/components/tensor_data.fbs".

# You can extend this class by creating a "TensorDataExt" class in "tensor_data_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import ComponentBatchMixin

__all__ = ["TensorData", "TensorDataBatch", "TensorDataType"]


class TensorData(datatypes.TensorData):
    """**Component**: A multi-dimensional `Tensor` with optionally named arguments."""

    # You can define your own __init__ function as a member of TensorDataExt in tensor_data_ext.py

    # Note: there are no fields here because TensorData delegates to datatypes.TensorData
    pass


class TensorDataType(datatypes.TensorDataType):
    _TYPE_NAME: str = "rerun.components.TensorData"


class TensorDataBatch(datatypes.TensorDataBatch, ComponentBatchMixin):
    _ARROW_TYPE = TensorDataType()
