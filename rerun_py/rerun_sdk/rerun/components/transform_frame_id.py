# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/components/transform_frame_id.fbs".

# You can extend this class by creating a "TransformFrameIdExt" class in "transform_frame_id_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import (
    ComponentBatchMixin,
    ComponentMixin,
)

__all__ = ["TransformFrameId", "TransformFrameIdBatch"]


class TransformFrameId(datatypes.Utf8, ComponentMixin):
    """
    **Component**: A string identifier for a transform frame.

    **Experimental:** Transform frames are still in early development!

    Transform frames may be derived from entity paths to refer to Rerun's implicit
    entity path driven hierarchy which is defined via [`archetypes.Transform3D`][rerun.archetypes.Transform3D], [`archetypes.Pinhole`][rerun.archetypes.Pinhole] etc..
    Note that any transform logged at an entity path describes a relationship between the two transform
    frames represented by that entity path and its parent path,
    **not** the transform frame that the entity path may be using.

    ⚠️ **This type is _unstable_ and may change significantly in a way that the data won't be backwards compatible.**
    """

    _BATCH_TYPE = None
    # You can define your own __init__ function as a member of TransformFrameIdExt in transform_frame_id_ext.py

    # Note: there are no fields here because TransformFrameId delegates to datatypes.Utf8


class TransformFrameIdBatch(datatypes.Utf8Batch, ComponentBatchMixin):
    _COMPONENT_TYPE: str = "rerun.components.TransformFrameId"


# This is patched in late to avoid circular dependencies.
TransformFrameId._BATCH_TYPE = TransformFrameIdBatch  # type: ignore[assignment]
