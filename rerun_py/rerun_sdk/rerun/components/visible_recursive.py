# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/components/visible_recursive.fbs".

# You can extend this class by creating a "VisibleRecursiveExt" class in "visible_recursive_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import (
    ComponentBatchMixin,
    ComponentDescriptor,
    ComponentMixin,
)

__all__ = ["VisibleRecursive", "VisibleRecursiveBatch"]


class VisibleRecursive(datatypes.Bool, ComponentMixin):
    """**Component**: Whether the container, view, entity or instance and its children are currently visible."""

    _BATCH_TYPE = None
    # You can define your own __init__ function as a member of VisibleRecursiveExt in visible_recursive_ext.py

    # Note: there are no fields here because VisibleRecursive delegates to datatypes.Bool


class VisibleRecursiveBatch(datatypes.BoolBatch, ComponentBatchMixin):
    _COMPONENT_DESCRIPTOR: ComponentDescriptor = ComponentDescriptor("rerun.components.VisibleRecursive")


# This is patched in late to avoid circular dependencies.
VisibleRecursive._BATCH_TYPE = VisibleRecursiveBatch  # type: ignore[assignment]
