# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/components/count.fbs".

# You can extend this class by creating a "CountExt" class in "count_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import (
    ComponentBatchMixin,
    ComponentMixin,
)

__all__ = ["Count", "CountBatch"]


class Count(datatypes.UInt64, ComponentMixin):
    """
    **Component**: A generic count value.

    Used for counting various entities like messages, schemas, channels, etc.

    ⚠️ **This type is _unstable_ and may change significantly in a way that the data won't be backwards compatible.**
    """

    _BATCH_TYPE = None
    # You can define your own __init__ function as a member of CountExt in count_ext.py

    # Note: there are no fields here because Count delegates to datatypes.UInt64


class CountBatch(datatypes.UInt64Batch, ComponentBatchMixin):
    _COMPONENT_TYPE: str = "rerun.components.Count"


# This is patched in late to avoid circular dependencies.
Count._BATCH_TYPE = CountBatch  # type: ignore[assignment]
