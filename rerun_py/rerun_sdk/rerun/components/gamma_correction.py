# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/components/gamma_correction.fbs".

# You can extend this class by creating a "GammaCorrectionExt" class in "gamma_correction_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import (
    ComponentBatchMixin,
    ComponentMixin,
)

__all__ = ["GammaCorrection", "GammaCorrectionBatch", "GammaCorrectionType"]


class GammaCorrection(datatypes.Float32, ComponentMixin):
    """
    **Component**: A gamma correction value to be used with a scalar value or color.

    Used to adjust the gamma of a color or scalar value between 0 and 1 before rendering.
    `new_value = old_value ^ gamma`

    Valid range is from 0 (excluding) to max float.
    Defaults to 1.0 unless otherwise specified.
    """

    _BATCH_TYPE = None
    # You can define your own __init__ function as a member of GammaCorrectionExt in gamma_correction_ext.py

    # Note: there are no fields here because GammaCorrection delegates to datatypes.Float32
    pass


class GammaCorrectionType(datatypes.Float32Type):
    _TYPE_NAME: str = "rerun.components.GammaCorrection"


class GammaCorrectionBatch(datatypes.Float32Batch, ComponentBatchMixin):
    _ARROW_TYPE = GammaCorrectionType()


# This is patched in late to avoid circular dependencies.
GammaCorrection._BATCH_TYPE = GammaCorrectionBatch  # type: ignore[assignment]
