# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/components/rotation3d.fbs".

# You can extend this class by creating a "Rotation3DExt" class in "rotation3d_ext.py".

from __future__ import annotations

from .. import datatypes
from .._baseclasses import (
    BaseDelegatingExtensionArray,
    BaseDelegatingExtensionType,
)

__all__ = ["Rotation3D", "Rotation3DArray", "Rotation3DType"]


class Rotation3D(datatypes.Rotation3D):
    """A 3D rotation, represented either by a quaternion or a rotation around axis."""

    # You can define your own __init__ function as a member of Rotation3DExt in rotation3d_ext.py

    # Note: there are no fields here because Rotation3D delegates to datatypes.Rotation3D
    pass


class Rotation3DType(BaseDelegatingExtensionType):
    _TYPE_NAME = "rerun.components.Rotation3D"
    _DELEGATED_EXTENSION_TYPE = datatypes.Rotation3DType


class Rotation3DArray(BaseDelegatingExtensionArray[datatypes.Rotation3DArrayLike]):
    _EXTENSION_NAME = "rerun.components.Rotation3D"
    _EXTENSION_TYPE = Rotation3DType
    _DELEGATED_ARRAY_TYPE = datatypes.Rotation3DArray


Rotation3DType._ARRAY_TYPE = Rotation3DArray

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(Rotation3DType())
