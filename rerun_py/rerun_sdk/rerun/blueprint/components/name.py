# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/blueprint/components/name.fbs".

# You can extend this class by creating a "NameExt" class in "name_ext.py".

from __future__ import annotations

from typing import Any, Sequence, Union

import pyarrow as pa
from attrs import define, field

from ..._baseclasses import BaseBatch, BaseExtensionType, ComponentBatchMixin

__all__ = ["Name", "NameArrayLike", "NameBatch", "NameLike", "NameType"]


@define(init=False)
class Name:
    """**Component**: The name of a blueprint entity."""

    def __init__(self: Any, value: NameLike):
        """Create a new instance of the Name component."""

        # You can define your own __init__ function as a member of NameExt in name_ext.py
        self.__attrs_init__(value=value)

    value: str = field(converter=str)

    def __str__(self) -> str:
        return str(self.value)


NameLike = Name
NameArrayLike = Union[
    Name,
    Sequence[NameLike],
]


class NameType(BaseExtensionType):
    _TYPE_NAME: str = "rerun.blueprint.components.Name"

    def __init__(self) -> None:
        pa.ExtensionType.__init__(self, pa.utf8(), self._TYPE_NAME)


class NameBatch(BaseBatch[NameArrayLike], ComponentBatchMixin):
    _ARROW_TYPE = NameType()

    @staticmethod
    def _native_to_pa_array(data: NameArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError  # You need to implement native_to_pa_array_override in name_ext.py
