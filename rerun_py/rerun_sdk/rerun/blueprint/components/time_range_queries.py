# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/blueprint/components/time_range_queries.fbs".

# You can extend this class by creating a "TimeRangeQueriesExt" class in "time_range_queries_ext.py".

from __future__ import annotations

from typing import Any, Sequence, Union

import pyarrow as pa
from attrs import define, field

from ..._baseclasses import (
    BaseBatch,
    BaseExtensionType,
    ComponentBatchMixin,
    ComponentMixin,
)
from ...blueprint import datatypes as blueprint_datatypes

__all__ = [
    "TimeRangeQueries",
    "TimeRangeQueriesArrayLike",
    "TimeRangeQueriesBatch",
    "TimeRangeQueriesLike",
    "TimeRangeQueriesType",
]


@define(init=False)
class TimeRangeQueries(ComponentMixin):
    """**Component**: Component(s) used as point-of-view for a query."""

    _BATCH_TYPE = None

    def __init__(self: Any, value: TimeRangeQueriesLike):
        """Create a new instance of the TimeRangeQueries component."""

        # You can define your own __init__ function as a member of TimeRangeQueriesExt in time_range_queries_ext.py
        self.__attrs_init__(value=value)

    value: list[blueprint_datatypes.TimeRangeQuery] = field()


TimeRangeQueriesLike = TimeRangeQueries
TimeRangeQueriesArrayLike = Union[
    TimeRangeQueries,
    Sequence[TimeRangeQueriesLike],
]


class TimeRangeQueriesType(BaseExtensionType):
    _TYPE_NAME: str = "rerun.blueprint.components.TimeRangeQueries"

    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self,
            pa.list_(
                pa.field(
                    "item",
                    pa.struct([
                        pa.field("timeline", pa.utf8(), nullable=False, metadata={}),
                        pa.field("start", pa.int64(), nullable=False, metadata={}),
                        pa.field("end", pa.int64(), nullable=False, metadata={}),
                    ]),
                    nullable=False,
                    metadata={},
                )
            ),
            self._TYPE_NAME,
        )


class TimeRangeQueriesBatch(BaseBatch[TimeRangeQueriesArrayLike], ComponentBatchMixin):
    _ARROW_TYPE = TimeRangeQueriesType()

    @staticmethod
    def _native_to_pa_array(data: TimeRangeQueriesArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError(
            "Arrow serialization of TimeRangeQueries not implemented: We lack codegen for arrow-serialization of general structs"
        )  # You need to implement native_to_pa_array_override in time_range_queries_ext.py


# This is patched in late to avoid circular dependencies.
TimeRangeQueries._BATCH_TYPE = TimeRangeQueriesBatch  # type: ignore[assignment]
