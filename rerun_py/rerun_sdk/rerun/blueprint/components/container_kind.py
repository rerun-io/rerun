# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/blueprint/components/container_kind.fbs".

# You can extend this class by creating a "ContainerKindExt" class in "container_kind_ext.py".

from __future__ import annotations

from typing import Any, Sequence, Union

import numpy as np
import numpy.typing as npt
import pyarrow as pa
from attrs import define, field

from ..._baseclasses import BaseBatch, BaseExtensionType, ComponentBatchMixin

__all__ = ["ContainerKind", "ContainerKindArrayLike", "ContainerKindBatch", "ContainerKindLike", "ContainerKindType"]


@define(init=False)
class ContainerKind:
    """**Component**: The kind of a blueprint container."""

    def __init__(self: Any, kind: ContainerKindLike):
        """
        Create a new instance of the ContainerKind component.

        Parameters
        ----------
        kind:
            Which kind of container this is.

            Allowed values:
             - Tabs = 1
             - Horizontal = 2
             - Vertical = 3
             - Grid = 4
        """

        # You can define your own __init__ function as a member of ContainerKindExt in container_kind_ext.py
        self.__attrs_init__(kind=kind)

    kind: int = field(converter=int)
    # Which kind of container this is.
    #
    # Allowed values:
    #  - Tabs = 1
    #  - Horizontal = 2
    #  - Vertical = 3
    #  - Grid = 4
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    def __array__(self, dtype: npt.DTypeLike = None) -> npt.NDArray[Any]:
        # You can define your own __array__ function as a member of ContainerKindExt in container_kind_ext.py
        return np.asarray(self.kind, dtype=dtype)

    def __int__(self) -> int:
        return int(self.kind)


ContainerKindLike = ContainerKind
ContainerKindArrayLike = Union[
    ContainerKind,
    Sequence[ContainerKindLike],
]


class ContainerKindType(BaseExtensionType):
    _TYPE_NAME: str = "rerun.blueprint.components.ContainerKind"

    def __init__(self) -> None:
        pa.ExtensionType.__init__(self, pa.uint8(), self._TYPE_NAME)


class ContainerKindBatch(BaseBatch[ContainerKindArrayLike], ComponentBatchMixin):
    _ARROW_TYPE = ContainerKindType()

    @staticmethod
    def _native_to_pa_array(data: ContainerKindArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError  # You need to implement native_to_pa_array_override in container_kind_ext.py
