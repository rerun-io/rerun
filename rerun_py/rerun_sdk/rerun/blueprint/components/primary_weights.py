# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/blueprint/components/primary_weights.fbs".

# You can extend this class by creating a "PrimaryWeightsExt" class in "primary_weights_ext.py".

from __future__ import annotations

from typing import Any, Sequence, Union

import numpy as np
import numpy.typing as npt
import pyarrow as pa
from attrs import define, field

from ..._baseclasses import BaseBatch, BaseExtensionType, ComponentBatchMixin
from ..._converters import (
    to_np_float32,
)

__all__ = [
    "PrimaryWeights",
    "PrimaryWeightsArrayLike",
    "PrimaryWeightsBatch",
    "PrimaryWeightsLike",
    "PrimaryWeightsType",
]


@define(init=False)
class PrimaryWeights:
    """
    **Component**: The weights of the primary axis.

    For `Grid` this is the column weights.
    """

    def __init__(self: Any, weights: PrimaryWeightsLike):
        """
        Create a new instance of the PrimaryWeights component.

        Parameters
        ----------
        weights:
            The weighting of each container element.
        """

        # You can define your own __init__ function as a member of PrimaryWeightsExt in primary_weights_ext.py
        self.__attrs_init__(weights=weights)

    weights: npt.NDArray[np.float32] = field(converter=to_np_float32)
    # The weighting of each container element.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    def __array__(self, dtype: npt.DTypeLike = None) -> npt.NDArray[Any]:
        # You can define your own __array__ function as a member of PrimaryWeightsExt in primary_weights_ext.py
        return np.asarray(self.weights, dtype=dtype)


PrimaryWeightsLike = PrimaryWeights
PrimaryWeightsArrayLike = Union[
    PrimaryWeights,
    Sequence[PrimaryWeightsLike],
]


class PrimaryWeightsType(BaseExtensionType):
    _TYPE_NAME: str = "rerun.blueprint.components.PrimaryWeights"

    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self, pa.list_(pa.field("item", pa.float32(), nullable=False, metadata={})), self._TYPE_NAME
        )


class PrimaryWeightsBatch(BaseBatch[PrimaryWeightsArrayLike], ComponentBatchMixin):
    _ARROW_TYPE = PrimaryWeightsType()

    @staticmethod
    def _native_to_pa_array(data: PrimaryWeightsArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError  # You need to implement native_to_pa_array_override in primary_weights_ext.py
