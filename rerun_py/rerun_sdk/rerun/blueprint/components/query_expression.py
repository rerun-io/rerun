# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/re_types/definitions/rerun/blueprint/components/query_expression.fbs".

# You can extend this class by creating a "QueryExpressionExt" class in "query_expression_ext.py".

from __future__ import annotations

from ... import datatypes
from ..._baseclasses import ComponentBatchMixin

__all__ = ["QueryExpression", "QueryExpressionBatch", "QueryExpressionType"]


class QueryExpression(datatypes.Utf8):
    """
    **Component**: A way to filter a set of `EntityPath`s.

    This implements as simple set of include/exclude rules:

    ```diff
    + /world/**           # add everything…
    - /world/roads/**     # …but remove all roads…
    + /world/roads/main   # …but show main road
    ```

    If there is multiple matching rules, the most specific rule wins.
    If there are multiple rules of the same specificity, the last one wins.
    If no rules match, the path is excluded.

    The `/**` suffix matches the whole subtree, i.e. self and any child, recursively
    (`/world/**` matches both `/world` and `/world/car/driver`).
    Other uses of `*` are not (yet) supported.

    Internally, `EntityPathFilter` sorts the rule by entity path, with recursive coming before non-recursive.
    This means the last matching rule is also the most specific one.
    For instance:

    ```diff
    + /world/**
    - /world
    - /world/car/**
    + /world/car/driver
    ```

    The last rule matching `/world/car/driver` is `+ /world/car/driver`, so it is included.
    The last rule matching `/world/car/hood` is `- /world/car/**`, so it is excluded.
    The last rule matching `/world` is `- /world`, so it is excluded.
    The last rule matching `/world/house` is `+ /world/**`, so it is included.

    Unstable. Used for the ongoing blueprint experimentations.
    """

    # You can define your own __init__ function as a member of QueryExpressionExt in query_expression_ext.py

    # Note: there are no fields here because QueryExpression delegates to datatypes.Utf8
    pass


class QueryExpressionType(datatypes.Utf8Type):
    _TYPE_NAME: str = "rerun.blueprint.components.QueryExpression"


class QueryExpressionBatch(datatypes.Utf8Batch, ComponentBatchMixin):
    _ARROW_TYPE = QueryExpressionType()
