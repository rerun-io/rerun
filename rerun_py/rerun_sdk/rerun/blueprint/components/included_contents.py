# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/blueprint/components/included_contents.fbs".

# You can extend this class by creating a "IncludedContentsExt" class in "included_contents_ext.py".

from __future__ import annotations

from typing import Any, Sequence, Union

import pyarrow as pa
from attrs import define, field

from ... import datatypes
from ..._baseclasses import BaseBatch, BaseExtensionType, ComponentBatchMixin

__all__ = [
    "IncludedContents",
    "IncludedContentsArrayLike",
    "IncludedContentsBatch",
    "IncludedContentsLike",
    "IncludedContentsType",
]


@define(init=False)
class IncludedContents:
    """**Component**: All the contents in the container."""

    def __init__(self: Any, contents: IncludedContentsLike):
        """
        Create a new instance of the IncludedContents component.

        Parameters
        ----------
        contents:
            List of the contents by EntityPath.

            This must be a path in the blueprint store.
            Typically structure as `<blueprint_registry>/<uuid>`.
        """

        # You can define your own __init__ function as a member of IncludedContentsExt in included_contents_ext.py
        self.__attrs_init__(contents=contents)

    contents: list[datatypes.EntityPath] = field()
    # List of the contents by EntityPath.
    #
    # This must be a path in the blueprint store.
    # Typically structure as `<blueprint_registry>/<uuid>`.
    #
    # (Docstring intentionally commented out to hide this field from the docs)


IncludedContentsLike = IncludedContents
IncludedContentsArrayLike = Union[
    IncludedContents,
    Sequence[IncludedContentsLike],
]


class IncludedContentsType(BaseExtensionType):
    _TYPE_NAME: str = "rerun.blueprint.components.IncludedContents"

    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self, pa.list_(pa.field("item", pa.utf8(), nullable=False, metadata={})), self._TYPE_NAME
        )


class IncludedContentsBatch(BaseBatch[IncludedContentsArrayLike], ComponentBatchMixin):
    _ARROW_TYPE = IncludedContentsType()

    @staticmethod
    def _native_to_pa_array(data: IncludedContentsArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError  # You need to implement native_to_pa_array_override in included_contents_ext.py
