# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/blueprint/archetypes/dataframe_query.fbs".

# You can extend this class by creating a "DataframeQueryV2Ext" class in "dataframe_query_v2_ext.py".

from __future__ import annotations

from typing import Any

from attrs import define, field

from ... import datatypes
from ..._baseclasses import (
    Archetype,
)
from ...blueprint import components as blueprint_components, datatypes as blueprint_datatypes
from ...error_utils import catch_and_log_exceptions

__all__ = ["DataframeQueryV2"]


@define(str=False, repr=False, init=False)
class DataframeQueryV2(Archetype):
    """**Archetype**: The query for the dataframe view."""

    def __init__(
        self: Any,
        *,
        timeline: datatypes.Utf8Like | None = None,
        filter_by_range: blueprint_datatypes.FilterByRangeLike | None = None,
        filter_by_event: blueprint_datatypes.FilterByEventLike | None = None,
        apply_latest_at: datatypes.BoolLike | None = None,
        select: blueprint_datatypes.SelectedColumnsLike | None = None,
    ):
        """
        Create a new instance of the DataframeQueryV2 archetype.

        Parameters
        ----------
        timeline:
            The timeline for this query.

            If unset, the timeline currently active on the time panel is used.
        filter_by_range:
            If provided, only rows whose timestamp is within this range will be shown.

            Note: will be unset as soon as `timeline` is changed.
        filter_by_event:
            If provided, only show rows which contains a logged event for the specified component.
        apply_latest_at:
            Should empty cells be filled with latest-at queries?
        select:
            Selected columns. If unset, all columns are selected.

        """

        # You can define your own __init__ function as a member of DataframeQueryV2Ext in dataframe_query_v2_ext.py
        with catch_and_log_exceptions(context=self.__class__.__name__):
            self.__attrs_init__(
                timeline=timeline,
                filter_by_range=filter_by_range,
                filter_by_event=filter_by_event,
                apply_latest_at=apply_latest_at,
                select=select,
            )
            return
        self.__attrs_clear__()

    def __attrs_clear__(self) -> None:
        """Convenience method for calling `__attrs_init__` with all `None`s."""
        self.__attrs_init__(
            timeline=None,  # type: ignore[arg-type]
            filter_by_range=None,  # type: ignore[arg-type]
            filter_by_event=None,  # type: ignore[arg-type]
            apply_latest_at=None,  # type: ignore[arg-type]
            select=None,  # type: ignore[arg-type]
        )

    @classmethod
    def _clear(cls) -> DataframeQueryV2:
        """Produce an empty DataframeQueryV2, bypassing `__init__`."""
        inst = cls.__new__(cls)
        inst.__attrs_clear__()
        return inst

    timeline: blueprint_components.TimelineNameBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=blueprint_components.TimelineNameBatch._optional,  # type: ignore[misc]
    )
    # The timeline for this query.
    #
    # If unset, the timeline currently active on the time panel is used.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    filter_by_range: blueprint_components.FilterByRangeBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=blueprint_components.FilterByRangeBatch._optional,  # type: ignore[misc]
    )
    # If provided, only rows whose timestamp is within this range will be shown.
    #
    # Note: will be unset as soon as `timeline` is changed.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    filter_by_event: blueprint_components.FilterByEventBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=blueprint_components.FilterByEventBatch._optional,  # type: ignore[misc]
    )
    # If provided, only show rows which contains a logged event for the specified component.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    apply_latest_at: blueprint_components.ApplyLatestAtBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=blueprint_components.ApplyLatestAtBatch._optional,  # type: ignore[misc]
    )
    # Should empty cells be filled with latest-at queries?
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    select: blueprint_components.SelectedColumnsBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=blueprint_components.SelectedColumnsBatch._optional,  # type: ignore[misc]
    )
    # Selected columns. If unset, all columns are selected.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    __str__ = Archetype.__str__
    __repr__ = Archetype.__repr__  # type: ignore[assignment]
