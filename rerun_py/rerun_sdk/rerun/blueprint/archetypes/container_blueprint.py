# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/blueprint/archetypes/container_blueprint.fbs".

# You can extend this class by creating a "ContainerBlueprintExt" class in "container_blueprint_ext.py".

from __future__ import annotations

from typing import Any

from attrs import define, field

from ... import datatypes
from ..._baseclasses import Archetype
from ...error_utils import catch_and_log_exceptions
from .. import components

__all__ = ["ContainerBlueprint"]


@define(str=False, repr=False, init=False)
class ContainerBlueprint(Archetype):
    """**Archetype**: The top-level description of the Viewport."""

    def __init__(
        self: Any,
        container_kind: components.ContainerKindLike,
        *,
        display_name: components.NameLike | None = None,
        contents: components.IncludedContentsLike | None = None,
        col_shares: components.ColumnSharesLike | None = None,
        row_shares: components.RowSharesLike | None = None,
        active_tab: datatypes.EntityPathLike | None = None,
        visible: components.VisibleLike | None = None,
        grid_columns: components.GridColumnsLike | None = None,
    ):
        """
        Create a new instance of the ContainerBlueprint archetype.

        Parameters
        ----------
        container_kind:
            The class of the view.
        display_name:
            The name of the container.
        contents:
            `ContainerIds`s or `SpaceViewId`s that are children of this container.
        col_shares:
            The layout shares of each column in the container.

            For `Horizontal` containers, the length of this list should always match the number of contents.

            Ignored for `Vertical` containers.
        row_shares:
            The layout shares of each row of the container.

            For `Vertical` containers, the length of this list should always match the number of contents.

            Ignored for `Horizontal` containers.
        active_tab:
            Which tab is active.

            Only applies to `Tabs` containers.
        visible:
            Whether this container is visible.

            Defaults to true if not specified.
        grid_columns:
            How many columns this grid should have.

            If unset, the grid layout will be auto.

            Ignored for `Horizontal`/`Vertical` containers.
        """

        # You can define your own __init__ function as a member of ContainerBlueprintExt in container_blueprint_ext.py
        with catch_and_log_exceptions(context=self.__class__.__name__):
            self.__attrs_init__(
                container_kind=container_kind,
                display_name=display_name,
                contents=contents,
                col_shares=col_shares,
                row_shares=row_shares,
                active_tab=active_tab,
                visible=visible,
                grid_columns=grid_columns,
            )
            return
        self.__attrs_clear__()

    def __attrs_clear__(self) -> None:
        """Convenience method for calling `__attrs_init__` with all `None`s."""
        self.__attrs_init__(
            container_kind=None,  # type: ignore[arg-type]
            display_name=None,  # type: ignore[arg-type]
            contents=None,  # type: ignore[arg-type]
            col_shares=None,  # type: ignore[arg-type]
            row_shares=None,  # type: ignore[arg-type]
            active_tab=None,  # type: ignore[arg-type]
            visible=None,  # type: ignore[arg-type]
            grid_columns=None,  # type: ignore[arg-type]
        )

    @classmethod
    def _clear(cls) -> ContainerBlueprint:
        """Produce an empty ContainerBlueprint, bypassing `__init__`."""
        inst = cls.__new__(cls)
        inst.__attrs_clear__()
        return inst

    container_kind: components.ContainerKindBatch = field(
        metadata={"component": "required"},
        converter=components.ContainerKindBatch._required,  # type: ignore[misc]
    )
    # The class of the view.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    display_name: components.NameBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.NameBatch._optional,  # type: ignore[misc]
    )
    # The name of the container.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    contents: components.IncludedContentsBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.IncludedContentsBatch._optional,  # type: ignore[misc]
    )
    # `ContainerIds`s or `SpaceViewId`s that are children of this container.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    col_shares: components.ColumnSharesBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.ColumnSharesBatch._optional,  # type: ignore[misc]
    )
    # The layout shares of each column in the container.
    #
    # For `Horizontal` containers, the length of this list should always match the number of contents.
    #
    # Ignored for `Vertical` containers.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    row_shares: components.RowSharesBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.RowSharesBatch._optional,  # type: ignore[misc]
    )
    # The layout shares of each row of the container.
    #
    # For `Vertical` containers, the length of this list should always match the number of contents.
    #
    # Ignored for `Horizontal` containers.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    active_tab: components.ActiveTabBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.ActiveTabBatch._optional,  # type: ignore[misc]
    )
    # Which tab is active.
    #
    # Only applies to `Tabs` containers.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    visible: components.VisibleBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.VisibleBatch._optional,  # type: ignore[misc]
    )
    # Whether this container is visible.
    #
    # Defaults to true if not specified.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    grid_columns: components.GridColumnsBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.GridColumnsBatch._optional,  # type: ignore[misc]
    )
    # How many columns this grid should have.
    #
    # If unset, the grid layout will be auto.
    #
    # Ignored for `Horizontal`/`Vertical` containers.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    __str__ = Archetype.__str__
    __repr__ = Archetype.__repr__
