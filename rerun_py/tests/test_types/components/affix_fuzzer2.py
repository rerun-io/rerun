# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/testing/components/fuzzy.fbs".

# You can extend this class by creating a "AffixFuzzer2Ext" class in "affix_fuzzer2_ext.py".

from __future__ import annotations

from rerun._baseclasses import (
    BaseDelegatingExtensionArray,
    BaseDelegatingExtensionType,
)

from .. import datatypes

__all__ = ["AffixFuzzer2", "AffixFuzzer2Array", "AffixFuzzer2Type"]


class AffixFuzzer2(datatypes.AffixFuzzer1):
    # You can define your own __init__ function as a member of AffixFuzzer2Ext in affix_fuzzer2_ext.py

    # Note: there are no fields here because AffixFuzzer2 delegates to datatypes.AffixFuzzer1
    pass


class AffixFuzzer2Type(BaseDelegatingExtensionType):
    _TYPE_NAME = "rerun.testing.components.AffixFuzzer2"
    _DELEGATED_EXTENSION_TYPE = datatypes.AffixFuzzer1Type


class AffixFuzzer2Array(BaseDelegatingExtensionArray[datatypes.AffixFuzzer1ArrayLike]):
    _EXTENSION_NAME = "rerun.testing.components.AffixFuzzer2"
    _EXTENSION_TYPE = AffixFuzzer2Type
    _DELEGATED_ARRAY_TYPE = datatypes.AffixFuzzer1Array


AffixFuzzer2Type._ARRAY_TYPE = AffixFuzzer2Array

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(AffixFuzzer2Type())
