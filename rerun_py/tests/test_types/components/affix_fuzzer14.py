# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/testing/components/fuzzy.fbs".

# You can extend this class by creating a "AffixFuzzer14Ext" class in "affix_fuzzer14_ext.py".

from __future__ import annotations

from rerun._baseclasses import (
    BaseDelegatingExtensionArray,
    BaseDelegatingExtensionType,
)

from .. import datatypes

__all__ = ["AffixFuzzer14", "AffixFuzzer14Array", "AffixFuzzer14Type"]


class AffixFuzzer14(datatypes.AffixFuzzer3):
    # You can define your own __init__ function as a member of AffixFuzzer14Ext in affix_fuzzer14_ext.py

    # Note: there are no fields here because AffixFuzzer14 delegates to datatypes.AffixFuzzer3
    pass


class AffixFuzzer14Type(BaseDelegatingExtensionType):
    _TYPE_NAME = "rerun.testing.components.AffixFuzzer14"
    _DELEGATED_EXTENSION_TYPE = datatypes.AffixFuzzer3Type


class AffixFuzzer14Array(BaseDelegatingExtensionArray[datatypes.AffixFuzzer3ArrayLike]):
    _EXTENSION_NAME = "rerun.testing.components.AffixFuzzer14"
    _EXTENSION_TYPE = AffixFuzzer14Type
    _DELEGATED_ARRAY_TYPE = datatypes.AffixFuzzer3Array


AffixFuzzer14Type._ARRAY_TYPE = AffixFuzzer14Array

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(AffixFuzzer14Type())
