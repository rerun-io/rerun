// DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/re_types/definitions/rerun/archetypes/clear.fbs".

#include "clear.hpp"

#include "../collection_adapter_builtins.hpp"

namespace rerun::archetypes {
    const char Clear::INDICATOR_COMPONENT_NAME[] = "rerun.components.ClearIndicator";
}

namespace rerun {

    Result<std::vector<SerializedComponentBatch>> AsComponents<archetypes::Clear>::serialize(
        const archetypes::Clear& archetype
    ) {
        using namespace archetypes;
        std::vector<SerializedComponentBatch> cells;
        cells.reserve(1);

        {
            const size_t size = 1;
            auto result =
                rerun::components::ClearIsRecursive::to_data_cell(&archetype.is_recursive, size);
            RR_RETURN_NOT_OK(result.error);
            cells.emplace_back(std::move(result.value), size);
        }
        {
            auto indicator = Clear::IndicatorComponent();
            auto result = Clear::IndicatorComponent::to_data_cell(&indicator, 1);
            RR_RETURN_NOT_OK(result.error);
            cells.emplace_back(std::move(result.value), 1);
        }

        return cells;
    }
} // namespace rerun
