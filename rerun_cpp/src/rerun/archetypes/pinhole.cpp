// DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/re_types/definitions/rerun/archetypes/pinhole.fbs".

#include "pinhole.hpp"

#include "../indicator_component.hpp"

namespace rerun {
    namespace archetypes {
        const char Pinhole::INDICATOR_COMPONENT_NAME[] = "rerun.components.PinholeIndicator";

        std::vector<AnonymousComponentBatch> Pinhole::as_component_batches() const {
            std::vector<AnonymousComponentBatch> comp_batches;
            comp_batches.reserve(3);

            comp_batches.emplace_back(image_from_camera);
            if (resolution.has_value()) {
                comp_batches.emplace_back(resolution.value());
            }
            if (camera_xyz.has_value()) {
                comp_batches.emplace_back(camera_xyz.value());
            }
            comp_batches.emplace_back(
                ComponentBatch<components::IndicatorComponent<Pinhole::INDICATOR_COMPONENT_NAME>>(
                    nullptr,
                    num_instances()
                )
            );

            return comp_batches;
        }
    } // namespace archetypes
} // namespace rerun
