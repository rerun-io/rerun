// DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/re_types/definitions/rerun/datatypes/uuid.fbs".

#pragma once

#include "../result.hpp"

#include <array>
#include <cstdint>
#include <memory>

namespace arrow {
    class DataType;
    class FixedSizeListBuilder;
    class MemoryPool;
} // namespace arrow

namespace rerun::datatypes {
    /// **Datatype**: A 16-byte uuid.
    struct Uuid {
        std::array<uint8_t, 16> bytes;

      public:
        Uuid() = default;

        Uuid(std::array<uint8_t, 16> bytes_) : bytes(bytes_) {}

        Uuid& operator=(std::array<uint8_t, 16> bytes_) {
            bytes = bytes_;
            return *this;
        }

        /// Returns the arrow data type this type corresponds to.
        static const std::shared_ptr<arrow::DataType>& arrow_datatype();

        /// Creates a new array builder with an array of this type.
        static Result<std::shared_ptr<arrow::FixedSizeListBuilder>> new_arrow_array_builder(
            arrow::MemoryPool* memory_pool
        );

        /// Fills an arrow array builder with an array of this type.
        static rerun::Error fill_arrow_array_builder(
            arrow::FixedSizeListBuilder* builder, const Uuid* elements, size_t num_elements
        );
    };
} // namespace rerun::datatypes
