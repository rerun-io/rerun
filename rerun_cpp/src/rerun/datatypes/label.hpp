// DO NOT EDIT!: This file was auto-generated by crates/re_types_builder/src/codegen/cpp/mod.rs:54.
// Based on "crates/re_types/definitions/rerun/datatypes/label.fbs".

#pragma once

#include "../result.hpp"

#include <cstdint>
#include <memory>
#include <string>
#include <utility>

namespace arrow {
    class DataType;
    class MemoryPool;
    class StringBuilder;
} // namespace arrow

namespace rerun {
    namespace datatypes {
        /// A String label datatype.
        struct Label {
            std::string value;

          public:
            // Extensions to generated type defined in 'label_ext.cpp'

            /// Construct Label from c string.
            Label(const char* str) : value(str) {}

            const char* c_str() const {
                return value.c_str();
            }

          public:
            Label() = default;

            Label(std::string _value) : value(std::move(_value)) {}

            Label& operator=(std::string _value) {
                value = std::move(_value);
                return *this;
            }

            /// Returns the arrow data type this type corresponds to.
            static const std::shared_ptr<arrow::DataType>& arrow_datatype();

            /// Creates a new array builder with an array of this type.
            static Result<std::shared_ptr<arrow::StringBuilder>> new_arrow_array_builder(
                arrow::MemoryPool* memory_pool
            );

            /// Fills an arrow array builder with an array of this type.
            static Error fill_arrow_array_builder(
                arrow::StringBuilder* builder, const Label* elements, size_t num_elements
            );
        };
    } // namespace datatypes
} // namespace rerun
