// DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/re_types/definitions/rerun/blueprint/entity_properties_component.fbs".

#pragma once

#include "../collection.hpp"
#include "../result.hpp"

#include <cstdint>
#include <memory>
#include <utility>

namespace arrow {
    class DataType;
    class StructBuilder;
} // namespace arrow

namespace rerun::blueprint {
    /// **Blueprint**: The configurable set of overridable properties.
    ///
    /// Unstable. Used for the ongoing blueprint experimentations.
    struct EntityPropertiesComponent {
        rerun::Collection<uint8_t> props;

      public:
        EntityPropertiesComponent() = default;

        EntityPropertiesComponent(rerun::Collection<uint8_t> props_) : props(std::move(props_)) {}

        EntityPropertiesComponent& operator=(rerun::Collection<uint8_t> props_) {
            props = std::move(props_);
            return *this;
        }

        /// Returns the arrow data type this type corresponds to.
        static const std::shared_ptr<arrow::DataType>& arrow_datatype();

        /// Fills an arrow array builder with an array of this type.
        static rerun::Error fill_arrow_array_builder(
            arrow::StructBuilder* builder, const EntityPropertiesComponent* elements,
            size_t num_elements
        );
    };
} // namespace rerun::blueprint
