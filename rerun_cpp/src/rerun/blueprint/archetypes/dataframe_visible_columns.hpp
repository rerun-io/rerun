// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/store/re_types/definitions/rerun/blueprint/archetypes/dataframe_visible_columns.fbs".

#pragma once

#include "../../blueprint/components/column_selection_mode.hpp"
#include "../../blueprint/components/component_column_selector.hpp"
#include "../../blueprint/components/timeline_name.hpp"
#include "../../collection.hpp"
#include "../../compiler_utils.hpp"
#include "../../component_batch.hpp"
#include "../../indicator_component.hpp"
#include "../../result.hpp"

#include <cstdint>
#include <optional>
#include <utility>
#include <vector>

namespace rerun::blueprint::archetypes {
    /// **Archetype**: Which columns should be displayed by the dataframe view.
    struct DataframeVisibleColumns {
        /// Are all column selected, or only those specified by the user?
        std::optional<rerun::blueprint::components::ColumnSelectionMode> selection_mode;

        /// The time columns to include (if mode is set to "Selected").
        std::optional<Collection<rerun::blueprint::components::TimelineName>> time_columns;

        /// The component columns to include (if mode is set to "Selected").
        std::optional<Collection<rerun::blueprint::components::ComponentColumnSelector>>
            component_columns;

      public:
        static constexpr const char IndicatorComponentName[] =
            "rerun.blueprint.components.DataframeVisibleColumnsIndicator";

        /// Indicator component, used to identify the archetype when converting to a list of components.
        using IndicatorComponent = rerun::components::IndicatorComponent<IndicatorComponentName>;

      public:
        DataframeVisibleColumns() = default;
        DataframeVisibleColumns(DataframeVisibleColumns&& other) = default;

        /// Are all column selected, or only those specified by the user?
        DataframeVisibleColumns with_selection_mode(
            rerun::blueprint::components::ColumnSelectionMode _selection_mode
        ) && {
            selection_mode = std::move(_selection_mode);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }

        /// The time columns to include (if mode is set to "Selected").
        DataframeVisibleColumns with_time_columns(
            Collection<rerun::blueprint::components::TimelineName> _time_columns
        ) && {
            time_columns = std::move(_time_columns);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }

        /// The component columns to include (if mode is set to "Selected").
        DataframeVisibleColumns with_component_columns(
            Collection<rerun::blueprint::components::ComponentColumnSelector> _component_columns
        ) && {
            component_columns = std::move(_component_columns);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }
    };

} // namespace rerun::blueprint::archetypes

namespace rerun {
    /// \private
    template <typename T>
    struct AsComponents;

    /// \private
    template <>
    struct AsComponents<blueprint::archetypes::DataframeVisibleColumns> {
        /// Serialize all set component batches.
        static Result<std::vector<ComponentBatch>> serialize(
            const blueprint::archetypes::DataframeVisibleColumns& archetype
        );
    };
} // namespace rerun
