// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/store/re_types/definitions/rerun/blueprint/archetypes/dataframe_query.fbs".

#pragma once

#include "../../blueprint/components/apply_latest_at.hpp"
#include "../../blueprint/components/component_column_selector.hpp"
#include "../../blueprint/components/range_filter.hpp"
#include "../../blueprint/components/selected_columns.hpp"
#include "../../blueprint/components/timeline_name.hpp"
#include "../../collection.hpp"
#include "../../compiler_utils.hpp"
#include "../../component_batch.hpp"
#include "../../indicator_component.hpp"
#include "../../result.hpp"

#include <cstdint>
#include <optional>
#include <utility>
#include <vector>

namespace rerun::blueprint::archetypes {
    /// **Archetype**: The query for the dataframe view.
    struct DataframeQueryV2 {
        /// The timeline for this query.
        ///
        /// If unset, the time panel's timeline is used and stored.
        std::optional<rerun::blueprint::components::TimelineName> timeline;

        /// If set, a range filter is applied.
        ///
        /// Note: will be unset as soon as `timeline` is changed.
        std::optional<rerun::blueprint::components::RangeFilter> range_filter;

        /// If set, an event filter is aplied.
        ///
        /// Note: only valid if the entity/component exists on `timeline`.
        std::optional<rerun::blueprint::components::ComponentColumnSelector> event_filter;

        /// Should empty cells be filled with latest-at queries?
        std::optional<rerun::blueprint::components::ApplyLatestAt> apply_latest_at;

        /// Selected columns. If unset, all columns are selected.
        std::optional<rerun::blueprint::components::SelectedColumns> selected_columns;

      public:
        static constexpr const char IndicatorComponentName[] =
            "rerun.blueprint.components.DataframeQueryV2Indicator";

        /// Indicator component, used to identify the archetype when converting to a list of components.
        using IndicatorComponent = rerun::components::IndicatorComponent<IndicatorComponentName>;

      public:
        DataframeQueryV2() = default;
        DataframeQueryV2(DataframeQueryV2&& other) = default;

        /// The timeline for this query.
        ///
        /// If unset, the time panel's timeline is used and stored.
        DataframeQueryV2 with_timeline(rerun::blueprint::components::TimelineName _timeline) && {
            timeline = std::move(_timeline);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }

        /// If set, a range filter is applied.
        ///
        /// Note: will be unset as soon as `timeline` is changed.
        DataframeQueryV2 with_range_filter(rerun::blueprint::components::RangeFilter _range_filter
        ) && {
            range_filter = std::move(_range_filter);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }

        /// If set, an event filter is aplied.
        ///
        /// Note: only valid if the entity/component exists on `timeline`.
        DataframeQueryV2 with_event_filter(
            rerun::blueprint::components::ComponentColumnSelector _event_filter
        ) && {
            event_filter = std::move(_event_filter);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }

        /// Should empty cells be filled with latest-at queries?
        DataframeQueryV2 with_apply_latest_at(
            rerun::blueprint::components::ApplyLatestAt _apply_latest_at
        ) && {
            apply_latest_at = std::move(_apply_latest_at);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }

        /// Selected columns. If unset, all columns are selected.
        DataframeQueryV2 with_selected_columns(
            rerun::blueprint::components::SelectedColumns _selected_columns
        ) && {
            selected_columns = std::move(_selected_columns);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }
    };

} // namespace rerun::blueprint::archetypes

namespace rerun {
    /// \private
    template <typename T>
    struct AsComponents;

    /// \private
    template <>
    struct AsComponents<blueprint::archetypes::DataframeQueryV2> {
        /// Serialize all set component batches.
        static Result<std::vector<ComponentBatch>> serialize(
            const blueprint::archetypes::DataframeQueryV2& archetype
        );
    };
} // namespace rerun
