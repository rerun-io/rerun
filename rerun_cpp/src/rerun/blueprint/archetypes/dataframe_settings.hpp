// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/store/re_types/definitions/rerun/blueprint/archetypes/dataframe_settings.fbs".

#pragma once

#include "../../blueprint/components/dataframe_mode.hpp"
#include "../../blueprint/components/sort_key.hpp"
#include "../../blueprint/components/sort_order.hpp"
#include "../../collection.hpp"
#include "../../compiler_utils.hpp"
#include "../../data_cell.hpp"
#include "../../indicator_component.hpp"
#include "../../result.hpp"

#include <cstdint>
#include <optional>
#include <utility>
#include <vector>

namespace rerun::blueprint::archetypes {
    /// **Archetype**: Configuration for the dataframe view
    struct DataframeSettings {
        /// The kind of table to display.
        std::optional<rerun::blueprint::components::DataframeMode> mode;

        /// The primary sort key (time range mode only).
        std::optional<rerun::blueprint::components::SortKey> sort_key;

        /// The sort order.
        std::optional<rerun::blueprint::components::SortOrder> sort_order;

      public:
        static constexpr const char IndicatorComponentName[] =
            "rerun.blueprint.components.DataframeSettingsIndicator";

        /// Indicator component, used to identify the archetype when converting to a list of components.
        using IndicatorComponent = rerun::components::IndicatorComponent<IndicatorComponentName>;

      public:
        DataframeSettings() = default;
        DataframeSettings(DataframeSettings&& other) = default;

        /// The kind of table to display.
        DataframeSettings with_mode(rerun::blueprint::components::DataframeMode _mode) && {
            mode = std::move(_mode);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }

        /// The primary sort key (time range mode only).
        DataframeSettings with_sort_key(rerun::blueprint::components::SortKey _sort_key) && {
            sort_key = std::move(_sort_key);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }

        /// The sort order.
        DataframeSettings with_sort_order(rerun::blueprint::components::SortOrder _sort_order) && {
            sort_order = std::move(_sort_order);
            // See: https://github.com/rerun-io/rerun/issues/4027
            RR_WITH_MAYBE_UNINITIALIZED_DISABLED(return std::move(*this);)
        }
    };

} // namespace rerun::blueprint::archetypes

namespace rerun {
    /// \private
    template <typename T>
    struct AsComponents;

    /// \private
    template <>
    struct AsComponents<blueprint::archetypes::DataframeSettings> {
        /// Serialize all set component batches.
        static Result<std::vector<DataCell>> serialize(
            const blueprint::archetypes::DataframeSettings& archetype
        );
    };
} // namespace rerun
