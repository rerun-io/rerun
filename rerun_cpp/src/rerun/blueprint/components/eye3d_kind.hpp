// DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/store/re_types/definitions/rerun/blueprint/components/eye3d_kind.fbs".

#pragma once

#include "../../result.hpp"

#include <cstdint>
#include <memory>

namespace arrow {
    /// \private
    template <typename T>
    class NumericBuilder;

    class Array;
    class DataType;
    class UInt8Type;
    using UInt8Builder = NumericBuilder<UInt8Type>;
} // namespace arrow

namespace rerun::blueprint::components {
    /// **Component**: The kind of the 3D eye to view a scene in a `views::Spatial3DView`.
    ///
    /// This is used to specify how the controls of the view react to user input (such as mouse gestures).
    enum class Eye3DKind : uint8_t {

        /// First person point of view.
        ///
        /// The camera perspective as if one is seeing it through the eyes of a person as popularized by first-person games.
        /// The center of rotation is the position of the eye (the camera).
        /// Dragging the mouse on the spatial 3D view, will rotation the scene as if one is moving
        /// their head around.
        FirstPerson = 1,

        /// Orbital eye.
        ///
        /// The center of rotation is located to a center location in front of the eye (it is different from the eye
        /// location itself), as if the eye was orbiting around the scene.
        Orbital = 2,
    };
} // namespace rerun::blueprint::components

namespace rerun {
    template <typename T>
    struct Loggable;

    /// \private
    template <>
    struct Loggable<blueprint::components::Eye3DKind> {
        static constexpr std::string_view ComponentType = "rerun.blueprint.components.Eye3DKind";

        /// Returns the arrow data type this type corresponds to.
        static const std::shared_ptr<arrow::DataType>& arrow_datatype();

        /// Serializes an array of `rerun::blueprint:: components::Eye3DKind` into an arrow array.
        static Result<std::shared_ptr<arrow::Array>> to_arrow(
            const blueprint::components::Eye3DKind* instances, size_t num_instances
        );

        /// Fills an arrow array builder with an array of this type.
        static rerun::Error fill_arrow_array_builder(
            arrow::UInt8Builder* builder, const blueprint::components::Eye3DKind* elements,
            size_t num_elements
        );
    };
} // namespace rerun
