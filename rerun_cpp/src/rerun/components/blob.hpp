// DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/re_types/definitions/rerun/components/blob.fbs".

#pragma once

#include "../collection.hpp"
#include "../data_cell.hpp"
#include "../result.hpp"

#include <cstdint>
#include <memory>
#include <utility>

namespace arrow {
    class DataType;
    class ListBuilder;
} // namespace arrow

namespace rerun::components {
    /// **Component**: A binary blob of data.
    struct Blob {
        rerun::Collection<uint8_t> data;

        /// Name of the component, used for serialization.
        static const char NAME[];

      public:
        Blob() = default;

        Blob(rerun::Collection<uint8_t> data_) : data(std::move(data_)) {}

        Blob& operator=(rerun::Collection<uint8_t> data_) {
            data = std::move(data_);
            return *this;
        }

        /// Returns the arrow data type this type corresponds to.
        static const std::shared_ptr<arrow::DataType>& arrow_datatype();

        /// Fills an arrow array builder with an array of this type.
        static rerun::Error fill_arrow_array_builder(
            arrow::ListBuilder* builder, const Blob* elements, size_t num_elements
        );

        /// Creates a Rerun DataCell from an array of Blob components.
        static Result<rerun::DataCell> to_data_cell(const Blob* instances, size_t num_instances);
    };
} // namespace rerun::components
