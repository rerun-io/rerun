// DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/cpp/mod.rs
// Based on "crates/re_types/definitions/rerun/components/view_coordinates.fbs".

#pragma once

#include "../rerun_sdk_export.hpp"
#include "../result.hpp"

#include <array>
#include <cstdint>
#include <memory>

namespace arrow {
    class Array;
    class DataType;
    class FixedSizeListBuilder;
} // namespace arrow

namespace rerun::components {
    /// **Component**: How we interpret the coordinate system of an entity/space.
    ///
    /// For instance: What is "up"? What does the Z axis mean? Is this right-handed or left-handed?
    ///
    /// The three coordinates are always ordered as [x, y, z].
    ///
    /// For example [Right, Down, Forward] means that the X axis points to the right, the Y axis points
    /// down, and the Z axis points forward.
    ///
    /// The following constants are used to represent the different directions:
    ///  * Up = 1
    ///  * Down = 2
    ///  * Right = 3
    ///  * Left = 4
    ///  * Forward = 5
    ///  * Back = 6
    struct ViewCoordinates {
        /// The directions of the [x, y, z] axes.
        std::array<uint8_t, 3> coordinates;

      public:
        // Extensions to generated type defined in 'view_coordinates_ext.cpp'

        enum ViewDir : uint8_t {
            Up = 1,
            Down = 2,
            Right = 3,
            Left = 4,
            Forward = 5,
            Back = 6,
        };

        /// Construct Vec3D from x/y/z values.
        constexpr ViewCoordinates(uint8_t axis0, uint8_t axis1, uint8_t axis2)
            : coordinates{axis0, axis1, axis2} {}

        /// Construct Vec3D from x/y/z values.
        constexpr ViewCoordinates(ViewDir axis0, ViewDir axis1, ViewDir axis2)
            : coordinates{axis0, axis1, axis2} {}

        // <BEGIN_GENERATED:declarations>
        // This section is generated by running `scripts/generate_view_coordinate_defs.py --cpp`
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates ULF;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates UFL;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LUF;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LFU;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates FUL;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates FLU;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates ULB;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates UBL;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LUB;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LBU;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates BUL;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates BLU;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates URF;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates UFR;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RUF;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RFU;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates FUR;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates FRU;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates URB;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates UBR;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RUB;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RBU;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates BUR;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates BRU;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates DLF;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates DFL;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LDF;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LFD;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates FDL;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates FLD;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates DLB;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates DBL;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LDB;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LBD;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates BDL;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates BLD;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates DRF;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates DFR;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RDF;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RFD;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates FDR;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates FRD;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates DRB;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates DBR;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RDB;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RBD;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates BDR;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates BRD;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RIGHT_HAND_X_UP;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RIGHT_HAND_X_DOWN;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RIGHT_HAND_Y_UP;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RIGHT_HAND_Y_DOWN;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RIGHT_HAND_Z_UP;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates RIGHT_HAND_Z_DOWN;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LEFT_HAND_X_UP;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LEFT_HAND_X_DOWN;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LEFT_HAND_Y_UP;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LEFT_HAND_Y_DOWN;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LEFT_HAND_Z_UP;
        RERUN_SDK_EXPORT static const rerun::components::ViewCoordinates LEFT_HAND_Z_DOWN;
        // <END_GENERATED:declarations>

      public:
        ViewCoordinates() = default;

        ViewCoordinates(std::array<uint8_t, 3> coordinates_) : coordinates(coordinates_) {}

        ViewCoordinates& operator=(std::array<uint8_t, 3> coordinates_) {
            coordinates = coordinates_;
            return *this;
        }
    };
} // namespace rerun::components

namespace rerun {
    template <typename T>
    struct Loggable;

    /// \private
    template <>
    struct Loggable<components::ViewCoordinates> {
        static constexpr const char Name[] = "rerun.components.ViewCoordinates";

        /// Returns the arrow data type this type corresponds to.
        static const std::shared_ptr<arrow::DataType>& arrow_datatype();

        /// Serializes an array of `rerun::components::ViewCoordinates` into an arrow array.
        static Result<std::shared_ptr<arrow::Array>> to_arrow(
            const components::ViewCoordinates* instances, size_t num_instances
        );

        /// Fills an arrow array builder with an array of this type.
        static rerun::Error fill_arrow_array_builder(
            arrow::FixedSizeListBuilder* builder, const components::ViewCoordinates* elements,
            size_t num_elements
        );
    };
} // namespace rerun
