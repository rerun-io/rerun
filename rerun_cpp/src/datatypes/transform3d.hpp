// NOTE: This file was autogenerated by re_types_builder; DO NOT EDIT.
// Based on "crates/re_types/definitions/rerun/datatypes/transform3d.fbs"

#pragma once

#include <cstdint>
#include <utility>

#include "../datatypes/translation_and_mat3x3.hpp"
#include "../datatypes/translation_rotation_scale3d.hpp"

namespace rr {
    namespace datatypes {
        namespace detail {
            enum Transform3DTag {
                Tag_TranslationAndMat3x3,
                Tag_TranslationRotationScale,
            };

            union Transform3DData {
                rr::datatypes::TranslationAndMat3x3 translation_and_mat3x3;

                rr::datatypes::TranslationRotationScale3D translation_rotation_scale;

                ~Transform3DData() {}
            };

        } // namespace detail

        /// Representation of a 3D affine transform.
        struct Transform3D {
          private:
            detail::Transform3DTag _tag;
            detail::Transform3DData _data;

          public:
            ~Transform3D() {
                switch (this->_tag) {
                    case detail::Tag_TranslationAndMat3x3: {
                        typedef rr::datatypes::TranslationAndMat3x3 TypeAlias;
                        _data.translation_and_mat3x3.~TypeAlias();
                        break;
                    }
                    case detail::Tag_TranslationRotationScale: {
                        typedef rr::datatypes::TranslationRotationScale3D TypeAlias;
                        _data.translation_rotation_scale.~TypeAlias();
                        break;
                    }
                }
            }
        };
    } // namespace datatypes
} // namespace rr
