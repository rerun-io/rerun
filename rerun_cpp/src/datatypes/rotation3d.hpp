// NOTE: This file was autogenerated by re_types_builder; DO NOT EDIT.
// Based on "crates/re_types/definitions/rerun/datatypes/rotation3d.fbs"

#pragma once

#include <cstdint>
#include <utility>

#include "../datatypes/quaternion.hpp"
#include "../datatypes/rotation_axis_angle.hpp"

namespace rr {
    namespace datatypes {
        namespace detail {
            enum Rotation3DTag {
                Tag_Quaternion,
                Tag_AxisAngle,
            };

            union Rotation3DData {
                /// Rotation defined by a quaternion.
                rr::datatypes::Quaternion quaternion;

                /// Rotation defined with an axis and an angle.
                rr::datatypes::RotationAxisAngle axis_angle;

                ~Rotation3DData() {}
            };

        } // namespace detail

        /// A 3D rotation.
        struct Rotation3D {
          private:
            detail::Rotation3DTag _tag;
            detail::Rotation3DData _data;

          public:
            ~Rotation3D() {
                switch (this->_tag) {
                    case detail::Tag_Quaternion: {
                        typedef rr::datatypes::Quaternion TypeAlias;
                        _data.quaternion.~TypeAlias();
                        break;
                    }
                    case detail::Tag_AxisAngle: {
                        typedef rr::datatypes::RotationAxisAngle TypeAlias;
                        _data.axis_angle.~TypeAlias();
                        break;
                    }
                }
            }
        };
    } // namespace datatypes
} // namespace rr
