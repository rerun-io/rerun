// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RerunAR {

  /// <summary>Holder for reflection information generated from service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zZXJ2aWNlLnByb3RvIqECCg9SZWdpc3RlclJlcXVlc3QSFgoOZm9jYWxf",
            "bGVuZ3RoX3gYASABKAISFgoOZm9jYWxfbGVuZ3RoX3kYAiABKAISGQoRcHJp",
            "bmNpcGFsX3BvaW50X3gYAyABKAISGQoRcHJpbmNpcGFsX3BvaW50X3kYBCAB",
            "KAISGgoSY29sb3JfcmVzb2x1dGlvbl94GAUgASgFEhoKEmNvbG9yX3Jlc29s",
            "dXRpb25feRgGIAEoBRIbChNjb2xvcl9zYW1wbGVfc2l6ZV94GAcgASgFEhsK",
            "E2NvbG9yX3NhbXBsZV9zaXplX3kYCCABKAUSGgoSZGVwdGhfcmVzb2x1dGlv",
            "bl94GAkgASgFEhoKEmRlcHRoX3Jlc29sdXRpb25feRgKIAEoBSIjChBSZWdp",
            "c3RlclJlc3BvbnNlEg8KB21lc3NhZ2UYASABKAkiUAoQRGF0YUZyYW1lUmVx",
            "dWVzdBILCgN1aWQYASABKAkSDQoFY29sb3IYAiABKAwSDQoFZGVwdGgYAyAB",
            "KAwSEQoJdHJhbnNmb3JtGAQgASgMIiQKEURhdGFGcmFtZVJlc3BvbnNlEg8K",
            "B21lc3NhZ2UYASABKAkydgoOUmVydW5BUlNlcnZpY2USLwoIcmVnaXN0ZXIS",
            "EC5SZWdpc3RlclJlcXVlc3QaES5SZWdpc3RlclJlc3BvbnNlEjMKCmRhdGFf",
            "ZnJhbWUSES5EYXRhRnJhbWVSZXF1ZXN0GhIuRGF0YUZyYW1lUmVzcG9uc2VC",
            "CqoCB1JlcnVuQVJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RerunAR.RegisterRequest), global::RerunAR.RegisterRequest.Parser, new[]{ "FocalLengthX", "FocalLengthY", "PrincipalPointX", "PrincipalPointY", "ColorResolutionX", "ColorResolutionY", "ColorSampleSizeX", "ColorSampleSizeY", "DepthResolutionX", "DepthResolutionY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RerunAR.RegisterResponse), global::RerunAR.RegisterResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RerunAR.DataFrameRequest), global::RerunAR.DataFrameRequest.Parser, new[]{ "Uid", "Color", "Depth", "Transform" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RerunAR.DataFrameResponse), global::RerunAR.DataFrameResponse.Parser, new[]{ "Message" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RegisterRequest : pb::IMessage<RegisterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterRequest> _parser = new pb::MessageParser<RegisterRequest>(() => new RegisterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RerunAR.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterRequest(RegisterRequest other) : this() {
      focalLengthX_ = other.focalLengthX_;
      focalLengthY_ = other.focalLengthY_;
      principalPointX_ = other.principalPointX_;
      principalPointY_ = other.principalPointY_;
      colorResolutionX_ = other.colorResolutionX_;
      colorResolutionY_ = other.colorResolutionY_;
      colorSampleSizeX_ = other.colorSampleSizeX_;
      colorSampleSizeY_ = other.colorSampleSizeY_;
      depthResolutionX_ = other.depthResolutionX_;
      depthResolutionY_ = other.depthResolutionY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterRequest Clone() {
      return new RegisterRequest(this);
    }

    /// <summary>Field number for the "focal_length_x" field.</summary>
    public const int FocalLengthXFieldNumber = 1;
    private float focalLengthX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FocalLengthX {
      get { return focalLengthX_; }
      set {
        focalLengthX_ = value;
      }
    }

    /// <summary>Field number for the "focal_length_y" field.</summary>
    public const int FocalLengthYFieldNumber = 2;
    private float focalLengthY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FocalLengthY {
      get { return focalLengthY_; }
      set {
        focalLengthY_ = value;
      }
    }

    /// <summary>Field number for the "principal_point_x" field.</summary>
    public const int PrincipalPointXFieldNumber = 3;
    private float principalPointX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PrincipalPointX {
      get { return principalPointX_; }
      set {
        principalPointX_ = value;
      }
    }

    /// <summary>Field number for the "principal_point_y" field.</summary>
    public const int PrincipalPointYFieldNumber = 4;
    private float principalPointY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PrincipalPointY {
      get { return principalPointY_; }
      set {
        principalPointY_ = value;
      }
    }

    /// <summary>Field number for the "color_resolution_x" field.</summary>
    public const int ColorResolutionXFieldNumber = 5;
    private int colorResolutionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColorResolutionX {
      get { return colorResolutionX_; }
      set {
        colorResolutionX_ = value;
      }
    }

    /// <summary>Field number for the "color_resolution_y" field.</summary>
    public const int ColorResolutionYFieldNumber = 6;
    private int colorResolutionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColorResolutionY {
      get { return colorResolutionY_; }
      set {
        colorResolutionY_ = value;
      }
    }

    /// <summary>Field number for the "color_sample_size_x" field.</summary>
    public const int ColorSampleSizeXFieldNumber = 7;
    private int colorSampleSizeX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColorSampleSizeX {
      get { return colorSampleSizeX_; }
      set {
        colorSampleSizeX_ = value;
      }
    }

    /// <summary>Field number for the "color_sample_size_y" field.</summary>
    public const int ColorSampleSizeYFieldNumber = 8;
    private int colorSampleSizeY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ColorSampleSizeY {
      get { return colorSampleSizeY_; }
      set {
        colorSampleSizeY_ = value;
      }
    }

    /// <summary>Field number for the "depth_resolution_x" field.</summary>
    public const int DepthResolutionXFieldNumber = 9;
    private int depthResolutionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DepthResolutionX {
      get { return depthResolutionX_; }
      set {
        depthResolutionX_ = value;
      }
    }

    /// <summary>Field number for the "depth_resolution_y" field.</summary>
    public const int DepthResolutionYFieldNumber = 10;
    private int depthResolutionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DepthResolutionY {
      get { return depthResolutionY_; }
      set {
        depthResolutionY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FocalLengthX, other.FocalLengthX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FocalLengthY, other.FocalLengthY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrincipalPointX, other.PrincipalPointX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PrincipalPointY, other.PrincipalPointY)) return false;
      if (ColorResolutionX != other.ColorResolutionX) return false;
      if (ColorResolutionY != other.ColorResolutionY) return false;
      if (ColorSampleSizeX != other.ColorSampleSizeX) return false;
      if (ColorSampleSizeY != other.ColorSampleSizeY) return false;
      if (DepthResolutionX != other.DepthResolutionX) return false;
      if (DepthResolutionY != other.DepthResolutionY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FocalLengthX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FocalLengthX);
      if (FocalLengthY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FocalLengthY);
      if (PrincipalPointX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrincipalPointX);
      if (PrincipalPointY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PrincipalPointY);
      if (ColorResolutionX != 0) hash ^= ColorResolutionX.GetHashCode();
      if (ColorResolutionY != 0) hash ^= ColorResolutionY.GetHashCode();
      if (ColorSampleSizeX != 0) hash ^= ColorSampleSizeX.GetHashCode();
      if (ColorSampleSizeY != 0) hash ^= ColorSampleSizeY.GetHashCode();
      if (DepthResolutionX != 0) hash ^= DepthResolutionX.GetHashCode();
      if (DepthResolutionY != 0) hash ^= DepthResolutionY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FocalLengthX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(FocalLengthX);
      }
      if (FocalLengthY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FocalLengthY);
      }
      if (PrincipalPointX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PrincipalPointX);
      }
      if (PrincipalPointY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PrincipalPointY);
      }
      if (ColorResolutionX != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ColorResolutionX);
      }
      if (ColorResolutionY != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ColorResolutionY);
      }
      if (ColorSampleSizeX != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ColorSampleSizeX);
      }
      if (ColorSampleSizeY != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ColorSampleSizeY);
      }
      if (DepthResolutionX != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(DepthResolutionX);
      }
      if (DepthResolutionY != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DepthResolutionY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FocalLengthX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(FocalLengthX);
      }
      if (FocalLengthY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FocalLengthY);
      }
      if (PrincipalPointX != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PrincipalPointX);
      }
      if (PrincipalPointY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PrincipalPointY);
      }
      if (ColorResolutionX != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ColorResolutionX);
      }
      if (ColorResolutionY != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ColorResolutionY);
      }
      if (ColorSampleSizeX != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ColorSampleSizeX);
      }
      if (ColorSampleSizeY != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ColorSampleSizeY);
      }
      if (DepthResolutionX != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(DepthResolutionX);
      }
      if (DepthResolutionY != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DepthResolutionY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FocalLengthX != 0F) {
        size += 1 + 4;
      }
      if (FocalLengthY != 0F) {
        size += 1 + 4;
      }
      if (PrincipalPointX != 0F) {
        size += 1 + 4;
      }
      if (PrincipalPointY != 0F) {
        size += 1 + 4;
      }
      if (ColorResolutionX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColorResolutionX);
      }
      if (ColorResolutionY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColorResolutionY);
      }
      if (ColorSampleSizeX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColorSampleSizeX);
      }
      if (ColorSampleSizeY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColorSampleSizeY);
      }
      if (DepthResolutionX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DepthResolutionX);
      }
      if (DepthResolutionY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DepthResolutionY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterRequest other) {
      if (other == null) {
        return;
      }
      if (other.FocalLengthX != 0F) {
        FocalLengthX = other.FocalLengthX;
      }
      if (other.FocalLengthY != 0F) {
        FocalLengthY = other.FocalLengthY;
      }
      if (other.PrincipalPointX != 0F) {
        PrincipalPointX = other.PrincipalPointX;
      }
      if (other.PrincipalPointY != 0F) {
        PrincipalPointY = other.PrincipalPointY;
      }
      if (other.ColorResolutionX != 0) {
        ColorResolutionX = other.ColorResolutionX;
      }
      if (other.ColorResolutionY != 0) {
        ColorResolutionY = other.ColorResolutionY;
      }
      if (other.ColorSampleSizeX != 0) {
        ColorSampleSizeX = other.ColorSampleSizeX;
      }
      if (other.ColorSampleSizeY != 0) {
        ColorSampleSizeY = other.ColorSampleSizeY;
      }
      if (other.DepthResolutionX != 0) {
        DepthResolutionX = other.DepthResolutionX;
      }
      if (other.DepthResolutionY != 0) {
        DepthResolutionY = other.DepthResolutionY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            FocalLengthX = input.ReadFloat();
            break;
          }
          case 21: {
            FocalLengthY = input.ReadFloat();
            break;
          }
          case 29: {
            PrincipalPointX = input.ReadFloat();
            break;
          }
          case 37: {
            PrincipalPointY = input.ReadFloat();
            break;
          }
          case 40: {
            ColorResolutionX = input.ReadInt32();
            break;
          }
          case 48: {
            ColorResolutionY = input.ReadInt32();
            break;
          }
          case 56: {
            ColorSampleSizeX = input.ReadInt32();
            break;
          }
          case 64: {
            ColorSampleSizeY = input.ReadInt32();
            break;
          }
          case 72: {
            DepthResolutionX = input.ReadInt32();
            break;
          }
          case 80: {
            DepthResolutionY = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            FocalLengthX = input.ReadFloat();
            break;
          }
          case 21: {
            FocalLengthY = input.ReadFloat();
            break;
          }
          case 29: {
            PrincipalPointX = input.ReadFloat();
            break;
          }
          case 37: {
            PrincipalPointY = input.ReadFloat();
            break;
          }
          case 40: {
            ColorResolutionX = input.ReadInt32();
            break;
          }
          case 48: {
            ColorResolutionY = input.ReadInt32();
            break;
          }
          case 56: {
            ColorSampleSizeX = input.ReadInt32();
            break;
          }
          case 64: {
            ColorSampleSizeY = input.ReadInt32();
            break;
          }
          case 72: {
            DepthResolutionX = input.ReadInt32();
            break;
          }
          case 80: {
            DepthResolutionY = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RerunAR.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterResponse(RegisterResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterResponse Clone() {
      return new RegisterResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DataFrameRequest : pb::IMessage<DataFrameRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataFrameRequest> _parser = new pb::MessageParser<DataFrameRequest>(() => new DataFrameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataFrameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RerunAR.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFrameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFrameRequest(DataFrameRequest other) : this() {
      uid_ = other.uid_;
      color_ = other.color_;
      depth_ = other.depth_;
      transform_ = other.transform_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFrameRequest Clone() {
      return new DataFrameRequest(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 2;
    private pb::ByteString color_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 3;
    private pb::ByteString depth_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Depth {
      get { return depth_; }
      set {
        depth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 4;
    private pb::ByteString transform_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Transform {
      get { return transform_; }
      set {
        transform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataFrameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataFrameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Color != other.Color) return false;
      if (Depth != other.Depth) return false;
      if (Transform != other.Transform) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (Depth.Length != 0) hash ^= Depth.GetHashCode();
      if (Transform.Length != 0) hash ^= Transform.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Color);
      }
      if (Depth.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Depth);
      }
      if (Transform.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Transform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Color);
      }
      if (Depth.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Depth);
      }
      if (Transform.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Transform);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Color);
      }
      if (Depth.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Depth);
      }
      if (Transform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Transform);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataFrameRequest other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      if (other.Depth.Length != 0) {
        Depth = other.Depth;
      }
      if (other.Transform.Length != 0) {
        Transform = other.Transform;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Color = input.ReadBytes();
            break;
          }
          case 26: {
            Depth = input.ReadBytes();
            break;
          }
          case 34: {
            Transform = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Color = input.ReadBytes();
            break;
          }
          case 26: {
            Depth = input.ReadBytes();
            break;
          }
          case 34: {
            Transform = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DataFrameResponse : pb::IMessage<DataFrameResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataFrameResponse> _parser = new pb::MessageParser<DataFrameResponse>(() => new DataFrameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataFrameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RerunAR.ServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFrameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFrameResponse(DataFrameResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataFrameResponse Clone() {
      return new DataFrameResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataFrameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataFrameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataFrameResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
