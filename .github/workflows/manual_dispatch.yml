name: Manually Dispatch Workflows

on:
  workflow_dispatch:
    # NOTE: boolean inputs are still actually strings
    # See: https://github.com/actions/runner/issues/1483
    inputs:
      # Sorted based on job workflow logic rather than alphabetical
      CHECKS:
        description: "Run reuseable_checks"
        type: boolean
        required: false
        default: true

      DEPLOY_DOCS:
        description: "Run reusable_deploy_docs"
        type: boolean
        required: false
        default: false

      BENCHES:
        description: "Run reusable_bench.yml"
        type: boolean
        required: false
        default: false

      MIN_TEST_WHEEL:
        description: "Run reuseable_build_and_test_wheels (Minimal Wheel Linux Only)"
        type: boolean
        required: false

      WHEEL_PLATFORMS:
        description: "Run reusable_build_and_test_wheels (Full build: linux,windows,macos-arm,macos-intel)"
        type: string
        required: false
        default: "linux"

      BUILD_WEB:
        description: "Run reusable_build_web/reusable_build_web_demo (Full build: app,demo)"
        type: string
        required: false
        default: "app,demo"

      RELEASE_VERSION:
        description: "Release Version Number (Must match Cargo.toml)"
        type: string
        required: false
        default: "prerelease"

      UPLOAD_GCLOUD:
        description: "Upload wheels and wasm to gcloud"
        type: boolean
        required: false
        default: false

      UPDATE_PR_SUMMARY:
        description: "Update the PR Summary"
        type: boolean
        required: false
        default: false

      SYNC_RELEASE_ASSETS:
        description: "Sync release assets and build.rerun.io"
        type: boolean
        required: false
        default: false

jobs:
  checks:
    name: Run All Checks
    if: ${{ github.event.inputs.CHECKS == 'true' }}
    uses: ./.github/workflows/reusable_checks.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
    secrets: inherit

  deploy-docs:
    # Never deploy docs if checks haven't passed
    needs: [checks]
    name: Deploy Docs
    if: ${{ github.event.inputs.DEPLOY_DOCS == 'true' }}
    uses: ./.github/workflows/reusable_deploy_docs.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
      PY_DOCS_VERSION_NAME: "test"
      UPDATE_LATEST: false
    secrets: inherit

  benches:
    name: Benchmarks
    if: ${{ github.event.inputs.BENCHES == 'true' }}
    uses: ./.github/workflows/reusable_bench.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
    secrets: inherit

  min-test-wheel:
    name: "Minimum Test Wheel"
    # The upload-web job uses the min-test-wheel to get the RRD
    if: ${{ (github.event.inputs.MIN_TEST_WHEEL == 'true') || ((github.event.inputs.UPLOAD_GCLOUD == 'true') && ( github.event.inputs.BUILD_WEB == 'true') ) }}
    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
      PLATFORM: linux
      MATURIN_FEATURE_FLAGS: "--no-default-features --features extension-module"
      WHEEL_ARTIFACT_NAME: ""
      RRD_ARTIFACT_NAME: linux-rrd-fast
    secrets: inherit

  build-linux:
    name: "Linux: Build/Test Wheels"
    # The upload-wheels jobs all use the linux build to get the RRD
    # TODO(jleibs): Debug why multi-line if statements don't work here
    if: ${{ contains(github.event.inputs.WHEEL_PLATFORMS, 'linux') || ((github.event.inputs.UPLOAD_GCLOUD == 'true') && ( github.event.inputs.WHEEL_PLATFORMS != '') ) }}

    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-linux-${{ github.run_id}}
      PLATFORM: linux
      WHEEL_ARTIFACT_NAME: linux-wheel
      RRD_ARTIFACT_NAME: linux-rrd
      RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
    secrets: inherit

  build-windows:
    name: "Windows: Build/Test Wheels"
    if: ${{ contains(github.event.inputs.WHEEL_PLATFORMS, 'windows') }}
    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-windows-${{ github.run_id}}
      PLATFORM: windows
      WHEEL_ARTIFACT_NAME: windows-wheel
      RRD_ARTIFACT_NAME: ""
      RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
    secrets: inherit

  build-macos-arm:
    name: "Macos-Arm: Build/Test Wheels"
    if: ${{ contains(github.event.inputs.WHEEL_PLATFORMS, 'macos-arm') }}
    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-macos-arm-${{ github.run_id}}
      PLATFORM: macos-arm
      WHEEL_ARTIFACT_NAME: macos-arm-wheel
      RRD_ARTIFACT_NAME: ""
      RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
    secrets: inherit

  build-macos-intel:
    name: "Macos-Intel: Build/Test Wheels"
    if: ${{ contains(github.event.inputs.WHEEL_PLATFORMS, 'macos-intel') }}
    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-macos-intel-${{ github.run_id}}
      PLATFORM: macos-intel
      WHEEL_ARTIFACT_NAME: "macos-intel-wheel"
      RRD_ARTIFACT_NAME: ""
      RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}

    secrets: inherit

  upload-wheels-linux:
    name: "Linux: Upload Wheels"
    needs: [build-linux]
    if: ${{ contains(github.event.inputs.WHEEL_PLATFORMS, 'linux') && (github.event.inputs.UPLOAD_GCLOUD == 'true') }}
    uses: ./.github/workflows/reusable_upload_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-linux-${{ github.run_id}}
      WHEEL_ARTIFACT_NAME: linux-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit

  upload-wheels-windows:
    name: "Windows: Upload Wheels"
    needs: [build-linux, build-windows]
    if: ${{ contains(github.event.inputs.WHEEL_PLATFORMS, 'windows') && (github.event.inputs.UPLOAD_GCLOUD == 'true') }}
    uses: ./.github/workflows/reusable_upload_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-windows-${{ github.run_id}}
      WHEEL_ARTIFACT_NAME: windows-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit

  upload-wheels-macos-arm:
    name: "Macos-Arm: Upload Wheels"
    needs: [build-linux, build-macos-arm]
    if: ${{ contains(github.event.inputs.WHEEL_PLATFORMS, 'macos-arm') && (github.event.inputs.UPLOAD_GCLOUD == 'true') }}
    uses: ./.github/workflows/reusable_upload_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-macos-arm-${{ github.run_id}}
      WHEEL_ARTIFACT_NAME: macos-arm-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit

  upload-wheels-macos-intel:
    name: "Macos-Intel: Upload Wheels"
    needs: [build-linux, build-macos-intel]
    if: ${{ contains(github.event.inputs.WHEEL_PLATFORMS, 'macos-intel') && (github.event.inputs.UPLOAD_GCLOUD == 'true') }}
    uses: ./.github/workflows/reusable_upload_wheels.yml
    with:
      CONCURRENCY: manual-dispatch-macos-intel-${{ github.run_id}}
      WHEEL_ARTIFACT_NAME: macos-intel-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit

  build-web:
    name: "Build Web"
    if: ${{ contains(github.event.inputs.BUILD_WEB, 'app') }}
    uses: ./.github/workflows/reusable_build_web.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
      RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
    secrets: inherit

  upload-web:
    name: "Upload Web"
    needs: [min-test-wheel, build-web]
    if: ${{ contains(github.event.inputs.BUILD_WEB, 'app') && (github.event.inputs.UPLOAD_GCLOUD == 'true') }}
    uses: ./.github/workflows/reusable_upload_web.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
      MARK_TAGGED_VERSION: false
      RRD_ARTIFACT_NAME: linux-rrd-fast
    secrets: inherit

  build-web-demo:
    name: "Build Web Demo"
    needs: [min-test-wheel, build-web]
    if: ${{ contains(github.event.inputs.BUILD_WEB, 'demo') }}
    uses: ./.github/workflows/reusable_build_web_demo.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
      WHEEL_ARTIFACT_NAME: linux-wheel
    secrets: inherit

  upload-web-demo:
    name: "Upload Web Demo"
    needs: [build-web-demo]
    if: ${{ contains(github.event.inputs.BUILD_WEB, 'demo') && (github.event.inputs.UPLOAD_GCLOUD == 'true') }}
    uses: ./.github/workflows/reusable_upload_web_demo.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
      MARK_TAGGED_VERSION: false
    secrets: inherit

  check-for-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.UPDATE_PR_SUMMARY == 'true' }}
    outputs:
      PR_NUMBER: ${{ steps.get_pr.outputs.PR_NUMBER }}
    steps:
      - name: Check if commit belongs to a PR
        id: get_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=$(curl --silent --header "Authorization: Bearer ${GITHUB_TOKEN}" \
            --url "https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${GITHUB_SHA}/pulls" \
            | jq '.[] | .number')

          if [ -z "$pr_number" ]; then
            echo "No PR associated with this commit"
            exit 1
          else
            echo "Commit is associated with PR: $pr_number"
            echo "PR_NUMBER=$pr_number" >> "$GITHUB_OUTPUT"
          fi

  update-pr-summary:
    name: "Update PR Summary"
    # TODO(jleibs): There's no good way to have an optional needs.
    # If we leave this here the job fails if we don't build all the wheels + web.
    # Since this is just for testing, leave this out. We can manually run it to update
    # a PR if we want to see changes.
    #needs: [check-for-pr, upload-web, upload-wheels-linux, upload-wheels-windows, upload-wheels-macos-arm, upload-wheels-macos-intel]
    needs: [check-for-pr]
    if: ${{ github.event.inputs.UPDATE_PR_SUMMARY == 'true' }}
    uses: ./.github/workflows/reusable_pr_summary.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
      PR_NUMBER: ${{ needs.check-for-pr.outputs.PR_NUMBER }}
    secrets: inherit

  sync-release-assets:
    name: Sync release assets and build.rerun.io
    if: ${{ github.event.inputs.SYNC_RELEASE_ASSETS == 'true' }}
    uses: ./.github/workflows/reusable_sync_release_assets.yml
    with:
      CONCURRENCY: manual-dispatch-${{ github.run_id}}
      RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
    secrets: inherit
