name: Reusable Build Examples

on:
  workflow_call:
    inputs:
      CONCURRENCY:
        required: true
        type: string
      WHEEL_ARTIFACT_NAME:
        required: true
        type: string
      CHANNEL: # `nightly`/`main`/`pr`
        required: true
        type: string

concurrency:
  group: ${{ inputs.CONCURRENCY }}-build-examples
  cancel-in-progress: true

env:
  # web_sys_unstable_apis is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: --cfg=web_sys_unstable_apis --deny warnings

  RUSTDOCFLAGS: --deny warnings

  # Disable the GHA backend (Github's 10GB storage) since we use our own GCS backend.
  # See: https://github.com/marketplace/actions/sccache-action
  SCCACHE_GHA_ENABLED: "false"

  # Wrap every `rustc` invocation in `sccache`.
  RUSTC_WRAPPER: "sccache"

  # Not only `sccache` cannot cache incremental builds, it's counter-productive to generate all
  # these incremental artifacts when running on CI.
  CARGO_INCREMENTAL: "0"

defaults:
  run:
    shell: bash

permissions:
  contents: "read"
  id-token: "write"

jobs:
  rs-build-examples:
    name: Build Examples
    runs-on: ubuntu-latest-16-cores
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.ref) || '' }}

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          cache_key: "build-web"
          save_cache: false
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.34.0
          environments: wheel-test

      - name: Download Wheel
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.WHEEL_ARTIFACT_NAME }}
          path: wheel

      - name: Install built wheel
        run: |
          pixi run python scripts/ci/pixi_install_wheel.py --feature python-pypi --package rerun-sdk --dir wheel

      - name: Print wheel version
        run: |
          pixi list -e wheel-test | grep rerun_sdk
          pixi run -e wheel-test python -m rerun --version
          pixi run -e wheel-test which rerun

      - name: Get sha
        id: get-sha
        run: |
          full_commit="${{ (github.event_name == 'pull_request' && github.event.pull_request.head.sha) || github.sha }}"
          echo "sha=$(echo $full_commit | cut -c1-7)" >> "$GITHUB_OUTPUT"

      - name: Build examples
        run: |
          pixi run -e wheel-test build-examples rrd \
            --channel ${{ inputs.CHANNEL }} \
            example_data

      - name: Build & run snippets
        run: |
          pixi run -e wheel-test build-examples snippets \
            example_data/snippets

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: example_data
          path: example_data
