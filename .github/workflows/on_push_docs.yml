name: "Push Docs"

on:
  push:
    branches: [docs-latest]

concurrency:
  group: on-push-docs
  cancel-in-progress: true

permissions:
  contents: "read"
  id-token: "write"

defaults:
  run:
    shell: bash

jobs:
  # Get latest release version from crates.io
  # This excludes any prerelease builds, e.g. `0.15.0-alpha.1` or `rc` or similar.
  # We get it from crates.io because it's the strongest indicator of the latest
  # fully released version we have available, and there is no better way to retrieve
  # that in the context of this branch, because we don't want to rely on the contents
  # of a local `Cargo.toml` or the git branch name.
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.crate_version }}
    steps:
      - uses: actions/checkout@v4

      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.25.0

      - name: Get version
        id: versioning
        run: |
          crate_version=$(pixi run python scripts/ci/crates.py get-version --from=cratesio --skip-prerelease)
          echo "crate_version=$crate_version" >> "$GITHUB_OUTPUT"

  build-search-index:
    runs-on: ubuntu-latest-16-cores
    needs: [get-version]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          cache_key: "build-linux"
          save_cache: false
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          # pinned to a specific version that happens to work with current `rustdoc-types`
          toolchains: "nightly-2024-08-10"

      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.25.0
          environments: py-docs

      - name: Install rerun-sdk
        run: |

      - name: Build search index
        env:
          # Here we disable:
          # - All warnings - nightly toolchain has a different set of warnings enabled by default.
          #   We already test with `-D warnings` elsewhere, and the output is really noisy with the nightly warnings.
          # - The web viewer server - we don't want to waste time building the web viewer,
          #   because it is not actually going to run
          RUSTFLAGS: "-Awarnings --cfg disable_web_viewer_server"
        run: |
          pixi run search-index build \
            landing \
            --url "https://edge.meilisearch.com" \
            --master-key "${{ secrets.MEILISEARCH_TOKEN }}" \
            --release-version "${{ needs.get-version.outputs.version }}"

  redeploy-rerun-io:
    runs-on: ubuntu-latest
    needs: [get-version]
    steps:
      - uses: actions/checkout@v4

      - name: Re-deploy rerun.io
        uses: ./.github/actions/vercel
        with:
          command: "deploy"
          vercel_token: "${{ secrets.VERCEL_TOKEN }}"
          vercel_team_name: "${{ vars.VERCEL_TEAM_NAME }}"
          vercel_project_name: "${{ vars.VERCEL_PROJECT_NAME }}"
          release_commit: "docs-latest"
          release_version: "${{ needs.get-version.outputs.version }}"
          target: "production"
