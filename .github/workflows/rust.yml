name: CI (Rust)

on:
  push:
    branches:
      - "main"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # web_sys_unstable_apis is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: --cfg=web_sys_unstable_apis -D warnings

  # See https://github.com/ericseppanen/cargo-cranky/issues/8
  RUSTDOCFLAGS: -D warnings -D rustdoc::missing_crate_level_docs

jobs:
  rs-lints:
    name: Rust lints (fmt, check, cranky, tests, doc)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.65.0
          override: true
          components: rustfmt, clippy

      - run: |
          sudo apt-get update
          sudo apt-get install libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev # eframe reqs

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Install cargo-cranky
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-cranky

      - name: Cranky
        uses: actions-rs/cargo@v1
        with:
          command: cranky
          args: --all-targets --all-features --  -D warnings

      - name: Check all features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --locked

      - name: Check no default features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features --features __ci --lib

      - name: Test doc-tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --all-features

      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --all-features

      - name: cargo doc --document-private-items
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --document-private-items --no-deps --all-features

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --lib


  rs-check-wasm:
    name: Check Rust web build (wasm32 + wasm-bindgen)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.65.0
          target: wasm32-unknown-unknown
          override: true

      - run: sudo apt-get update && sudo apt-get install libgtk-3-dev

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Check re_viewer wasm32
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --lib --target wasm32-unknown-unknown -p re_viewer

      - name: Check re_renderer examples wasm32
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target wasm32-unknown-unknown -p re_renderer --examples

      - name: wasm-bindgen
        uses: jetli/wasm-bindgen-action@v0.1.0
        with:
          version: "0.2.83"

      - run: ./scripts/wasm_bindgen_check.sh --skip-setup


  rs-cargo-deny:
    name: Check Rust dependencies (cargo-deny)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          rust-version: "1.65.0"
          arguments: --log-level error


  rs-maturin-linux:
    name: Build Rust SDK Maturin Wheel (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.65.0
          override: true
          components: rustfmt

      - run: |
          sudo apt-get update
          sudo apt-get install libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev # eframe reqs

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Setup python for building wheel
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: "rerun_py/requirements-build.txt"

      - run: pip install -r rerun_py/requirements-build.txt

      - name: Build wheels
        run: maturin build -m rerun_py/Cargo.toml -o dist


  rs-maturin-windows:
    name: Build Rust SDK Maturin Wheel (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Setup python for building wheel
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          # Caching pip packages is broken for some reason
          # cache: "pip"

      - uses: messense/maturin-action@v1
        with:
          maturin-version: "0.13.5"
          command: build
          args: -m rerun_py/Cargo.toml -o dist


  rs-maturin-macos:
    name: Build Rust SDK Maturin Wheel (macOS)
    runs-on: macos-latest
    if: "startsWith(github.ref, 'refs/tags/')" # slow; uses up a lot of CI minutes
    steps:
      - uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Setup python for building wheel
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"

      - uses: messense/maturin-action@v1
        with:
          maturin-version: "0.13.5"
          command: build
          args: -m rerun_py/Cargo.toml  -o dist --universal2
