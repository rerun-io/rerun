on:
  push:
    branches:
      - "main"
  pull_request:

name: CI

env:
  # web_sys_unstable_apis is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: --cfg=web_sys_unstable_apis -D warnings

  # See https://github.com/ericseppanen/cargo-cranky/issues/8
  RUSTDOCFLAGS: -D warnings -D rustdoc::missing_crate_level_docs

jobs:
  check_wasm:
    name: Check wasm32 + wasm-bindgen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.63.0
          target: wasm32-unknown-unknown
          override: true
      - run: sudo apt-get update && sudo apt-get install libgtk-3-dev
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
      - name: Check wasm32
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: -p re_viewer --all-features --lib --target wasm32-unknown-unknown
      - name: wasm-bindgen
        uses: jetli/wasm-bindgen-action@v0.1.0
        with:
          version: "0.2.82"
      - run: ./scripts/wasm_bindgen_check.sh --skip-setup

  fmt-crank-check-test:
    name: Format + check + test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.63.0
          override: true
          components: rustfmt
      - run: sudo apt-get install libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev # eframe reqs
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Install cargo-cranky
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-cranky
      - name: Cranky
        uses: actions-rs/cargo@v1
        with:
          command: cranky
          args: --all-targets --all-features --  -D warnings
      - name: Check all features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features --locked
      - name: Check no default features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features --features __ci --lib
      - name: Test doc-tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --all-features
      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --all-features
      - name: cargo doc --document-private-items
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --document-private-items --no-deps --all-features
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --lib

  maturin-linux:
    name: Maturing Wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.63.0
          override: true
          components: rustfmt
      - run: sudo apt-get install libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev # eframe reqs
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
      - name: Setup python for building wheel
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: "crates/re_sdk_python/requirements-build.txt"
      - run: pip install -r crates/re_sdk_python/requirements-build.txt
      - name: Build wheels
        run: maturin build -m crates/re_sdk_python/Cargo.toml -o dist

  cargo-deny:
    name: cargo deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          rust-version: "1.63.0"

  lint_py:
    name: lint.py
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/lint.py

  maturin-windows:
    name: Maturin Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
      - name: Setup python for building wheel
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          # Caching pip packages is broken for some reason
          # cache: "pip"
      - uses: messense/maturin-action@v1
        with:
          maturin-version: "0.13.1"
          command: build
          args: -m crates/re_sdk_python/Cargo.toml -o dist

  maturin-macos:
    name: Maturin MacOS
    runs-on: macos-latest
    if: "startsWith(github.ref, 'refs/tags/')" # slow; uses up a lot of CI minutes
    steps:
      - uses: actions/checkout@v3
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
      - name: Setup python for building wheel
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
      - uses: messense/maturin-action@v1
        with:
          maturin-version: "0.13.1"
          command: build
          args: -m crates/re_sdk_python/Cargo.toml  -o dist --universal2
