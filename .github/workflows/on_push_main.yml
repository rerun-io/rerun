name: Push To Main

on:
  push:
    branches:
      - "main"

jobs:
  checks:
    name: Checks
    uses: ./.github/workflows/reusable_checks.yml
    secrets: inherit
    concurrency:
      group: push-checks-${{ github.ref_name }}
      cancel-in-progress: true

  benches:
    name: Benchmarks
    uses: ./.github/workflows/reusable_bench.yml
    with:
      SAVE_BENCHES: true
      BENCH_NAME: main
      COMPARE_TO: main
    secrets: inherit
    concurrency:
      group: push-benches-${{ github.ref_name }}
      cancel-in-progress: true

  deploy-docs:
    needs: [checks, benches]
    name: Deploy Docs
    uses: ./.github/workflows/reusable_deploy_docs.yml
    with:
      PY_DOCS_VERSION_NAME: "HEAD"
      UPDATE_LATEST: false
    secrets: inherit
    concurrency:
      group: push-deploy-docs-${{ github.ref_name }}
      cancel-in-progress: true

  build-web:
    name: 'Build Web'
    uses: ./.github/workflows/reusable_build_web.yml
    secrets: inherit
    concurrency:
      group: push-build-web-${{ github.ref_name }}
      cancel-in-progress: true

  upload-web:
    name: 'Upload Web'
    needs: [build-linux, build-web]
    uses: ./.github/workflows/reusable_upload_web.yml
    with:
      RRD_ARTIFACT_NAME: linux-rrd
      MARK_PRERELEASE_FOR_MAINLINE: true
    secrets: inherit
    concurrency:
      group: push-upload-web-${{ github.ref_name }}
      cancel-in-progress: true

  build-linux:
    needs: [checks]
    name: 'Linux: Build/Test Wheels'
    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      PLATFORM: linux
      WHEEL_ARTIFACT_NAME: linux-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit
    concurrency:
      group: push-build-linux-${{ github.ref_name }}
      cancel-in-progress: true

  build-windows:
    needs: [checks]
    name: 'Windows: Build/Test Wheels'
    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      PLATFORM: windows
      WHEEL_ARTIFACT_NAME: windows-wheel
      RRD_ARTIFACT_NAME: ''
    secrets: inherit
    concurrency:
      group: push-build-windows-${{ github.ref_name }}
      cancel-in-progress: true

  build-macos-arm:
    needs: [checks]
    name: 'Macos-Arm: Build/Test Wheels'
    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      PLATFORM: macos-arm
      WHEEL_ARTIFACT_NAME: macos-arm-wheel
      RRD_ARTIFACT_NAME: ''
    secrets: inherit
    concurrency:
      group: push-build-macos-arm-${{ github.ref_name }}
      cancel-in-progress: true

  build-macos-intel:
    needs: [checks]
    name: 'Macos-Intel: Build/Test Wheels'
    uses: ./.github/workflows/reusable_build_and_test_wheels.yml
    with:
      PLATFORM: macos-intel
      WHEEL_ARTIFACT_NAME: 'macos-intel-wheel'
      RRD_ARTIFACT_NAME: ''
    secrets: inherit
    concurrency:
      group: push-build-macos-intel-${{ github.ref_name }}
      cancel-in-progress: true

  upload-wheels-linux:
    name: 'Linux: Upload Wheels'
    needs: [build-linux]
    uses: ./.github/workflows/reusable_upload_wheels.yml
    with:
      WHEEL_ARTIFACT_NAME: linux-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit
    concurrency:
      group: push-upload-wheels-linux-${{ github.ref_name }}
      cancel-in-progress: true

  upload-wheels-windows:
    name: 'Windows: Upload Wheels'
    needs: [build-linux, build-windows]
    uses: ./.github/workflows/reusable_upload_wheels.yml
    with:
      WHEEL_ARTIFACT_NAME: windows-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit
    concurrency:
      group: push-upload-wheels-windows-${{ github.ref_name }}
      cancel-in-progress: true

  upload-wheels-macos-arm:
    name: 'Macos-Arm: Upload Wheels'
    needs: [build-linux, build-macos-arm]
    uses: ./.github/workflows/reusable_upload_wheels.yml
    with:
      WHEEL_ARTIFACT_NAME: macos-arm-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit
    concurrency:
      group: push-upload-wheels-macos-arm-${{ github.ref_name }}
      cancel-in-progress: true

  upload-wheels-macos-intel:
    name: 'Macos-Intel: Upload Wheels'
    needs: [build-linux, build-macos-intel]
    uses: ./.github/workflows/reusable_upload_wheels.yml
    with:
      WHEEL_ARTIFACT_NAME: macos-intel-wheel
      RRD_ARTIFACT_NAME: linux-rrd
    secrets: inherit
    concurrency:
      group: push-upload-wheels-macos-intel-${{ github.ref_name }}
      cancel-in-progress: true

  generate-pip-index:
    name: 'Generate Pip Index'
    needs: [upload-wheels-linux, upload-wheels-windows, upload-wheels-macos-arm, upload-wheels-macos-intel]
    uses: ./.github/workflows/reusable_pip_index.yml
    secrets: inherit
    concurrency:
      group: push-generate-pip-index-${{ github.ref_name }}
      cancel-in-progress: true

  pre-release:
    name: Pre Release
    concurrency:
      group: push-prerelease-${{ github.ref_name }}
      cancel-in-progress: true
    needs: [upload-web, generate-pip-index]
    runs-on: "ubuntu-latest"
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${{github.sha}} | cut -c1-7`" >> $GITHUB_ENV

      # First delete the old prerelease. If we don't do this, we don't get things like
      # proper source-archives and changelog info.
      # https://github.com/dev-drprasad/delete-tag-and-release
      - uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          tag_name: prerelease
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create the actual prerelease
      # https://github.com/ncipollo/release-action
      - name: GitHub Release
        uses: ncipollo/release-action@v1.12.0
        with:
          body: |
            This is a prerelease. It is not intended for production use.
            Please report any issues you find.

            ## Example Hosted App
            https://app.rerun.io/commit/${{ env.SHORT_SHA }}

            ## Wheels can be installed with:
            ```
            pip install --pre -f https://build.rerun.io/commit/${{ env.SHORT_SHA}}/wheels --upgrade rerun-sdk
            ```
          prerelease: true
          name: "Development Build"
          tag: "prerelease"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          allowUpdates: true
          removeArtifacts: true
          replacesArtifacts: true
