name: "Reusable Deploy Docs"

on:
  workflow_call:
    inputs:
      CONCURRENCY:
        required: true
        type: string
      PY_DOCS_VERSION_NAME:
        required: true
        type: string
      CPP_DOCS_VERSION_NAME:
        required: true
        type: string
      RS_DOCS_VERSION_NAME:
        required: true
        type: string
      RELEASE_VERSION:
        required: false
        type: string
      RELEASE_COMMIT:
        required: false
        type: string
      UPDATE_LATEST:
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ inputs.CONCURRENCY }}-deploy-docs
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: "write"
  id-token: "write"

env:
  PYTHON_VERSION: "3.9"

  # web_sys_unstable_apis is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: --cfg=web_sys_unstable_apis --deny warnings

  RUSTDOCFLAGS: --deny warnings

  # Disable the GHA backend (Github's 10GB storage) since we use our own GCS backend.
  # See: https://github.com/marketplace/actions/sccache-action
  SCCACHE_GHA_ENABLED: "false"

  # Wrap every `rustc` invocation in `sccache`.
  RUSTC_WRAPPER: "sccache"

  # Not only `sccache` cannot cache incremental builds, it's counter-productive to generate all
  # these incremental artifacts when running on CI.
  CARGO_INCREMENTAL: "0"

jobs:
  # ---------------------------------------------------------------------------

  py-deploy-docs:
    name: Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.RELEASE_COMMIT || (github.event_name == 'pull_request' && github.event.pull_request.head.ref || '') }}

      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.41.4
          environments: py-docs

      - id: "auth"
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      - name: Build docs
        run: pixi run -e py-docs mkdocs build -f rerun_py/mkdocs.yml -d site

      - name: "Upload Python Docs (version)"
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: "rerun_py/site"
          destination: "rerun-docs/docs/python/${{ inputs.PY_DOCS_VERSION_NAME }}"
          process_gcloudignore: false
          parent: false

      - name: "Upload Python Docs (stable)"
        if: ${{ inputs.UPDATE_LATEST }}
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: "rerun_py/site"
          destination: "rerun-docs/docs/python/stable"
          process_gcloudignore: false
          parent: false

  # ---------------------------------------------------------------------------

  cpp-deploy-docs:
    name: Cpp
    runs-on: ubuntu-latest
    steps:
      - name: Show context
        run: |
          echo "GITHUB_CONTEXT": $GITHUB_CONTEXT
          echo "JOB_CONTEXT": $JOB_CONTEXT
          echo "INPUTS_CONTEXT": $INPUTS_CONTEXT
          echo "ENV_CONTEXT": $ENV_CONTEXT
        env:
          ENV_CONTEXT: ${{ toJson(env) }}
          GITHUB_CONTEXT: ${{ toJson(github) }}
          JOB_CONTEXT: ${{ toJson(job) }}
          INPUTS_CONTEXT: ${{ toJson(inputs) }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.RELEASE_COMMIT || (github.event_name == 'pull_request' && github.event.pull_request.head.ref || '') }}

      - id: "auth"
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.41.4

      - name: Doxygen C++ docs
        run: pixi run -e cpp cpp-docs

      - name: "Upload C++ Docs (version)"
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: "rerun_cpp/docs/html"
          destination: "rerun-docs/docs/cpp/${{ inputs.RELEASE_VERSION }}"
          process_gcloudignore: false

      - name: "Upload C++ Docs (named)"
        if: ${{ inputs.UPDATE_LATEST }}
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: "rerun_cpp/docs/html"
          destination: "rerun-docs/docs/cpp/${{ inputs.CPP_DOCS_VERSION_NAME }}"
          process_gcloudignore: false
