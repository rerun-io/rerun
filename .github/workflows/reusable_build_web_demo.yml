name: Reusable Build Web Demo

on:
  workflow_call:
    inputs:
      CONCURRENCY:
        required: true
        type: string
      WHEEL_ARTIFACT_NAME:
        required: true
        type: string
      # Each example in the built app contains a link to its source code.
      # This determines the target commit to link to, and by default
      # it is the current commit (github.sha)
      SOURCE_LINK_COMMIT_OVERRIDE:
        required: false
        type: string

concurrency:
  group: ${{ inputs.CONCURRENCY }}-build-web-demo
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.8"
  # web_sys_unstable_apis is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: --cfg=web_sys_unstable_apis --deny warnings

  # See https://github.com/ericseppanen/cargo-cranky/issues/8
  RUSTDOCFLAGS: --deny warnings --deny rustdoc::missing_crate_level_docs

jobs:
  rs-build-web-demo:
    name: Build Web Demo
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest-16-cores

    container:
      image: rerunio/ci_docker:0.7

    steps:
      - uses: actions/checkout@v3

      - name: Download Web Viewer
        uses: actions/download-artifact@v3
        with:
          name: web_viewer
          path: web_viewer

      - name: Download Wheel
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.WHEEL_ARTIFACT_NAME }}
          path: wheel

      - name: Install dependencies for examples/python
        run: |
          pip install -r scripts/requirements-web-demo.txt
          pip install Jinja2

      - name: Install built wheel
        shell: bash
        run: |
          pip uninstall rerun-sdk -y
          pip install deprecated numpy>=1.23 pyarrow==10.0.1 pytest==7.1.2
          pip install rerun-sdk --no-index --find-links wheel

      - name: Verify built wheel version
        shell: bash
        run: |
          python3 -m rerun --version
          which rerun
          rerun --version

      - name: Resolve source link commit hash
        run: |
          if [ -z "${{ inputs.SOURCE_LINK_COMMIT_OVERRIDE }}" ]; then
            USED_SHA=${{ github.sha }}
          else
            USED_SHA=${{ inputs.SOURCE_LINK_COMMIT_OVERRIDE }}
          fi
          echo "SHORT_SHA=$(echo $USED_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build web demo
        env:
          COMMIT_HASH: ${{ env.SHORT_SHA }}
        run: |
          python3 scripts/build_demo_app.py --skip-build

      - name: Upload web demo assets
        uses: actions/upload-artifact@v3
        with:
          name: web_demo
          path: web_demo

