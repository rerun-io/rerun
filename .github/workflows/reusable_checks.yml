name: "General checks: Lints, Tests, Docs"

on:
  workflow_call:
    inputs:
      CONCURRENCY:
        required: true
        type: string

concurrency:
  group: ${{ inputs.CONCURRENCY }}-checks
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.8"
  # web_sys_unstable_apis is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: --cfg=web_sys_unstable_apis --deny warnings

  # See https://github.com/ericseppanen/cargo-cranky/issues/8
  RUSTDOCFLAGS: --deny warnings --deny rustdoc::missing_crate_level_docs

  # See: https://github.com/marketplace/actions/sccache-action
  SCCACHE_GHA_ENABLED: "false"

permissions:
  contents: "read"
  id-token: "write"

jobs:
  # ---------------------------------------------------------------------------

  py-lints:
    name: Python lints (ruff, mypy, â€¦)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}

      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          just-version: 1.5

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "rerun_py/requirements-lint.txt"

      - name: Install Python dependencies
        shell: bash
        run: |
          pip install --upgrade pip
          pip install -r rerun_py/requirements-lint.txt

      - name: Lint Python
        shell: bash
        run: |
          just py-lint

      - name: Check requirements
        shell: bash
        run: |
          just py-requirements

  # ---------------------------------------------------------------------------

  py-test-docs:
    name: Test Python Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: "rerun_py/requirements-doc.txt"

      - name: Install Python dependencies
        shell: bash
        run: |
          pip install --upgrade pip
          pip install -r rerun_py/requirements-doc.txt

      - name: Build via mkdocs
        shell: bash
        run: |
          mkdocs build --strict -f rerun_py/mkdocs.yml

  # ---------------------------------------------------------------------------

  no-codegen-changes:
    name: Check if running codegen would produce any changes
    runs-on: ubuntu-latest-16-cores
    container:
      image: rerunio/ci_docker:0.12.0
    env:
      RUSTC_WRAPPER: "sccache"
    steps:
      # Note: We explicitly don't override `ref` here. We need to see if changes would be made
      # in a context where we have merged with main. Otherwise we might miss changes such as one
      # PR introduces a new type and another PR changes the codegen.
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          cache_key: "build-linux"
          save_cache: true
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      # So we can format the Python code
      - name: Set up Python
        shell: bash
        run: |
          pip install -r rerun_py/requirements-lint.txt

      - uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: v0.16.1

      - name: Codegen check
        shell: bash
        run: |
          pixi run codegen --force --check

  # ---------------------------------------------------------------------------

  misc-rerun-lints:
    name: Rerun lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        shell: bash
        run: |
          pip install gitignore_parser
          pip install -r ./scripts/ci/requirements.txt

      - name: Rerun lints
        shell: bash
        run: |
          ./scripts/lint.py

      # NOTE: We don't want spurious failures caused by issues being closed, so this does not run on CI,
      # at least for the time being.
      # - name: Check for zombie TODOs
      #   shell: bash
      #   run: |
      #     ./scripts/zombie_todos.py --token ${{ secrets.GITHUB_TOKEN }}

      - name: Check for too large files
        shell: bash
        run: |
          ./scripts/ci/check_large_files.sh

      - name: Check Python example requirements
        shell: bash
        run: |
          ./scripts/ci/check_requirements.py

      - name: Check Python example thumbnails
        shell: bash
        run: |
          ./scripts/ci/thumbnails.py check

  # ---------------------------------------------------------------------------

  spell-check:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}

      - name: Check spelling of entire workspace
        uses: crate-ci/typos@v1.18.0

  # ---------------------------------------------------------------------------

  misc-formatting:
    name: Misc formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}

      - uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: v0.16.1

      - name: prettier --check
        run: pixi run misc-fmt-check
