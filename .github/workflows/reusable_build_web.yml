name: Reusable Build Web

on:
  workflow_call:
    inputs:
      CONCURRENCY:
        required: true
        type: string
      RELEASE_VERSION:
        required: false
        type: string
        default: "prerelease"
      CHANNEL: # `nightly` or `main`
        required: true
        type: string

concurrency:
  group: ${{ inputs.CONCURRENCY }}-build-web
  cancel-in-progress: true

env:
  # web_sys_unstable_apis is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: --cfg=web_sys_unstable_apis --deny warnings

  # See https://github.com/ericseppanen/cargo-cranky/issues/8
  RUSTDOCFLAGS: --deny warnings --deny rustdoc::missing_crate_level_docs

jobs:
  rs-build-web-viewer:
    name: Build Web (wasm32 + wasm-bindgen)
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest-16-cores

    container:
      image: rerunio/ci_docker:0.12.0

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          cache_key: "build-web"
          # Cache will be produced by `reusable_checks/rs-check-wasm`
          save_cache: false
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      - uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: v0.16.1

      - name: Build web-viewer (release)
        shell: bash
        run: |
          if [ ${{ inputs.CHANNEL }} = "nightly" ]; then
            export DEFAULT_EXAMPLES_MANIFEST_URL="https://app.rerun.io/version/nightly/examples_manifest.json"
          fi
          pixi run cargo run --locked -p re_build_web_viewer -- --release

      # We build a single manifest pointing to the `commit`
      # All the `pr`, `main`, release tag, etc. variants will always just point to the resolved commit
      - name: Build examples manifest
        shell: bash
        run: |
          full_commit="${{ (github.event_name == 'pull_request' && github.event.pull_request.head.sha) || github.sha }}"
          sha="$(echo $full_commit | cut -c1-7)"

          pixi run build-examples manifest \
            --base-url "https://app.rerun.io/commit/$sha" \
            --channel "${{ inputs.CHANNEL }}" \
            web_viewer/examples_manifest.json

      - name: Upload web assets
        uses: actions/upload-artifact@v3
        with:
          name: web_viewer
          path: web_viewer
