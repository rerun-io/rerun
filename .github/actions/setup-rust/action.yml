# This action sets up:
# - The correct version of Rust based on the `rust-toolchain` file
# - All components + targets specified in `rust-toolchain`
# - Caching of dependencies via `Swatinem/rust-cache`
# - Caching of individual compilation requests via `sccache` and GCS
#   - Uses our own `rerun-io/sccache-action` which supports GCS
#
# Note that due to the use of GCS as an sccache storage backend,
# this action also sets up GCP credentials as a side effect.
# There is no harm to setting up the credentials twice accidentally,
# but care should be taken not to do that, as it's wasteful.

name: "Setup Rust"

inputs:
  cache_key:
    type: string
    required: true
  save_cache:
    type: boolean
    required: false
    default: false
  workload_identity_provider:
    type: string
    required: true
  service_account:
    type: string
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up GCP credentials
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}

    - name: Ensure correct version of Rust is installed
      run: |
        # This is the only way to force rustup to install the version of Rust
        # and the components/targets specified in our `rust-toolchain` file.
        # It might break at some point: https://github.com/rust-lang/rustup/issues/1397
        rustup show
      shell: bash

    # Rust-cache will cache our dependencies, which is a large chunk of the build
    # See: https://github.com/Swatinem/rust-cache
    - name: Set up rust-cache
      uses: Swatinem/rust-cache@v2
      with:
        # Only save the cache when on the main branch.
        # The cache is quite limited in size (~10 GB), and the
        # individual rust-cache entries are as much as 2 GB.
        save-if: ${{ inputs.save_cache && github.ref == 'refs/heads/main' }}
        shared-key: ${{ inputs.cache_key }}

    - name: Set up sccache
      uses: rerun-io/sccache-action@v0.7.0
      with:
        use_gcs: true
        gcs_bucket: rerun-sccache
        gcs_read_only: false

    - name: Display sccache config
      shell: bash
      run: |
        cat $HOME/.config/sccache/config

    - name: Verify sccache
      shell: bash
      run: |
        sccache --show-stats

